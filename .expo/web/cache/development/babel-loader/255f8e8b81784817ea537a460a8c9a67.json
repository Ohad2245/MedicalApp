{"ast":null,"code":"'use strict';\n\nvar isString = require('lodash/lang/isString');\nfunction verification(isValid, isPotentiallyValid, isValidForThisYear) {\n  return {\n    isValid: isValid,\n    isPotentiallyValid: isPotentiallyValid,\n    isValidForThisYear: isValidForThisYear || false\n  };\n}\nfunction expirationMonth(value) {\n  var month, result;\n  var currentMonth = new Date().getMonth() + 1;\n  if (!isString(value)) {\n    return verification(false, false);\n  }\n  if (value.replace(/\\s/g, '') === '' || value === '0') {\n    return verification(false, true);\n  }\n  if (!/^\\d*$/.test(value)) {\n    return verification(false, false);\n  }\n  month = parseInt(value, 10);\n  if (isNaN(value)) {\n    return verification(false, false);\n  }\n  result = month > 0 && month < 13;\n  return verification(result, result, result && month >= currentMonth);\n}\nmodule.exports = expirationMonth;","map":{"version":3,"names":["isString","require","verification","isValid","isPotentiallyValid","isValidForThisYear","expirationMonth","value","month","result","currentMonth","Date","getMonth","replace","test","parseInt","isNaN","module","exports"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/node_modules/react-native-credit-card-input-plus/node_modules/card-validator/src/expiration-month.js"],"sourcesContent":["'use strict';\n\nvar isString = require('lodash/lang/isString');\n\nfunction verification(isValid, isPotentiallyValid, isValidForThisYear) {\n  return {\n    isValid: isValid,\n    isPotentiallyValid: isPotentiallyValid,\n    isValidForThisYear: isValidForThisYear || false\n  };\n}\n\nfunction expirationMonth(value) {\n  var month, result;\n  var currentMonth = new Date().getMonth() + 1;\n\n  if (!isString(value)) {\n    return verification(false, false);\n  }\n  if (value.replace(/\\s/g, '') === '' || value === '0') {\n    return verification(false, true);\n  }\n  if (!/^\\d*$/.test(value)) {\n    return verification(false, false);\n  }\n\n  month = parseInt(value, 10);\n\n  if (isNaN(value)) {\n    return verification(false, false);\n  }\n\n  result = month > 0 && month < 13;\n\n  return verification(result, result, result && month >= currentMonth);\n}\n\nmodule.exports = expirationMonth;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAE9C,SAASC,YAAY,CAACC,OAAO,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAE;EACrE,OAAO;IACLF,OAAO,EAAEA,OAAO;IAChBC,kBAAkB,EAAEA,kBAAkB;IACtCC,kBAAkB,EAAEA,kBAAkB,IAAI;EAC5C,CAAC;AACH;AAEA,SAASC,eAAe,CAACC,KAAK,EAAE;EAC9B,IAAIC,KAAK,EAAEC,MAAM;EACjB,IAAIC,YAAY,GAAG,IAAIC,IAAI,EAAE,CAACC,QAAQ,EAAE,GAAG,CAAC;EAE5C,IAAI,CAACZ,QAAQ,CAACO,KAAK,CAAC,EAAE;IACpB,OAAOL,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACnC;EACA,IAAIK,KAAK,CAACM,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,IAAIN,KAAK,KAAK,GAAG,EAAE;IACpD,OAAOL,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC;EAClC;EACA,IAAI,CAAC,OAAO,CAACY,IAAI,CAACP,KAAK,CAAC,EAAE;IACxB,OAAOL,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACnC;EAEAM,KAAK,GAAGO,QAAQ,CAACR,KAAK,EAAE,EAAE,CAAC;EAE3B,IAAIS,KAAK,CAACT,KAAK,CAAC,EAAE;IAChB,OAAOL,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACnC;EAEAO,MAAM,GAAGD,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,EAAE;EAEhC,OAAON,YAAY,CAACO,MAAM,EAAEA,MAAM,EAAEA,MAAM,IAAID,KAAK,IAAIE,YAAY,CAAC;AACtE;AAEAO,MAAM,CAACC,OAAO,GAAGZ,eAAe"},"metadata":{},"sourceType":"script"}