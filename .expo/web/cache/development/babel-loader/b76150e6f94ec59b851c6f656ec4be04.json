{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport SnapshotError from \"./SnapshotError\";\nimport DocumentSnapshot from \"./DocumentSnapshot\";\nimport CollectionReference from \"./CollectionReference\";\nimport { parseUpdateArgs } from \"./utils\";\nimport { buildNativeMap } from \"./utils/serialize\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { firestoreAutoId, isFunction, isObject } from \"../../utils\";\nimport { getAppEventName, SharedEventEmitter } from \"../../utils/events\";\n\nvar DocumentReference = function () {\n  function DocumentReference(firestore, documentPath) {\n    _classCallCheck(this, DocumentReference);\n\n    this._documentPath = documentPath;\n    this._firestore = firestore;\n  }\n\n  _createClass(DocumentReference, [{\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._documentPath.id;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = this._documentPath.parent();\n\n      return new CollectionReference(this._firestore, parentPath);\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._documentPath.relativeName;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherDocumentReference) {\n      if (!(otherDocumentReference instanceof DocumentReference)) {\n        throw new Error('firebase.firestore.DocumentReference.isEqual(*) expects an instance of DocumentReference.');\n      }\n\n      if (this.path !== otherDocumentReference.path) return false;\n\n      if (this._firestore.app.name !== otherDocumentReference._firestore.app.name) {\n        return false;\n      }\n\n      if (this._firestore.app.options.projectId !== otherDocumentReference._firestore.app.options.projectId) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"collection\",\n    value: function collection(collectionPath) {\n      var path = this._documentPath.child(collectionPath);\n\n      if (!path.isCollection) {\n        throw new Error('Argument \"collectionPath\" must point to a collection.');\n      }\n\n      return new CollectionReference(this._firestore, path);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return getNativeModule(this._firestore).documentDelete(this.path);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      var _this = this;\n\n      if (options) {\n        if (!isObject(options)) {\n          return Promise.reject(new Error('DocumentReference.get failed: First argument must be an object.'));\n        }\n\n        if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n          return Promise.reject(new Error('DocumentReference.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n        }\n      }\n\n      return getNativeModule(this._firestore).documentGet(this.path, options).then(function (result) {\n        return new DocumentSnapshot(_this._firestore, result);\n      });\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n      var _this2 = this;\n\n      var observer;\n      var docListenOptions = {};\n\n      if (isFunction(optionsOrObserverOrOnNext)) {\n        if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n          throw new Error('DocumentReference.onSnapshot failed: Second argument must be a valid function.');\n        }\n\n        observer = {\n          next: optionsOrObserverOrOnNext,\n          error: observerOrOnNextOrOnError\n        };\n      } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n        if (optionsOrObserverOrOnNext.next) {\n          if (isFunction(optionsOrObserverOrOnNext.next)) {\n            if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n              throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n            }\n\n            observer = {\n              next: optionsOrObserverOrOnNext.next,\n              error: optionsOrObserverOrOnNext.error\n            };\n          } else {\n            throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n          docListenOptions = optionsOrObserverOrOnNext;\n\n          if (isFunction(observerOrOnNextOrOnError)) {\n            if (onError && !isFunction(onError)) {\n              throw new Error('DocumentReference.onSnapshot failed: Third argument must be a valid function.');\n            }\n\n            observer = {\n              next: observerOrOnNextOrOnError,\n              error: onError\n            };\n          } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n            if (isFunction(observerOrOnNextOrOnError.next)) {\n              if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n                throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n              }\n\n              observer = {\n                next: observerOrOnNextOrOnError.next,\n                error: observerOrOnNextOrOnError.error\n              };\n            } else {\n              throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n            }\n          } else {\n            throw new Error('DocumentReference.onSnapshot failed: Second argument must be a function or observer.');\n          }\n        } else {\n          throw new Error('DocumentReference.onSnapshot failed: First argument must be a function, observer or options.');\n        }\n      } else {\n        throw new Error('DocumentReference.onSnapshot failed: Called with invalid arguments.');\n      }\n\n      var listenerId = firestoreAutoId();\n\n      var listener = function listener(nativeDocumentSnapshot) {\n        var documentSnapshot = new DocumentSnapshot(_this2.firestore, nativeDocumentSnapshot);\n        observer.next(documentSnapshot);\n      };\n\n      var snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, \"onDocumentSnapshot:\" + listenerId), listener);\n      var unsubscribe;\n      var errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, \"onDocumentSnapshotError:\" + listenerId), function (e) {\n        if (unsubscribe) unsubscribe();\n        var error = new SnapshotError(e);\n        if (observer.error) observer.error(error);else _this2.firestore.log.error(error);\n      });\n      getNativeModule(this._firestore).documentOnSnapshot(this.path, listenerId, docListenOptions);\n\n      unsubscribe = function unsubscribe() {\n        snapshotSubscription.remove();\n        errorSubscription.remove();\n        getNativeModule(_this2._firestore).documentOffSnapshot(_this2.path, listenerId);\n      };\n\n      return unsubscribe;\n    }\n  }, {\n    key: \"set\",\n    value: function set(data, options) {\n      var nativeData = buildNativeMap(data);\n      return getNativeModule(this._firestore).documentSet(this.path, nativeData, options);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var data = parseUpdateArgs(args, 'DocumentReference.update');\n      var nativeData = buildNativeMap(data);\n      return getNativeModule(this._firestore).documentUpdate(this.path, nativeData);\n    }\n  }]);\n\n  return DocumentReference;\n}();\n\nexport { DocumentReference as default };","map":{"version":3,"names":["SnapshotError","DocumentSnapshot","CollectionReference","parseUpdateArgs","buildNativeMap","getNativeModule","firestoreAutoId","isFunction","isObject","getAppEventName","SharedEventEmitter","DocumentReference","firestore","documentPath","_documentPath","_firestore","id","parentPath","parent","relativeName","otherDocumentReference","Error","path","app","name","options","projectId","collectionPath","child","isCollection","documentDelete","Promise","reject","source","documentGet","then","result","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","observer","docListenOptions","next","error","Object","prototype","hasOwnProperty","call","listenerId","listener","nativeDocumentSnapshot","documentSnapshot","snapshotSubscription","addListener","unsubscribe","errorSubscription","e","log","documentOnSnapshot","remove","documentOffSnapshot","data","nativeData","documentSet","args","documentUpdate"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/firestore/DocumentReference.js"],"sourcesContent":["/**\n * \n * DocumentReference representation wrapper\n */\nimport SnapshotError from './SnapshotError';\nimport DocumentSnapshot from './DocumentSnapshot';\nimport CollectionReference from './CollectionReference';\nimport { parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\nimport { getNativeModule } from '../../utils/native';\nimport { firestoreAutoId, isFunction, isObject } from '../../utils';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\n\n/**\n * @class DocumentReference\n */\nexport default class DocumentReference {\n  constructor(firestore, documentPath) {\n    this._documentPath = documentPath;\n    this._firestore = firestore;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._documentPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._documentPath.parent(); // $FlowExpectedError: parentPath can never be null\n\n\n    return new CollectionReference(this._firestore, parentPath);\n  }\n\n  get path() {\n    return this._documentPath.relativeName;\n  }\n\n  isEqual(otherDocumentReference) {\n    if (!(otherDocumentReference instanceof DocumentReference)) {\n      throw new Error('firebase.firestore.DocumentReference.isEqual(*) expects an instance of DocumentReference.');\n    } // check paths match\n\n\n    if (this.path !== otherDocumentReference.path) return false; // check same firestore app name\n\n    if (this._firestore.app.name !== otherDocumentReference._firestore.app.name) {\n      return false;\n    } // check same firestore app projectId\n    // noinspection RedundantIfStatementJS\n\n\n    if (this._firestore.app.options.projectId !== otherDocumentReference._firestore.app.options.projectId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  collection(collectionPath) {\n    const path = this._documentPath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error('Argument \"collectionPath\" must point to a collection.');\n    }\n\n    return new CollectionReference(this._firestore, path);\n  }\n\n  delete() {\n    return getNativeModule(this._firestore).documentDelete(this.path);\n  }\n\n  get(options) {\n    if (options) {\n      if (!isObject(options)) {\n        return Promise.reject(new Error('DocumentReference.get failed: First argument must be an object.'));\n      }\n\n      if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        return Promise.reject(new Error('DocumentReference.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n      }\n    }\n\n    return getNativeModule(this._firestore).documentGet(this.path, options).then(result => new DocumentSnapshot(this._firestore, result));\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    let observer;\n    let docListenOptions = {}; // Called with: onNext, ?onError\n\n    if (isFunction(optionsOrObserverOrOnNext)) {\n      if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n        throw new Error('DocumentReference.onSnapshot failed: Second argument must be a valid function.');\n      } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n      observer = {\n        next: optionsOrObserverOrOnNext,\n        error: observerOrOnNextOrOnError\n      };\n    } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n      // Called with: Observer\n      if (optionsOrObserverOrOnNext.next) {\n        if (isFunction(optionsOrObserverOrOnNext.next)) {\n          if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n            throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: optionsOrObserverOrOnNext.next,\n            error: optionsOrObserverOrOnNext.error\n          };\n        } else {\n          throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n        }\n      } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n        docListenOptions = optionsOrObserverOrOnNext; // Called with: Options, onNext, ?onError\n\n        if (isFunction(observerOrOnNextOrOnError)) {\n          if (onError && !isFunction(onError)) {\n            throw new Error('DocumentReference.onSnapshot failed: Third argument must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: observerOrOnNextOrOnError,\n            error: onError\n          }; // Called with Options, Observer\n        } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n          if (isFunction(observerOrOnNextOrOnError.next)) {\n            if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n              throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n            }\n\n            observer = {\n              next: observerOrOnNextOrOnError.next,\n              error: observerOrOnNextOrOnError.error\n            };\n          } else {\n            throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else {\n          throw new Error('DocumentReference.onSnapshot failed: Second argument must be a function or observer.');\n        }\n      } else {\n        throw new Error('DocumentReference.onSnapshot failed: First argument must be a function, observer or options.');\n      }\n    } else {\n      throw new Error('DocumentReference.onSnapshot failed: Called with invalid arguments.');\n    }\n\n    const listenerId = firestoreAutoId();\n\n    const listener = nativeDocumentSnapshot => {\n      const documentSnapshot = new DocumentSnapshot(this.firestore, nativeDocumentSnapshot);\n      observer.next(documentSnapshot);\n    }; // Listen to snapshot events\n\n\n    const snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onDocumentSnapshot:${listenerId}`), listener);\n    let unsubscribe; // listen for snapshot error events\n\n    const errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onDocumentSnapshotError:${listenerId}`), e => {\n      if (unsubscribe) unsubscribe();\n      const error = new SnapshotError(e);\n      if (observer.error) observer.error(error);else this.firestore.log.error(error);\n    }); // Add the native listener\n\n    getNativeModule(this._firestore).documentOnSnapshot(this.path, listenerId, docListenOptions); // return an unsubscribe method\n\n    unsubscribe = () => {\n      snapshotSubscription.remove();\n      errorSubscription.remove(); // cancel native listener\n\n      getNativeModule(this._firestore).documentOffSnapshot(this.path, listenerId);\n    };\n\n    return unsubscribe;\n  }\n\n  set(data, options) {\n    const nativeData = buildNativeMap(data);\n    return getNativeModule(this._firestore).documentSet(this.path, nativeData, options);\n  }\n\n  update(...args) {\n    const data = parseUpdateArgs(args, 'DocumentReference.update');\n    const nativeData = buildNativeMap(data);\n    return getNativeModule(this._firestore).documentUpdate(this.path, nativeData);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}