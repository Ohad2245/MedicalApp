{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport cardValidator from 'card-validator';\nimport * as Animatable from 'react-native-animatable';\nimport CardSide, { CardSideEnum } from \"./CardSide\";\nimport CardInput from \"./CardInput\";\nvar validationSchema = yup.object().shape({\n  holder: yup.string().defined().test('is-valid-holder', 'Holder name is invalid', function (holderName) {\n    var _this$options$context = this.options.context.runtime,\n      runtime = _this$options$context === void 0 ? false : _this$options$context;\n    var _cardValidator$cardho = cardValidator.cardholderName(holderName),\n      isPotentiallyValid = _cardValidator$cardho.isPotentiallyValid,\n      isValid = _cardValidator$cardho.isValid;\n    return runtime ? isPotentiallyValid : isValid;\n  }),\n  number: yup.string().defined().test('is-valid-card-number', 'Card number is invalid', function (cardNumber) {\n    var _this$options$context2 = this.options.context.runtime,\n      runtime = _this$options$context2 === void 0 ? false : _this$options$context2;\n    var _cardValidator$number = cardValidator.number(cardNumber),\n      isPotentiallyValid = _cardValidator$number.isPotentiallyValid,\n      isValid = _cardValidator$number.isValid;\n    return runtime ? isPotentiallyValid : isValid;\n  }),\n  expiration: yup.string().defined().test('is-valid-expiration', 'Card expiration is invalid', function (expiration) {\n    var _this$options$context3 = this.options.context.runtime,\n      runtime = _this$options$context3 === void 0 ? false : _this$options$context3;\n    var _cardValidator$expira = cardValidator.expirationDate(expiration),\n      isPotentiallyValid = _cardValidator$expira.isPotentiallyValid,\n      isValid = _cardValidator$expira.isValid;\n    return runtime ? isPotentiallyValid : isValid;\n  }),\n  cvv: yup.string().defined().test('is-valid-cvv', 'Card CVV is invalid', function (cvv) {\n    var _this$options$context4 = this.options.context.runtime,\n      runtime = _this$options$context4 === void 0 ? false : _this$options$context4;\n    var _cardValidator$cvv = cardValidator.cvv(cvv),\n      isPotentiallyValid = _cardValidator$cvv.isPotentiallyValid,\n      isValid = _cardValidator$cvv.isValid;\n    return runtime ? isPotentiallyValid : isValid;\n  })\n});\nvar Images = {\n  chip: require(\"./images/chip.png\"),\n  brands: {\n    default: '',\n    visa: require(\"./images/brands/visa.png\")\n  },\n  icons: {\n    rotate: require(\"./images/icons/rotate.png\")\n  }\n};\nvar defaultCardConfig = {\n  numberMask: '9999 9999 9999 9999',\n  cvvMask: '999',\n  brandImage: Images.brands.default,\n  brandName: ''\n};\nvar CreditCard = React.forwardRef(function (_ref, ref) {\n  var placeholders = _ref.placeholders,\n    labels = _ref.labels,\n    background = _ref.background,\n    textColor = _ref.textColor,\n    errorTextColor = _ref.errorTextColor,\n    placeholderTextColor = _ref.placeholderTextColor,\n    initialValues = _ref.initialValues,\n    expirationDateFormat = _ref.expirationDateFormat,\n    onValidStateChange = _ref.onValidStateChange;\n  var _React$useState = React.useState(initialValues),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    cardData = _React$useState2[0],\n    setCardData = _React$useState2[1];\n  var _React$useState3 = React.useState(CardSideEnum.FRONT),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    activeSide = _React$useState4[0],\n    setActiveSide = _React$useState4[1];\n  var _React$useState5 = React.useState(defaultCardConfig),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    cardConfig = _React$useState6[0],\n    setCardConfig = _React$useState6[1];\n  var _React$useState7 = React.useState({\n      number: false,\n      holder: false,\n      expiration: false,\n      cvv: false\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    errors = _React$useState8[0],\n    setErrors = _React$useState8[1];\n  var frontOpacityRef = React.useRef(new Animated.Value(1)).current;\n  var backOpacityRef = React.useRef(new Animated.Value(0)).current;\n  var rotationValue = React.useRef(new Animated.Value(0)).current;\n  var numberInputRef = React.useRef(null);\n  var holderInputRef = React.useRef(null);\n  var expirationInputRef = React.useRef(null);\n  var cvvInputRef = React.useRef(null);\n  var cardDataIsValid = React.useRef(false);\n  var textStyle = {\n    color: textColor\n  };\n  var rotate = React.useCallback(function () {\n    var fadeAnimationConfig = function fadeAnimationConfig(appearing) {\n      return {\n        toValue: appearing ? 1 : 0,\n        duration: 200,\n        useNativeDriver: true\n      };\n    };\n    var rotateAnimationConfig = function rotateAnimationConfig(isAppearing) {\n      return {\n        toValue: isAppearing ? 1 : 0,\n        duration: 400,\n        useNativeDriver: true\n      };\n    };\n    var isFrontActive = activeSide === CardSideEnum.FRONT;\n    Animated.parallel([Animated.timing(frontOpacityRef, fadeAnimationConfig(!isFrontActive)), Animated.timing(backOpacityRef, fadeAnimationConfig(isFrontActive)), Animated.timing(rotationValue, rotateAnimationConfig(isFrontActive))]).start(function () {\n      var newActiveSide = isFrontActive ? CardSideEnum.BACK : CardSideEnum.FRONT;\n      setActiveSide(newActiveSide);\n    });\n  }, [activeSide, backOpacityRef, frontOpacityRef, rotationValue]);\n  var expirationMask = expirationDateFormat === 'MM/YY' ? '99/99' : '99/9999';\n  var validateField = React.useCallback(function (name, value) {\n    var values = _defineProperty({}, name, value);\n    var response = {\n      isPontentiallyValid: false,\n      isValid: false,\n      error: null\n    };\n    try {\n      validationSchema.validateSyncAt(name, values, {\n        context: {\n          runtime: true\n        }\n      });\n      response.isPontentiallyValid = true;\n      validationSchema.validateSyncAt(name, values, {\n        context: {\n          runtime: false\n        }\n      });\n      response.isValid = true;\n    } catch (validationError) {\n      setErrors(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, response.isPontentiallyValid ? false : validationError));\n      });\n    }\n    return response;\n  }, []);\n  var loadCardConfig = function loadCardConfig(cardNumber) {\n    var _cardValidator$number2 = cardValidator.number(cardNumber),\n      _cardValidator$number3 = _cardValidator$number2.card,\n      card = _cardValidator$number3 === void 0 ? null : _cardValidator$number3;\n    if (!card) {\n      setCardConfig(_objectSpread({}, defaultCardConfig));\n      return;\n    }\n    var _card$type = card.type,\n      type = _card$type === void 0 ? '' : _card$type,\n      _card$code = card.code,\n      code = _card$code === void 0 ? {\n        size: 0\n      } : _card$code,\n      _card$gaps = card.gaps,\n      gaps = _card$gaps === void 0 ? [] : _card$gaps,\n      _card$lengths = card.lengths,\n      lengths = _card$lengths === void 0 ? [] : _card$lengths,\n      _card$niceType = card.niceType,\n      niceType = _card$niceType === void 0 ? '' : _card$niceType;\n    setCardData(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        brand: type\n      });\n    });\n    setCardConfig(function (prev) {\n      var maxLength = Math.max.apply(Math, _toConsumableArray(lengths));\n      var maskChars = ''.padStart(maxLength, '9').split('');\n      for (var i = 0; i < gaps.length; i += 1) {\n        maskChars.splice(gaps[i] + i, 0, ' ');\n      }\n      var numberMask = maskChars.join('');\n      var cvvMask = ''.padStart(code.size, '9');\n      var brandImage = Images.brands[type] ? Images.brands[type] : Images.brands.default;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        numberMask: numberMask,\n        cvvMask: cvvMask,\n        brandImage: brandImage,\n        brandName: niceType\n      });\n    });\n  };\n  var handleInputChange = React.useCallback(function (name, text) {\n    setCardData(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, text));\n    });\n    var _validateField = validateField(name, text),\n      isValid = _validateField.isValid;\n    if (name === 'number') {\n      loadCardConfig(text);\n      if (isValid) {\n        focusField(holderInputRef);\n      }\n    } else if (name === 'expiration' && isValid && text.length === expirationMask.length) {\n      focusField(cvvInputRef);\n      rotate();\n    }\n  }, [validateField, rotate, expirationMask]);\n  var getSideStyle = React.useCallback(function (side) {\n    var outputRange = side === CardSideEnum.FRONT ? [1, -1] : [-1, 1];\n    return {\n      transform: [{\n        scaleX: rotationValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: outputRange\n        })\n      }],\n      opacity: side === CardSideEnum.FRONT ? frontOpacityRef : backOpacityRef,\n      zIndex: side === activeSide ? 1 : 0\n    };\n  }, [activeSide, backOpacityRef, frontOpacityRef, rotationValue]);\n  var focusField = function focusField(field) {\n    if (!field || !field.current) return;\n    field.current.focus();\n  };\n  var submit = React.useCallback(function () {\n    var response = {\n      error: null,\n      data: cardData\n    };\n    try {\n      validationSchema.validateSync(cardData, {\n        context: {\n          runtime: false\n        },\n        abortEarly: false\n      });\n    } catch (err) {\n      response.error = err;\n    }\n    return response;\n  }, [cardData]);\n  React.useEffect(function () {\n    if (cardDataIsValid.current !== undefined) {\n      try {\n        validationSchema.validateSync(cardData, {\n          context: {\n            runtime: false\n          }\n        });\n        onValidStateChange(true);\n      } catch (validationErrors) {\n        onValidStateChange(false, validationErrors);\n      }\n    }\n  }, [cardData, onValidStateChange]);\n  React.useImperativeHandle(ref, function () {\n    return {\n      submit: submit\n    };\n  });\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss\n  }, React.createElement(View, {\n    style: styles.cardWrapper\n  }, React.createElement(CardSide, {\n    background: background,\n    style: [[getSideStyle(CardSideEnum.FRONT)]]\n  }, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(TouchableOpacity, {\n    onPress: rotate\n  }, React.createElement(Image, {\n    source: Images.icons.rotate\n  })), !!cardConfig.brandImage && React.createElement(Animatable.Image, {\n    source: cardConfig.brandImage,\n    animation: \"slideInRight\",\n    duration: 400,\n    useNativeDriver: true\n  }), !!(!cardConfig.brandImage && cardConfig.brandName) && React.createElement(Animatable.Text, {\n    style: [styles.textData, textStyle],\n    animation: \"slideInRight\",\n    duration: 400\n  }, cardConfig.brandName)), React.createElement(Image, {\n    source: Images.chip,\n    style: styles.imageChip\n  }), React.createElement(View, null, React.createElement(CardInput, {\n    placeholderTextColor: placeholderTextColor,\n    name: \"number\",\n    onChange: handleInputChange,\n    value: cardData === null || cardData === void 0 ? void 0 : cardData.number,\n    autoFocus: true,\n    placeholder: placeholders.number,\n    style: [styles.textCardNumber, {\n      color: errors.number ? errorTextColor : textColor\n    }],\n    maxLength: cardConfig.numberMask.length,\n    autocompleteType: \"cc-number\",\n    textContentType: \"creditCardNumber\",\n    maskProps: {\n      type: 'custom',\n      options: {\n        mask: cardConfig.numberMask\n      }\n    },\n    refInput: numberInputRef,\n    returnKeyType: \"next\",\n    autoCorrect: false,\n    onSubmitEditing: function onSubmitEditing() {\n      return focusField(holderInputRef);\n    },\n    blurOnSubmit: false\n  })), React.createElement(View, {\n    style: styles.footer\n  }, React.createElement(View, {\n    style: styles.holderWrapper\n  }, React.createElement(Text, {\n    style: [styles.textLabel, textStyle]\n  }, labels.holder), React.createElement(CardInput, {\n    placeholderTextColor: placeholderTextColor,\n    name: \"holder\",\n    autocompleteType: \"name\",\n    textContentType: \"name\",\n    returnKeyType: \"next\",\n    onChange: handleInputChange,\n    placeholder: placeholders.holder,\n    autoCapitalize: \"characters\",\n    style: [styles.textData, {\n      color: errors.holder ? errorTextColor : textColor\n    }],\n    value: cardData === null || cardData === void 0 ? void 0 : cardData.holder,\n    refInput: holderInputRef,\n    onSubmitEditing: function onSubmitEditing() {\n      return focusField(expirationInputRef);\n    },\n    blurOnSubmit: false\n  })), React.createElement(View, {\n    style: styles.expirationWrapper\n  }, React.createElement(Text, {\n    style: [styles.textLabel, textStyle]\n  }, labels.expiration), React.createElement(CardInput, {\n    placeholderTextColor: placeholderTextColor,\n    name: \"expiration\",\n    autocompleteType: \"cc-exp\",\n    keyboardType: \"numbers-and-punctuation\",\n    returnKeyType: \"next\",\n    onChange: handleInputChange,\n    placeholder: placeholders.expiration,\n    style: [styles.textData, {\n      color: errors.expiration && cardData.expiration.length === expirationMask.length ? errorTextColor : textColor\n    }],\n    value: cardData === null || cardData === void 0 ? void 0 : cardData.expiration,\n    maxLength: 7,\n    maskProps: {\n      type: 'custom',\n      options: {\n        mask: expirationMask\n      }\n    },\n    refInput: expirationInputRef,\n    onSubmitEditing: function onSubmitEditing() {\n      focusField(cvvInputRef);\n      rotate();\n    },\n    blurOnSubmit: false\n  })))), React.createElement(CardSide, {\n    style: [getSideStyle(CardSideEnum.BACK)],\n    background: background\n  }, React.createElement(View, {\n    style: styles.strip\n  }), React.createElement(TouchableOpacity, {\n    onPress: rotate\n  }, React.createElement(Image, {\n    source: Images.icons.rotate\n  })), React.createElement(View, {\n    style: styles.cvvWrapper,\n    pointerEvents: \"box-none\"\n  }, React.createElement(Text, {\n    style: [styles.textLabel, textStyle]\n  }, labels.cvv), React.createElement(CardInput, {\n    placeholderTextColor: placeholderTextColor,\n    name: \"cvv\",\n    autocompleteType: \"cc-csc\",\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    onChange: handleInputChange,\n    placeholder: placeholders.cvv,\n    style: [styles.textData, {\n      color: errors.cvv ? errorTextColor : textColor\n    }],\n    value: cardData === null || cardData === void 0 ? void 0 : cardData.cvv,\n    maxLength: cardConfig.cvvMask.length,\n    maskProps: {\n      type: 'custom',\n      options: {\n        mask: cardConfig.cvvMask\n      }\n    },\n    onBlur: rotate,\n    refInput: cvvInputRef\n  })))));\n});\nCreditCard.defaultProps = {\n  placeholders: {\n    number: '0000 0000 0000 0000',\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'MM/YYYY',\n    cvv: '000'\n  },\n  labels: {\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'VENCIMENTO',\n    cvv: 'CÓD. SEGURANÇA'\n  },\n  expirationDateFormat: 'MM/YYYY',\n  textColor: '#FFFFFF',\n  placeholderTextColor: '#9B84A9',\n  initialValues: {\n    number: '',\n    holder: '',\n    expiration: '',\n    cvv: '',\n    brand: ''\n  },\n  errorTextColor: '#F15A5B',\n  onValidStateChange: function onValidStateChange() {}\n};\nvar styles = StyleSheet.create({\n  cardWrapper: {\n    height: '100%',\n    maxHeight: 220,\n    position: 'relative',\n    width: '100%',\n    maxWidth: 350,\n    shadowColor: 'rgba(0,0,0,0.6)',\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    shadowOpacity: 0.37,\n    shadowRadius: 7.49,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  background: {\n    resizeMode: 'cover',\n    width: '100%',\n    height: '100%'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8\n  },\n  textLabel: {\n    fontSize: 10 / PixelRatio.getFontScale(),\n    textTransform: 'uppercase'\n  },\n  textData: {\n    fontWeight: 'bold',\n    fontSize: 16 / PixelRatio.getFontScale()\n  },\n  textCardNumber: {\n    fontSize: 20 / PixelRatio.getFontScale(),\n    fontWeight: 'bold',\n    marginBottom: 8,\n    marginTop: 16,\n    letterSpacing: 2\n  },\n  imageChip: {\n    marginTop: 16\n  },\n  footer: {\n    marginTop: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  strip: {\n    backgroundColor: 'rgba(0,0,0,.6)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    marginTop: 48,\n    height: 40\n  },\n  cvvWrapper: {\n    height: '100%',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    bottom: 24\n  },\n  holderWrapper: {\n    flex: 2,\n    marginRight: 16\n  },\n  expirationWrapper: {\n    flex: 1,\n    alignItems: 'flex-end'\n  }\n});\nexport default CreditCard;","map":{"version":3,"sources":["CreditCard.tsx"],"names":["React","yup","cardValidator","Animatable","CardSide","CardSideEnum","CardInput","validationSchema","object","shape","holder","string","defined","test","holderName","runtime","options","context","isPotentiallyValid","isValid","cardholderName","number","cardNumber","expiration","expirationDate","cvv","Images","chip","require","brands","default","visa","icons","rotate","defaultCardConfig","numberMask","cvvMask","brandImage","brandName","CreditCard","forwardRef","placeholders","labels","background","textColor","errorTextColor","placeholderTextColor","initialValues","expirationDateFormat","onValidStateChange","ref","cardData","setCardData","useState","activeSide","setActiveSide","FRONT","cardConfig","setCardConfig","errors","setErrors","frontOpacityRef","useRef","Animated","Value","current","backOpacityRef","rotationValue","numberInputRef","holderInputRef","expirationInputRef","cvvInputRef","cardDataIsValid","textStyle","color","useCallback","fadeAnimationConfig","appearing","toValue","duration","useNativeDriver","rotateAnimationConfig","isAppearing","isFrontActive","parallel","timing","start","newActiveSide","BACK","expirationMask","validateField","name","value","values","response","isPontentiallyValid","error","validateSyncAt","validationError","prev","loadCardConfig","card","type","code","size","gaps","lengths","niceType","brand","maxLength","Math","max","maskChars","padStart","split","i","length","splice","join","handleInputChange","text","focusField","getSideStyle","side","outputRange","transform","scaleX","interpolate","inputRange","opacity","zIndex","field","focus","submit","data","validateSync","abortEarly","err","useEffect","undefined","validationErrors","useImperativeHandle","Keyboard","dismiss","styles","cardWrapper","header","textData","imageChip","textCardNumber","mask","footer","holderWrapper","textLabel","expirationWrapper","strip","cvvWrapper","defaultProps","create","height","maxHeight","position","width","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderRadius","justifyContent","alignItems","resizeMode","flexDirection","marginBottom","fontSize","PixelRatio","getFontScale","textTransform","fontWeight","marginTop","letterSpacing","backgroundColor","left","right","bottom","flex","marginRight"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable global-require */\nimport * as React from 'react';\nimport * as yup from 'yup';\n\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  Animated,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n  PixelRatio,\n} from 'react-native';\n\n// import CreditCardType from 'credit-card-type';\nimport cardValidator from 'card-validator';\nimport * as Animatable from 'react-native-animatable';\n\nimport CardSide, { CardSideEnum } from './CardSide';\nimport CardInput from './CardInput';\n\nconst validationSchema = yup.object().shape({\n  holder: yup\n    .string()\n    .defined()\n    .test('is-valid-holder', 'Holder name is invalid', function (\n      holderName: any\n    ) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.cardholderName(\n        holderName\n      );\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  number: yup\n    .string()\n    .defined()\n    .test('is-valid-card-number', 'Card number is invalid', function (\n      cardNumber: any\n    ) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.number(cardNumber);\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  expiration: yup\n    .string()\n    .defined()\n    .test('is-valid-expiration', 'Card expiration is invalid', function (\n      expiration: any\n    ) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.expirationDate(\n        expiration\n      );\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  cvv: yup\n    .string()\n    .defined()\n    .test('is-valid-cvv', 'Card CVV is invalid', function (cvv: any) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.cvv(cvv);\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n});\n\nconst Images: any = {\n  chip: require('./images/chip.png'),\n  brands: {\n    default: '',\n    visa: require('./images/brands/visa.png'),\n  },\n  icons: {\n    rotate: require('./images/icons/rotate.png'),\n  },\n};\n\nexport type CreditCardType = {\n  submit: () => void;\n};\n\ninterface CardData {\n  number?: string;\n  holder?: string;\n  expiration?: string;\n  cvv?: string;\n  brand?: string;\n}\n\ninterface CreditCardProps {\n  placeholders?: {\n    number?: string;\n    holder?: string;\n    expiration?: string;\n    cvv?: string;\n  };\n  labels?: {\n    holder?: string;\n    expiration?: string;\n    cvv?: string;\n  };\n  expirationDateFormat?: 'MM/YYYY' | 'MM/YY';\n  initialValues?: CardData;\n  background?: string | any;\n  textColor?: string;\n  placeholderTextColor?: string;\n  errorTextColor?: string;\n  onValidStateChange?: (cardDataIsValid: boolean) => void;\n}\n\nexport interface SubmitResponse {\n  error: yup.ValidationError | null;\n  data: CardData;\n}\n\nconst defaultCardConfig = {\n  numberMask: '9999 9999 9999 9999',\n  cvvMask: '999',\n  brandImage: Images.brands.default,\n  brandName: '',\n};\n\nconst CreditCard = React.forwardRef<CreditCardType, CreditCardProps>(\n  (\n    {\n      placeholders,\n      labels,\n      background,\n      textColor,\n      errorTextColor,\n      placeholderTextColor,\n      initialValues,\n      expirationDateFormat,\n      onValidStateChange,\n    }: any,\n    ref\n  ) => {\n    /** States */\n    const [cardData, setCardData] = React.useState(initialValues);\n    const [activeSide, setActiveSide] = React.useState(CardSideEnum.FRONT);\n    const [cardConfig, setCardConfig] = React.useState(defaultCardConfig);\n    const [errors, setErrors] = React.useState({\n      number: false,\n      holder: false,\n      expiration: false,\n      cvv: false,\n    });\n\n    /** Animations Refs */\n    const frontOpacityRef = React.useRef(new Animated.Value(1)).current;\n    const backOpacityRef = React.useRef(new Animated.Value(0)).current;\n    const rotationValue = React.useRef(new Animated.Value(0)).current;\n\n    /** Input Refs */\n    const numberInputRef = React.useRef(null);\n    const holderInputRef = React.useRef(null);\n    const expirationInputRef = React.useRef(null);\n    const cvvInputRef = React.useRef(null);\n\n    /** Other refs */\n    const cardDataIsValid = React.useRef(false);\n\n    /** Runtime Styles */\n    const textStyle = { color: textColor };\n\n    /** Animate Card (Rotate) */\n    const rotate = React.useCallback(() => {\n      const fadeAnimationConfig = (appearing: boolean) => ({\n        toValue: appearing ? 1 : 0,\n        duration: 200,\n        useNativeDriver: true,\n      });\n\n      const rotateAnimationConfig = (isAppearing: boolean) => ({\n        toValue: isAppearing ? 1 : 0,\n        duration: 400,\n        useNativeDriver: true,\n      });\n\n      const isFrontActive = activeSide === CardSideEnum.FRONT;\n      Animated.parallel([\n        Animated.timing(frontOpacityRef, fadeAnimationConfig(!isFrontActive)),\n        Animated.timing(backOpacityRef, fadeAnimationConfig(isFrontActive)),\n        Animated.timing(rotationValue, rotateAnimationConfig(isFrontActive)),\n      ]).start(() => {\n        const newActiveSide = isFrontActive\n          ? CardSideEnum.BACK\n          : CardSideEnum.FRONT;\n        setActiveSide(newActiveSide);\n      });\n    }, [activeSide, backOpacityRef, frontOpacityRef, rotationValue]);\n\n    const expirationMask =\n      expirationDateFormat === 'MM/YY' ? '99/99' : '99/9999';\n\n    const validateField = React.useCallback((name: string, value: any) => {\n      const values: any = { [name]: value };\n      const response = {\n        isPontentiallyValid: false,\n        isValid: false,\n        error: null,\n      };\n\n      try {\n        // Check potentially invalid... If has error, it is throwed...\n        validationSchema.validateSyncAt(name, values, {\n          context: { runtime: true },\n        });\n        response.isPontentiallyValid = true;\n\n        // Check if is valid... If has error, it is throwed...\n        validationSchema.validateSyncAt(name, values, {\n          context: { runtime: false },\n        });\n        response.isValid = true;\n      } catch (validationError) {\n        setErrors((prev) => ({\n          ...prev,\n          [name]: response.isPontentiallyValid ? false : validationError,\n        }));\n      }\n\n      return response;\n    }, []);\n\n    const loadCardConfig = (cardNumber: string) => {\n      const { card = null } = cardValidator.number(cardNumber);\n      if (!card) {\n        setCardConfig({ ...defaultCardConfig });\n        return;\n      }\n\n      const {\n        type = '',\n        code = { size: 0 },\n        gaps = [],\n        lengths = [],\n        niceType = '',\n      } = card;\n\n      setCardData((prev: any) => ({\n        ...prev,\n        brand: type,\n      }));\n\n      setCardConfig((prev: any) => {\n        const maxLength = Math.max(...lengths);\n        const maskChars = ''.padStart(maxLength, '9').split('');\n        for (let i = 0; i < gaps.length; i += 1) {\n          maskChars.splice(gaps[i] + i, 0, ' ');\n        }\n        const numberMask = maskChars.join('');\n\n        const cvvMask = ''.padStart(code.size, '9');\n        const brandImage = Images.brands[type]\n          ? Images.brands[type]\n          : Images.brands.default;\n\n        return {\n          ...prev,\n          numberMask,\n          cvvMask,\n          brandImage,\n          brandName: niceType,\n        };\n      });\n    };\n\n    const handleInputChange = React.useCallback(\n      (name, text) => {\n        setCardData((prev: any) => ({ ...prev, [name]: text }));\n        const { isValid } = validateField(name, text);\n\n        if (name === 'number') {\n          loadCardConfig(text);\n          if (isValid) {\n            focusField(holderInputRef);\n          }\n        } else if (\n          name === 'expiration' &&\n          isValid &&\n          text.length === expirationMask.length\n        ) {\n          focusField(cvvInputRef);\n          rotate();\n        }\n      },\n      [validateField, rotate, expirationMask]\n    );\n\n    const getSideStyle = React.useCallback(\n      (side) => {\n        const outputRange = side === CardSideEnum.FRONT ? [1, -1] : [-1, 1];\n\n        return {\n          transform: [\n            {\n              scaleX: rotationValue.interpolate({\n                inputRange: [0, 1],\n                outputRange,\n              }),\n            },\n          ],\n          opacity:\n            side === CardSideEnum.FRONT ? frontOpacityRef : backOpacityRef,\n          zIndex: side === activeSide ? 1 : 0,\n        };\n      },\n      [activeSide, backOpacityRef, frontOpacityRef, rotationValue]\n    );\n\n    const focusField = (field: any) => {\n      if (!field || !field.current) return;\n      field.current.focus();\n    };\n\n    const submit = React.useCallback(() => {\n      const response: SubmitResponse = {\n        error: null,\n        data: cardData,\n      };\n      try {\n        validationSchema.validateSync(cardData, {\n          context: { runtime: false },\n          abortEarly: false,\n        });\n      } catch (err) {\n        response.error = err;\n      }\n      return response;\n    }, [cardData]);\n\n    React.useEffect(() => {\n      if (cardDataIsValid.current !== undefined) {\n        try {\n          validationSchema.validateSync(cardData, {\n            context: { runtime: false },\n          });\n          onValidStateChange(true);\n        } catch (validationErrors) {\n          onValidStateChange(false, validationErrors);\n        }\n      }\n    }, [cardData, onValidStateChange]);\n\n    React.useImperativeHandle(ref, () => ({ submit }));\n\n    return (\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View style={styles.cardWrapper}>\n          <CardSide\n            background={background}\n            style={[[getSideStyle(CardSideEnum.FRONT)]]}\n          >\n            <View style={styles.header}>\n              <TouchableOpacity onPress={rotate}>\n                <Image source={Images.icons.rotate} />\n              </TouchableOpacity>\n\n              {!!cardConfig.brandImage && (\n                <Animatable.Image\n                  source={cardConfig.brandImage}\n                  animation=\"slideInRight\"\n                  duration={400}\n                  useNativeDriver\n                />\n              )}\n              {!!(!cardConfig.brandImage && cardConfig.brandName) && (\n                <Animatable.Text\n                  style={[styles.textData, textStyle]}\n                  animation=\"slideInRight\"\n                  duration={400}\n                >\n                  {cardConfig.brandName}\n                </Animatable.Text>\n              )}\n            </View>\n\n            <Image source={Images.chip} style={styles.imageChip} />\n\n            <View>\n              <CardInput\n                placeholderTextColor={placeholderTextColor}\n                name=\"number\"\n                onChange={handleInputChange}\n                value={cardData?.number}\n                autoFocus\n                placeholder={placeholders.number}\n                style={[\n                  styles.textCardNumber,\n                  { color: errors.number ? errorTextColor : textColor },\n                ]}\n                maxLength={cardConfig.numberMask.length}\n                autocompleteType=\"cc-number\"\n                textContentType=\"creditCardNumber\"\n                maskProps={{\n                  type: 'custom',\n                  options: { mask: cardConfig.numberMask },\n                }}\n                refInput={numberInputRef}\n                returnKeyType=\"next\"\n                autoCorrect={false}\n                onSubmitEditing={() => focusField(holderInputRef)}\n                blurOnSubmit={false}\n              />\n            </View>\n\n            <View style={styles.footer}>\n              <View style={styles.holderWrapper}>\n                <Text style={[styles.textLabel, textStyle]}>\n                  {labels.holder}\n                </Text>\n                <CardInput\n                  placeholderTextColor={placeholderTextColor}\n                  name=\"holder\"\n                  autocompleteType=\"name\"\n                  textContentType=\"name\"\n                  returnKeyType=\"next\"\n                  onChange={handleInputChange}\n                  placeholder={placeholders.holder}\n                  autoCapitalize=\"characters\"\n                  style={[\n                    styles.textData,\n                    { color: errors.holder ? errorTextColor : textColor },\n                  ]}\n                  value={cardData?.holder}\n                  refInput={holderInputRef}\n                  onSubmitEditing={() => focusField(expirationInputRef)}\n                  blurOnSubmit={false}\n                />\n              </View>\n              <View style={styles.expirationWrapper}>\n                <Text style={[styles.textLabel, textStyle]}>\n                  {labels.expiration}\n                </Text>\n                <CardInput\n                  placeholderTextColor={placeholderTextColor}\n                  name=\"expiration\"\n                  autocompleteType=\"cc-exp\"\n                  keyboardType=\"numbers-and-punctuation\"\n                  returnKeyType=\"next\"\n                  onChange={handleInputChange}\n                  placeholder={placeholders.expiration}\n                  style={[\n                    styles.textData,\n                    {\n                      color:\n                        errors.expiration &&\n                        cardData.expiration.length === expirationMask.length\n                          ? errorTextColor\n                          : textColor,\n                    },\n                  ]}\n                  value={cardData?.expiration}\n                  maxLength={7}\n                  maskProps={{\n                    type: 'custom',\n                    options: { mask: expirationMask },\n                  }}\n                  refInput={expirationInputRef}\n                  onSubmitEditing={() => {\n                    focusField(cvvInputRef);\n                    rotate();\n                  }}\n                  blurOnSubmit={false}\n                />\n              </View>\n            </View>\n          </CardSide>\n\n          <CardSide\n            style={[getSideStyle(CardSideEnum.BACK)]}\n            background={background}\n          >\n            <View style={styles.strip} />\n            <TouchableOpacity onPress={rotate}>\n              <Image source={Images.icons.rotate} />\n            </TouchableOpacity>\n            <View style={styles.cvvWrapper} pointerEvents=\"box-none\">\n              <Text style={[styles.textLabel, textStyle]}>{labels.cvv}</Text>\n              <CardInput\n                placeholderTextColor={placeholderTextColor}\n                name=\"cvv\"\n                autocompleteType=\"cc-csc\"\n                keyboardType=\"numeric\"\n                returnKeyType=\"done\"\n                onChange={handleInputChange}\n                placeholder={placeholders.cvv}\n                style={[\n                  styles.textData,\n                  { color: errors.cvv ? errorTextColor : textColor },\n                ]}\n                value={cardData?.cvv}\n                maxLength={cardConfig.cvvMask.length}\n                maskProps={{\n                  type: 'custom',\n                  options: { mask: cardConfig.cvvMask },\n                }}\n                onBlur={rotate}\n                refInput={cvvInputRef}\n              />\n            </View>\n          </CardSide>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n);\n\nCreditCard.defaultProps = {\n  placeholders: {\n    number: '0000 0000 0000 0000',\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'MM/YYYY',\n    cvv: '000',\n  },\n  labels: {\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'VENCIMENTO',\n    cvv: 'CÓD. SEGURANÇA',\n  },\n  expirationDateFormat: 'MM/YYYY',\n  textColor: '#FFFFFF',\n  placeholderTextColor: '#9B84A9',\n  initialValues: {\n    number: '',\n    holder: '',\n    expiration: '',\n    cvv: '',\n    brand: '',\n  },\n  errorTextColor: '#F15A5B',\n  onValidStateChange: () => {},\n};\n\nconst styles = StyleSheet.create({\n  cardWrapper: {\n    height: '100%',\n    maxHeight: 220,\n    position: 'relative',\n    width: '100%',\n    maxWidth: 350,\n    shadowColor: 'rgba(0,0,0,0.6)',\n    shadowOffset: {\n      width: 0,\n      height: 6,\n    },\n    shadowOpacity: 0.37,\n    shadowRadius: 7.49,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  background: {\n    resizeMode: 'cover',\n    width: '100%',\n    height: '100%',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  textLabel: {\n    fontSize: 10 / PixelRatio.getFontScale(),\n    textTransform: 'uppercase',\n  },\n  textData: {\n    fontWeight: 'bold',\n    fontSize: 16 / PixelRatio.getFontScale(),\n  },\n  textCardNumber: {\n    fontSize: 20 / PixelRatio.getFontScale(),\n    fontWeight: 'bold',\n    marginBottom: 8,\n    marginTop: 16,\n    letterSpacing: 2,\n  },\n  imageChip: {\n    marginTop: 16,\n  },\n  footer: {\n    marginTop: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  strip: {\n    backgroundColor: 'rgba(0,0,0,.6)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    marginTop: 48,\n    height: 40,\n  },\n  cvvWrapper: {\n    height: '100%',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    bottom: 24,\n  },\n  holderWrapper: {\n    flex: 2,\n    marginRight: 16,\n  },\n  expirationWrapper: {\n    flex: 1,\n    alignItems: 'flex-end',\n  },\n});\n\nexport default CreditCard;\n"]},"metadata":{},"sourceType":"module"}