{"ast":null,"code":"'use strict';\n\nvar types = {};\nvar VISA = 'visa';\nvar MASTERCARD = 'master-card';\nvar AMERICAN_EXPRESS = 'american-express';\nvar DINERS_CLUB = 'diners-club';\nvar DISCOVER = 'discover';\nvar JCB = 'jcb';\nvar UNIONPAY = 'unionpay';\nvar MAESTRO = 'maestro';\nvar CVV = 'CVV';\nvar CID = 'CID';\nvar CVC = 'CVC';\nvar CVN = 'CVN';\nvar testOrder = [VISA, MASTERCARD, AMERICAN_EXPRESS, DINERS_CLUB, DISCOVER, JCB, UNIONPAY, MAESTRO];\nfunction clone(x) {\n  var prefixPattern, exactPattern, dupe;\n  if (!x) {\n    return null;\n  }\n  prefixPattern = x.prefixPattern.source;\n  exactPattern = x.exactPattern.source;\n  dupe = JSON.parse(JSON.stringify(x));\n  dupe.prefixPattern = prefixPattern;\n  dupe.exactPattern = exactPattern;\n  return dupe;\n}\ntypes[VISA] = {\n  niceType: 'Visa',\n  type: VISA,\n  prefixPattern: /^4$/,\n  exactPattern: /^4\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16, 18, 19],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\ntypes[MASTERCARD] = {\n  niceType: 'MasterCard',\n  type: MASTERCARD,\n  prefixPattern: /^(5|5[1-5]|2|22|222|222[1-9]|2[3-6]|27|27[0-2]|2720)$/,\n  exactPattern: /^(5[1-5]|222[1-9]|2[3-6]|27[0-1]|2720)\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: CVC,\n    size: 3\n  }\n};\ntypes[AMERICAN_EXPRESS] = {\n  niceType: 'American Express',\n  type: AMERICAN_EXPRESS,\n  prefixPattern: /^(3|34|37)$/,\n  exactPattern: /^3[47]\\d*$/,\n  isAmex: true,\n  gaps: [4, 10],\n  lengths: [15],\n  code: {\n    name: CID,\n    size: 4\n  }\n};\ntypes[DINERS_CLUB] = {\n  niceType: 'Diners Club',\n  type: DINERS_CLUB,\n  prefixPattern: /^(3|3[0689]|30[0-5])$/,\n  exactPattern: /^3(0[0-5]|[689])\\d*$/,\n  gaps: [4, 10],\n  lengths: [14, 16, 19],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\ntypes[DISCOVER] = {\n  niceType: 'Discover',\n  type: DISCOVER,\n  prefixPattern: /^(6|60|601|6011|65|64|64[4-9])$/,\n  exactPattern: /^(6011|65|64[4-9])\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16, 19],\n  code: {\n    name: CID,\n    size: 3\n  }\n};\ntypes[JCB] = {\n  niceType: 'JCB',\n  type: JCB,\n  prefixPattern: /^(2|21|213|2131|1|18|180|1800|3|35)$/,\n  exactPattern: /^(2131|1800|35)\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\ntypes[UNIONPAY] = {\n  niceType: 'UnionPay',\n  type: UNIONPAY,\n  prefixPattern: /^((6|62|62\\d|(621(?!83|88|98|99))|622(?!06)|627[02,06,07]|628(?!0|1)|629[1,2])|622018)$/,\n  exactPattern: /^(((620|(621(?!83|88|98|99))|622(?!06|018)|62[3-6]|627[02,06,07]|628(?!0|1)|629[1,2]))\\d*|622018\\d{12})$/,\n  gaps: [4, 8, 12],\n  lengths: [16, 17, 18, 19],\n  code: {\n    name: CVN,\n    size: 3\n  }\n};\ntypes[MAESTRO] = {\n  niceType: 'Maestro',\n  type: MAESTRO,\n  prefixPattern: /^(5|5[06-9]|6\\d*)$/,\n  exactPattern: /^(5[06-9]|6[37])\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n  code: {\n    name: CVC,\n    size: 3\n  }\n};\nfunction creditCardType(cardNumber) {\n  var type, value, i;\n  var prefixResults = [];\n  var exactResults = [];\n  if (!(typeof cardNumber === 'string' || cardNumber instanceof String)) {\n    return [];\n  }\n  for (i = 0; i < testOrder.length; i++) {\n    type = testOrder[i];\n    value = types[type];\n    if (cardNumber.length === 0) {\n      prefixResults.push(clone(value));\n      continue;\n    }\n    if (value.exactPattern.test(cardNumber)) {\n      exactResults.push(clone(value));\n    } else if (value.prefixPattern.test(cardNumber)) {\n      prefixResults.push(clone(value));\n    }\n  }\n  return exactResults.length ? exactResults : prefixResults;\n}\ncreditCardType.getTypeInfo = function (type) {\n  return clone(types[type]);\n};\ncreditCardType.types = {\n  VISA: VISA,\n  MASTERCARD: MASTERCARD,\n  AMERICAN_EXPRESS: AMERICAN_EXPRESS,\n  DINERS_CLUB: DINERS_CLUB,\n  DISCOVER: DISCOVER,\n  JCB: JCB,\n  UNIONPAY: UNIONPAY,\n  MAESTRO: MAESTRO\n};\nmodule.exports = creditCardType;","map":{"version":3,"names":["types","VISA","MASTERCARD","AMERICAN_EXPRESS","DINERS_CLUB","DISCOVER","JCB","UNIONPAY","MAESTRO","CVV","CID","CVC","CVN","testOrder","clone","x","prefixPattern","exactPattern","dupe","source","JSON","parse","stringify","niceType","type","gaps","lengths","code","name","size","isAmex","creditCardType","cardNumber","value","i","prefixResults","exactResults","String","length","push","test","getTypeInfo","module","exports"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/node_modules/react-native-credit-card-input-plus/node_modules/credit-card-type/index.js"],"sourcesContent":["'use strict';\n\nvar types = {};\nvar VISA = 'visa';\nvar MASTERCARD = 'master-card';\nvar AMERICAN_EXPRESS = 'american-express';\nvar DINERS_CLUB = 'diners-club';\nvar DISCOVER = 'discover';\nvar JCB = 'jcb';\nvar UNIONPAY = 'unionpay';\nvar MAESTRO = 'maestro';\nvar CVV = 'CVV';\nvar CID = 'CID';\nvar CVC = 'CVC';\nvar CVN = 'CVN';\nvar testOrder = [\n  VISA,\n  MASTERCARD,\n  AMERICAN_EXPRESS,\n  DINERS_CLUB,\n  DISCOVER,\n  JCB,\n  UNIONPAY,\n  MAESTRO\n];\n\nfunction clone(x) {\n  var prefixPattern, exactPattern, dupe;\n\n  if (!x) { return null; }\n\n  // TODO: in the next major version, we should\n  // consider removing these pattern properties.\n  // They are not useful extnerally and can be\n  // confusing because the exactPattern does not\n  // always match (for instance, Maestro cards\n  // can start with 62, but the exact pattern\n  // does not include that since it would\n  // exclude UnionPay and Discover cards\n  // when it is not sure whether or not\n  // the card is a UnionPay, Discover or\n  // Maestro card).\n  prefixPattern = x.prefixPattern.source;\n  exactPattern = x.exactPattern.source;\n  dupe = JSON.parse(JSON.stringify(x));\n  dupe.prefixPattern = prefixPattern;\n  dupe.exactPattern = exactPattern;\n\n  return dupe;\n}\n\ntypes[VISA] = {\n  niceType: 'Visa',\n  type: VISA,\n  prefixPattern: /^4$/,\n  exactPattern: /^4\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16, 18, 19],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\n\ntypes[MASTERCARD] = {\n  niceType: 'MasterCard',\n  type: MASTERCARD,\n  prefixPattern: /^(5|5[1-5]|2|22|222|222[1-9]|2[3-6]|27|27[0-2]|2720)$/,\n  exactPattern: /^(5[1-5]|222[1-9]|2[3-6]|27[0-1]|2720)\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: CVC,\n    size: 3\n  }\n};\n\ntypes[AMERICAN_EXPRESS] = {\n  niceType: 'American Express',\n  type: AMERICAN_EXPRESS,\n  prefixPattern: /^(3|34|37)$/,\n  exactPattern: /^3[47]\\d*$/,\n  isAmex: true,\n  gaps: [4, 10],\n  lengths: [15],\n  code: {\n    name: CID,\n    size: 4\n  }\n};\n\ntypes[DINERS_CLUB] = {\n  niceType: 'Diners Club',\n  type: DINERS_CLUB,\n  prefixPattern: /^(3|3[0689]|30[0-5])$/,\n  exactPattern: /^3(0[0-5]|[689])\\d*$/,\n  gaps: [4, 10],\n  lengths: [14, 16, 19],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\n\ntypes[DISCOVER] = {\n  niceType: 'Discover',\n  type: DISCOVER,\n  prefixPattern: /^(6|60|601|6011|65|64|64[4-9])$/,\n  exactPattern: /^(6011|65|64[4-9])\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16, 19],\n  code: {\n    name: CID,\n    size: 3\n  }\n};\n\ntypes[JCB] = {\n  niceType: 'JCB',\n  type: JCB,\n  prefixPattern: /^(2|21|213|2131|1|18|180|1800|3|35)$/,\n  exactPattern: /^(2131|1800|35)\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\n\ntypes[UNIONPAY] = {\n  niceType: 'UnionPay',\n  type: UNIONPAY,\n  prefixPattern: /^((6|62|62\\d|(621(?!83|88|98|99))|622(?!06)|627[02,06,07]|628(?!0|1)|629[1,2])|622018)$/,\n  exactPattern: /^(((620|(621(?!83|88|98|99))|622(?!06|018)|62[3-6]|627[02,06,07]|628(?!0|1)|629[1,2]))\\d*|622018\\d{12})$/,\n  gaps: [4, 8, 12],\n  lengths: [16, 17, 18, 19],\n  code: {\n    name: CVN,\n    size: 3\n  }\n};\n\ntypes[MAESTRO] = {\n  niceType: 'Maestro',\n  type: MAESTRO,\n  prefixPattern: /^(5|5[06-9]|6\\d*)$/,\n  exactPattern: /^(5[06-9]|6[37])\\d*$/,\n  gaps: [4, 8, 12],\n  lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n  code: {\n    name: CVC,\n    size: 3\n  }\n};\n\nfunction creditCardType(cardNumber) {\n  var type, value, i;\n  var prefixResults = [];\n  var exactResults = [];\n\n  if (!(typeof cardNumber === 'string' || cardNumber instanceof String)) {\n    return [];\n  }\n\n  for (i = 0; i < testOrder.length; i++) {\n    type = testOrder[i];\n    value = types[type];\n\n    if (cardNumber.length === 0) {\n      prefixResults.push(clone(value));\n      continue;\n    }\n\n    if (value.exactPattern.test(cardNumber)) {\n      exactResults.push(clone(value));\n    } else if (value.prefixPattern.test(cardNumber)) {\n      prefixResults.push(clone(value));\n    }\n  }\n\n  return exactResults.length ? exactResults : prefixResults;\n}\n\ncreditCardType.getTypeInfo = function (type) {\n  return clone(types[type]);\n};\n\ncreditCardType.types = {\n  VISA: VISA,\n  MASTERCARD: MASTERCARD,\n  AMERICAN_EXPRESS: AMERICAN_EXPRESS,\n  DINERS_CLUB: DINERS_CLUB,\n  DISCOVER: DISCOVER,\n  JCB: JCB,\n  UNIONPAY: UNIONPAY,\n  MAESTRO: MAESTRO\n};\n\nmodule.exports = creditCardType;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAG,CAAC,CAAC;AACd,IAAIC,IAAI,GAAG,MAAM;AACjB,IAAIC,UAAU,GAAG,aAAa;AAC9B,IAAIC,gBAAgB,GAAG,kBAAkB;AACzC,IAAIC,WAAW,GAAG,aAAa;AAC/B,IAAIC,QAAQ,GAAG,UAAU;AACzB,IAAIC,GAAG,GAAG,KAAK;AACf,IAAIC,QAAQ,GAAG,UAAU;AACzB,IAAIC,OAAO,GAAG,SAAS;AACvB,IAAIC,GAAG,GAAG,KAAK;AACf,IAAIC,GAAG,GAAG,KAAK;AACf,IAAIC,GAAG,GAAG,KAAK;AACf,IAAIC,GAAG,GAAG,KAAK;AACf,IAAIC,SAAS,GAAG,CACdZ,IAAI,EACJC,UAAU,EACVC,gBAAgB,EAChBC,WAAW,EACXC,QAAQ,EACRC,GAAG,EACHC,QAAQ,EACRC,OAAO,CACR;AAED,SAASM,KAAK,CAACC,CAAC,EAAE;EAChB,IAAIC,aAAa,EAAEC,YAAY,EAAEC,IAAI;EAErC,IAAI,CAACH,CAAC,EAAE;IAAE,OAAO,IAAI;EAAE;EAavBC,aAAa,GAAGD,CAAC,CAACC,aAAa,CAACG,MAAM;EACtCF,YAAY,GAAGF,CAAC,CAACE,YAAY,CAACE,MAAM;EACpCD,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACP,CAAC,CAAC,CAAC;EACpCG,IAAI,CAACF,aAAa,GAAGA,aAAa;EAClCE,IAAI,CAACD,YAAY,GAAGA,YAAY;EAEhC,OAAOC,IAAI;AACb;AAEAlB,KAAK,CAACC,IAAI,CAAC,GAAG;EACZsB,QAAQ,EAAE,MAAM;EAChBC,IAAI,EAAEvB,IAAI;EACVe,aAAa,EAAE,KAAK;EACpBC,YAAY,EAAE,QAAQ;EACtBQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAChBC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrBC,IAAI,EAAE;IACJC,IAAI,EAAEnB,GAAG;IACToB,IAAI,EAAE;EACR;AACF,CAAC;AAED7B,KAAK,CAACE,UAAU,CAAC,GAAG;EAClBqB,QAAQ,EAAE,YAAY;EACtBC,IAAI,EAAEtB,UAAU;EAChBc,aAAa,EAAE,uDAAuD;EACtEC,YAAY,EAAE,4CAA4C;EAC1DQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAChBC,OAAO,EAAE,CAAC,EAAE,CAAC;EACbC,IAAI,EAAE;IACJC,IAAI,EAAEjB,GAAG;IACTkB,IAAI,EAAE;EACR;AACF,CAAC;AAED7B,KAAK,CAACG,gBAAgB,CAAC,GAAG;EACxBoB,QAAQ,EAAE,kBAAkB;EAC5BC,IAAI,EAAErB,gBAAgB;EACtBa,aAAa,EAAE,aAAa;EAC5BC,YAAY,EAAE,YAAY;EAC1Ba,MAAM,EAAE,IAAI;EACZL,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACbC,OAAO,EAAE,CAAC,EAAE,CAAC;EACbC,IAAI,EAAE;IACJC,IAAI,EAAElB,GAAG;IACTmB,IAAI,EAAE;EACR;AACF,CAAC;AAED7B,KAAK,CAACI,WAAW,CAAC,GAAG;EACnBmB,QAAQ,EAAE,aAAa;EACvBC,IAAI,EAAEpB,WAAW;EACjBY,aAAa,EAAE,uBAAuB;EACtCC,YAAY,EAAE,sBAAsB;EACpCQ,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACbC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrBC,IAAI,EAAE;IACJC,IAAI,EAAEnB,GAAG;IACToB,IAAI,EAAE;EACR;AACF,CAAC;AAED7B,KAAK,CAACK,QAAQ,CAAC,GAAG;EAChBkB,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAEnB,QAAQ;EACdW,aAAa,EAAE,iCAAiC;EAChDC,YAAY,EAAE,wBAAwB;EACtCQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAChBC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACjBC,IAAI,EAAE;IACJC,IAAI,EAAElB,GAAG;IACTmB,IAAI,EAAE;EACR;AACF,CAAC;AAED7B,KAAK,CAACM,GAAG,CAAC,GAAG;EACXiB,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAElB,GAAG;EACTU,aAAa,EAAE,sCAAsC;EACrDC,YAAY,EAAE,qBAAqB;EACnCQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAChBC,OAAO,EAAE,CAAC,EAAE,CAAC;EACbC,IAAI,EAAE;IACJC,IAAI,EAAEnB,GAAG;IACToB,IAAI,EAAE;EACR;AACF,CAAC;AAED7B,KAAK,CAACO,QAAQ,CAAC,GAAG;EAChBgB,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAEjB,QAAQ;EACdS,aAAa,EAAE,yFAAyF;EACxGC,YAAY,EAAE,0GAA0G;EACxHQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAChBC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACzBC,IAAI,EAAE;IACJC,IAAI,EAAEhB,GAAG;IACTiB,IAAI,EAAE;EACR;AACF,CAAC;AAED7B,KAAK,CAACQ,OAAO,CAAC,GAAG;EACfe,QAAQ,EAAE,SAAS;EACnBC,IAAI,EAAEhB,OAAO;EACbQ,aAAa,EAAE,oBAAoB;EACnCC,YAAY,EAAE,sBAAsB;EACpCQ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAChBC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACzCC,IAAI,EAAE;IACJC,IAAI,EAAEjB,GAAG;IACTkB,IAAI,EAAE;EACR;AACF,CAAC;AAED,SAASE,cAAc,CAACC,UAAU,EAAE;EAClC,IAAIR,IAAI,EAAES,KAAK,EAAEC,CAAC;EAClB,IAAIC,aAAa,GAAG,EAAE;EACtB,IAAIC,YAAY,GAAG,EAAE;EAErB,IAAI,EAAE,OAAOJ,UAAU,KAAK,QAAQ,IAAIA,UAAU,YAAYK,MAAM,CAAC,EAAE;IACrE,OAAO,EAAE;EACX;EAEA,KAAKH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,SAAS,CAACyB,MAAM,EAAEJ,CAAC,EAAE,EAAE;IACrCV,IAAI,GAAGX,SAAS,CAACqB,CAAC,CAAC;IACnBD,KAAK,GAAGjC,KAAK,CAACwB,IAAI,CAAC;IAEnB,IAAIQ,UAAU,CAACM,MAAM,KAAK,CAAC,EAAE;MAC3BH,aAAa,CAACI,IAAI,CAACzB,KAAK,CAACmB,KAAK,CAAC,CAAC;MAChC;IACF;IAEA,IAAIA,KAAK,CAAChB,YAAY,CAACuB,IAAI,CAACR,UAAU,CAAC,EAAE;MACvCI,YAAY,CAACG,IAAI,CAACzB,KAAK,CAACmB,KAAK,CAAC,CAAC;IACjC,CAAC,MAAM,IAAIA,KAAK,CAACjB,aAAa,CAACwB,IAAI,CAACR,UAAU,CAAC,EAAE;MAC/CG,aAAa,CAACI,IAAI,CAACzB,KAAK,CAACmB,KAAK,CAAC,CAAC;IAClC;EACF;EAEA,OAAOG,YAAY,CAACE,MAAM,GAAGF,YAAY,GAAGD,aAAa;AAC3D;AAEAJ,cAAc,CAACU,WAAW,GAAG,UAAUjB,IAAI,EAAE;EAC3C,OAAOV,KAAK,CAACd,KAAK,CAACwB,IAAI,CAAC,CAAC;AAC3B,CAAC;AAEDO,cAAc,CAAC/B,KAAK,GAAG;EACrBC,IAAI,EAAEA,IAAI;EACVC,UAAU,EAAEA,UAAU;EACtBC,gBAAgB,EAAEA,gBAAgB;EAClCC,WAAW,EAAEA,WAAW;EACxBC,QAAQ,EAAEA,QAAQ;EAClBC,GAAG,EAAEA,GAAG;EACRC,QAAQ,EAAEA,QAAQ;EAClBC,OAAO,EAAEA;AACX,CAAC;AAEDkC,MAAM,CAACC,OAAO,GAAGZ,cAAc"},"metadata":{},"sourceType":"script"}