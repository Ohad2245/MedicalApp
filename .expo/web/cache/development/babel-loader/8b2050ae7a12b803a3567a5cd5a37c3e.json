{"ast":null,"code":"'use strict';\n\nvar isString = require('lodash/lang/isString');\nvar extend = require('lodash/object/assign');\nvar luhn10 = require(\"./luhn-10\");\nvar getCardTypes = require('credit-card-type');\nvar isNumber = require('lodash/lang/isNumber');\nfunction verification(card, isPotentiallyValid, isValid) {\n  return extend({}, {\n    card: card,\n    isPotentiallyValid: isPotentiallyValid,\n    isValid: isValid\n  });\n}\nfunction cardNumber(value) {\n  var potentialTypes, cardType, isPotentiallyValid, isValid, i, maxLength;\n  if (isNumber(value)) {\n    value = String(value);\n  }\n  if (!isString(value)) {\n    return verification(null, false, false);\n  }\n  value = value.replace(/\\-|\\s/g, '');\n  if (!/^\\d*$/.test(value)) {\n    return verification(null, false, false);\n  }\n  potentialTypes = getCardTypes(value);\n  if (potentialTypes.length === 0) {\n    return verification(null, false, false);\n  } else if (potentialTypes.length !== 1) {\n    return verification(null, true, false);\n  }\n  cardType = potentialTypes[0];\n  if (cardType.type === 'unionpay') {\n    isValid = true;\n  } else {\n    isValid = luhn10(value);\n  }\n  maxLength = Math.max.apply(null, cardType.lengths);\n  for (i = 0; i < cardType.lengths.length; i++) {\n    if (cardType.lengths[i] === value.length) {\n      isPotentiallyValid = value.length !== maxLength || isValid;\n      return verification(cardType, isPotentiallyValid, isValid);\n    }\n  }\n  return verification(cardType, value.length < maxLength, false);\n}\nmodule.exports = cardNumber;","map":{"version":3,"names":["isString","require","extend","luhn10","getCardTypes","isNumber","verification","card","isPotentiallyValid","isValid","cardNumber","value","potentialTypes","cardType","i","maxLength","String","replace","test","length","type","Math","max","apply","lengths","module","exports"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/node_modules/react-native-credit-card-input-plus/node_modules/card-validator/src/card-number.js"],"sourcesContent":["'use strict';\n\nvar isString = require('lodash/lang/isString');\nvar extend = require('lodash/object/assign');\nvar luhn10 = require('./luhn-10');\nvar getCardTypes = require('credit-card-type');\nvar isNumber = require('lodash/lang/isNumber');\n\nfunction verification(card, isPotentiallyValid, isValid) {\n  return extend({}, {card: card, isPotentiallyValid: isPotentiallyValid, isValid: isValid});\n}\n\nfunction cardNumber(value) {\n  var potentialTypes, cardType, isPotentiallyValid, isValid, i, maxLength;\n\n  if (isNumber(value)) {\n    value = String(value);\n  }\n\n  if (!isString(value)) { return verification(null, false, false); }\n\n  value = value.replace(/\\-|\\s/g, '');\n\n  if (!/^\\d*$/.test(value)) { return verification(null, false, false); }\n\n  potentialTypes = getCardTypes(value);\n\n  if (potentialTypes.length === 0) {\n    return verification(null, false, false);\n  } else if (potentialTypes.length !== 1) {\n    return verification(null, true, false);\n  }\n\n  cardType = potentialTypes[0];\n\n  if (cardType.type === 'unionpay') {  // UnionPay is not Luhn 10 compliant\n    isValid = true;\n  } else {\n    isValid = luhn10(value);\n  }\n\n  maxLength = Math.max.apply(null, cardType.lengths);\n\n  for (i = 0; i < cardType.lengths.length; i++) {\n    if (cardType.lengths[i] === value.length) {\n      isPotentiallyValid = value.length !== maxLength || isValid;\n      return verification(cardType, isPotentiallyValid, isValid);\n    }\n  }\n\n  return verification(cardType, value.length < maxLength, false);\n}\n\nmodule.exports = cardNumber;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC9C,IAAIC,MAAM,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC5C,IAAIE,MAAM,GAAGF,OAAO,aAAa;AACjC,IAAIG,YAAY,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC9C,IAAII,QAAQ,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AAE9C,SAASK,YAAY,CAACC,IAAI,EAAEC,kBAAkB,EAAEC,OAAO,EAAE;EACvD,OAAOP,MAAM,CAAC,CAAC,CAAC,EAAE;IAACK,IAAI,EAAEA,IAAI;IAAEC,kBAAkB,EAAEA,kBAAkB;IAAEC,OAAO,EAAEA;EAAO,CAAC,CAAC;AAC3F;AAEA,SAASC,UAAU,CAACC,KAAK,EAAE;EACzB,IAAIC,cAAc,EAAEC,QAAQ,EAAEL,kBAAkB,EAAEC,OAAO,EAAEK,CAAC,EAAEC,SAAS;EAEvE,IAAIV,QAAQ,CAACM,KAAK,CAAC,EAAE;IACnBA,KAAK,GAAGK,MAAM,CAACL,KAAK,CAAC;EACvB;EAEA,IAAI,CAACX,QAAQ,CAACW,KAAK,CAAC,EAAE;IAAE,OAAOL,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;EAAE;EAEjEK,KAAK,GAAGA,KAAK,CAACM,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;EAEnC,IAAI,CAAC,OAAO,CAACC,IAAI,CAACP,KAAK,CAAC,EAAE;IAAE,OAAOL,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;EAAE;EAErEM,cAAc,GAAGR,YAAY,CAACO,KAAK,CAAC;EAEpC,IAAIC,cAAc,CAACO,MAAM,KAAK,CAAC,EAAE;IAC/B,OAAOb,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;EACzC,CAAC,MAAM,IAAIM,cAAc,CAACO,MAAM,KAAK,CAAC,EAAE;IACtC,OAAOb,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;EACxC;EAEAO,QAAQ,GAAGD,cAAc,CAAC,CAAC,CAAC;EAE5B,IAAIC,QAAQ,CAACO,IAAI,KAAK,UAAU,EAAE;IAChCX,OAAO,GAAG,IAAI;EAChB,CAAC,MAAM;IACLA,OAAO,GAAGN,MAAM,CAACQ,KAAK,CAAC;EACzB;EAEAI,SAAS,GAAGM,IAAI,CAACC,GAAG,CAACC,KAAK,CAAC,IAAI,EAAEV,QAAQ,CAACW,OAAO,CAAC;EAElD,KAAKV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACW,OAAO,CAACL,MAAM,EAAEL,CAAC,EAAE,EAAE;IAC5C,IAAID,QAAQ,CAACW,OAAO,CAACV,CAAC,CAAC,KAAKH,KAAK,CAACQ,MAAM,EAAE;MACxCX,kBAAkB,GAAGG,KAAK,CAACQ,MAAM,KAAKJ,SAAS,IAAIN,OAAO;MAC1D,OAAOH,YAAY,CAACO,QAAQ,EAAEL,kBAAkB,EAAEC,OAAO,CAAC;IAC5D;EACF;EAEA,OAAOH,YAAY,CAACO,QAAQ,EAAEF,KAAK,CAACQ,MAAM,GAAGJ,SAAS,EAAE,KAAK,CAAC;AAChE;AAEAU,MAAM,CAACC,OAAO,GAAGhB,UAAU"},"metadata":{},"sourceType":"script"}