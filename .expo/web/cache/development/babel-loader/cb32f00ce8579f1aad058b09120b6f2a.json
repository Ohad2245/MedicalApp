{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport AndroidAction, { fromNativeAndroidAction } from \"./AndroidAction\";\nimport { BadgeIconType, Category, GroupAlert, Priority } from \"./types\";\n\nvar AndroidNotification = function () {\n  function AndroidNotification(notification, data) {\n    _classCallCheck(this, AndroidNotification);\n\n    this._notification = notification;\n\n    if (data) {\n      this._actions = data.actions ? data.actions.map(function (action) {\n        return fromNativeAndroidAction(action);\n      }) : [];\n      this._autoCancel = data.autoCancel;\n      this._badgeIconType = data.badgeIconType;\n      this._bigPicture = data.bigPicture;\n      this._bigText = data.bigText;\n      this._category = data.category;\n      this._channelId = data.channelId;\n      this._clickAction = data.clickAction;\n      this._color = data.color;\n      this._colorized = data.colorized;\n      this._contentInfo = data.contentInfo;\n      this._defaults = data.defaults;\n      this._group = data.group;\n      this._groupAlertBehaviour = data.groupAlertBehaviour;\n      this._groupSummary = data.groupSummary;\n      this._largeIcon = data.largeIcon;\n      this._lights = data.lights;\n      this._localOnly = data.localOnly;\n      this._number = data.number;\n      this._ongoing = data.ongoing;\n      this._onlyAlertOnce = data.onlyAlertOnce;\n      this._people = data.people;\n      this._priority = data.priority;\n      this._progress = data.progress;\n      this._remoteInputHistory = data.remoteInputHistory;\n      this._shortcutId = data.shortcutId;\n      this._showWhen = data.showWhen;\n      this._smallIcon = data.smallIcon;\n      this._sortKey = data.sortKey;\n      this._tag = data.tag;\n      this._ticker = data.ticker;\n      this._timeoutAfter = data.timeoutAfter;\n      this._usesChronometer = data.usesChronometer;\n      this._vibrate = data.vibrate;\n      this._visibility = data.visibility;\n      this._when = data.when;\n    }\n\n    this._actions = this._actions || [];\n    this._people = this._people || [];\n    this._smallIcon = this._smallIcon || {\n      icon: 'ic_launcher'\n    };\n  }\n\n  _createClass(AndroidNotification, [{\n    key: \"actions\",\n    get: function get() {\n      return this._actions;\n    }\n  }, {\n    key: \"autoCancel\",\n    get: function get() {\n      return this._autoCancel;\n    }\n  }, {\n    key: \"badgeIconType\",\n    get: function get() {\n      return this._badgeIconType;\n    }\n  }, {\n    key: \"bigPicture\",\n    get: function get() {\n      return this._bigPicture;\n    }\n  }, {\n    key: \"bigText\",\n    get: function get() {\n      return this._bigText;\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return this._category;\n    }\n  }, {\n    key: \"channelId\",\n    get: function get() {\n      return this._channelId;\n    }\n  }, {\n    key: \"clickAction\",\n    get: function get() {\n      return this._clickAction;\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      return this._color;\n    }\n  }, {\n    key: \"colorized\",\n    get: function get() {\n      return this._colorized;\n    }\n  }, {\n    key: \"contentInfo\",\n    get: function get() {\n      return this._contentInfo;\n    }\n  }, {\n    key: \"defaults\",\n    get: function get() {\n      return this._defaults;\n    }\n  }, {\n    key: \"group\",\n    get: function get() {\n      return this._group;\n    }\n  }, {\n    key: \"groupAlertBehaviour\",\n    get: function get() {\n      return this._groupAlertBehaviour;\n    }\n  }, {\n    key: \"groupSummary\",\n    get: function get() {\n      return this._groupSummary;\n    }\n  }, {\n    key: \"largeIcon\",\n    get: function get() {\n      return this._largeIcon;\n    }\n  }, {\n    key: \"lights\",\n    get: function get() {\n      return this._lights;\n    }\n  }, {\n    key: \"localOnly\",\n    get: function get() {\n      return this._localOnly;\n    }\n  }, {\n    key: \"number\",\n    get: function get() {\n      return this._number;\n    }\n  }, {\n    key: \"ongoing\",\n    get: function get() {\n      return this._ongoing;\n    }\n  }, {\n    key: \"onlyAlertOnce\",\n    get: function get() {\n      return this._onlyAlertOnce;\n    }\n  }, {\n    key: \"people\",\n    get: function get() {\n      return this._people;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this._priority;\n    }\n  }, {\n    key: \"progress\",\n    get: function get() {\n      return this._progress;\n    }\n  }, {\n    key: \"remoteInputHistory\",\n    get: function get() {\n      return this._remoteInputHistory;\n    }\n  }, {\n    key: \"shortcutId\",\n    get: function get() {\n      return this._shortcutId;\n    }\n  }, {\n    key: \"showWhen\",\n    get: function get() {\n      return this._showWhen;\n    }\n  }, {\n    key: \"smallIcon\",\n    get: function get() {\n      return this._smallIcon;\n    }\n  }, {\n    key: \"sortKey\",\n    get: function get() {\n      return this._sortKey;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return this._tag;\n    }\n  }, {\n    key: \"ticker\",\n    get: function get() {\n      return this._ticker;\n    }\n  }, {\n    key: \"timeoutAfter\",\n    get: function get() {\n      return this._timeoutAfter;\n    }\n  }, {\n    key: \"usesChronometer\",\n    get: function get() {\n      return this._usesChronometer;\n    }\n  }, {\n    key: \"vibrate\",\n    get: function get() {\n      return this._vibrate;\n    }\n  }, {\n    key: \"visibility\",\n    get: function get() {\n      return this._visibility;\n    }\n  }, {\n    key: \"when\",\n    get: function get() {\n      return this._when;\n    }\n  }, {\n    key: \"addAction\",\n    value: function addAction(action) {\n      if (!(action instanceof AndroidAction)) {\n        throw new Error(\"AndroidNotification:addAction expects an 'AndroidAction' but got type \" + typeof action);\n      }\n\n      this._actions.push(action);\n\n      return this._notification;\n    }\n  }, {\n    key: \"addPerson\",\n    value: function addPerson(person) {\n      this._people.push(person);\n\n      return this._notification;\n    }\n  }, {\n    key: \"setAutoCancel\",\n    value: function setAutoCancel(autoCancel) {\n      this._autoCancel = autoCancel;\n      return this._notification;\n    }\n  }, {\n    key: \"setBadgeIconType\",\n    value: function setBadgeIconType(badgeIconType) {\n      if (!Object.values(BadgeIconType).includes(badgeIconType)) {\n        throw new Error(\"AndroidNotification:setBadgeIconType Invalid BadgeIconType: \" + badgeIconType);\n      }\n\n      this._badgeIconType = badgeIconType;\n      return this._notification;\n    }\n  }, {\n    key: \"setBigPicture\",\n    value: function setBigPicture(picture, largeIcon, contentTitle, summaryText) {\n      this._bigPicture = {\n        contentTitle: contentTitle,\n        largeIcon: largeIcon,\n        picture: picture,\n        summaryText: summaryText\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setBigText\",\n    value: function setBigText(text, contentTitle, summaryText) {\n      this._bigText = {\n        contentTitle: contentTitle,\n        summaryText: summaryText,\n        text: text\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setCategory\",\n    value: function setCategory(category) {\n      if (!Object.values(Category).includes(category)) {\n        throw new Error(\"AndroidNotification:setCategory Invalid Category: \" + category);\n      }\n\n      this._category = category;\n      return this._notification;\n    }\n  }, {\n    key: \"setChannelId\",\n    value: function setChannelId(channelId) {\n      this._channelId = channelId;\n      return this._notification;\n    }\n  }, {\n    key: \"setClickAction\",\n    value: function setClickAction(clickAction) {\n      this._clickAction = clickAction;\n      return this._notification;\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      this._color = color;\n      return this._notification;\n    }\n  }, {\n    key: \"setColorized\",\n    value: function setColorized(colorized) {\n      this._colorized = colorized;\n      return this._notification;\n    }\n  }, {\n    key: \"setContentInfo\",\n    value: function setContentInfo(contentInfo) {\n      this._contentInfo = contentInfo;\n      return this._notification;\n    }\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(defaults) {\n      this._defaults = defaults;\n      return this._notification;\n    }\n  }, {\n    key: \"setGroup\",\n    value: function setGroup(group) {\n      this._group = group;\n      return this._notification;\n    }\n  }, {\n    key: \"setGroupAlertBehaviour\",\n    value: function setGroupAlertBehaviour(groupAlertBehaviour) {\n      if (!Object.values(GroupAlert).includes(groupAlertBehaviour)) {\n        throw new Error(\"AndroidNotification:setGroupAlertBehaviour Invalid GroupAlert: \" + groupAlertBehaviour);\n      }\n\n      this._groupAlertBehaviour = groupAlertBehaviour;\n      return this._notification;\n    }\n  }, {\n    key: \"setGroupSummary\",\n    value: function setGroupSummary(groupSummary) {\n      this._groupSummary = groupSummary;\n      return this._notification;\n    }\n  }, {\n    key: \"setLargeIcon\",\n    value: function setLargeIcon(largeIcon) {\n      this._largeIcon = largeIcon;\n      return this._notification;\n    }\n  }, {\n    key: \"setLights\",\n    value: function setLights(argb, onMs, offMs) {\n      this._lights = {\n        argb: argb,\n        onMs: onMs,\n        offMs: offMs\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setLocalOnly\",\n    value: function setLocalOnly(localOnly) {\n      this._localOnly = localOnly;\n      return this._notification;\n    }\n  }, {\n    key: \"setNumber\",\n    value: function setNumber(number) {\n      this._number = number;\n      return this._notification;\n    }\n  }, {\n    key: \"setOngoing\",\n    value: function setOngoing(ongoing) {\n      this._ongoing = ongoing;\n      return this._notification;\n    }\n  }, {\n    key: \"setOnlyAlertOnce\",\n    value: function setOnlyAlertOnce(onlyAlertOnce) {\n      this._onlyAlertOnce = onlyAlertOnce;\n      return this._notification;\n    }\n  }, {\n    key: \"setPriority\",\n    value: function setPriority(priority) {\n      if (!Object.values(Priority).includes(priority)) {\n        throw new Error(\"AndroidNotification:setPriority Invalid Priority: \" + priority);\n      }\n\n      this._priority = priority;\n      return this._notification;\n    }\n  }, {\n    key: \"setProgress\",\n    value: function setProgress(max, progress, indeterminate) {\n      this._progress = {\n        max: max,\n        progress: progress,\n        indeterminate: indeterminate\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setRemoteInputHistory\",\n    value: function setRemoteInputHistory(remoteInputHistory) {\n      this._remoteInputHistory = remoteInputHistory;\n      return this._notification;\n    }\n  }, {\n    key: \"setShortcutId\",\n    value: function setShortcutId(shortcutId) {\n      this._shortcutId = shortcutId;\n      return this._notification;\n    }\n  }, {\n    key: \"setShowWhen\",\n    value: function setShowWhen(showWhen) {\n      this._showWhen = showWhen;\n      return this._notification;\n    }\n  }, {\n    key: \"setSmallIcon\",\n    value: function setSmallIcon(icon, level) {\n      this._smallIcon = {\n        icon: icon,\n        level: level\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setSortKey\",\n    value: function setSortKey(sortKey) {\n      this._sortKey = sortKey;\n      return this._notification;\n    }\n  }, {\n    key: \"setTag\",\n    value: function setTag(tag) {\n      this._tag = tag;\n      return this._notification;\n    }\n  }, {\n    key: \"setTicker\",\n    value: function setTicker(ticker) {\n      this._ticker = ticker;\n      return this._notification;\n    }\n  }, {\n    key: \"setTimeoutAfter\",\n    value: function setTimeoutAfter(timeoutAfter) {\n      this._timeoutAfter = timeoutAfter;\n      return this._notification;\n    }\n  }, {\n    key: \"setUsesChronometer\",\n    value: function setUsesChronometer(usesChronometer) {\n      this._usesChronometer = usesChronometer;\n      return this._notification;\n    }\n  }, {\n    key: \"setVibrate\",\n    value: function setVibrate(vibrate) {\n      this._vibrate = vibrate;\n      return this._notification;\n    }\n  }, {\n    key: \"setVisibility\",\n    value: function setVisibility(visibility) {\n      this._visibility = visibility;\n      return this._notification;\n    }\n  }, {\n    key: \"setWhen\",\n    value: function setWhen(when) {\n      this._when = when;\n      return this._notification;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._channelId) {\n        throw new Error('AndroidNotification: Missing required `channelId` property');\n      } else if (!this._smallIcon) {\n        throw new Error('AndroidNotification: Missing required `smallIcon` property');\n      }\n\n      return {\n        actions: this._actions.map(function (action) {\n          return action.build();\n        }),\n        autoCancel: this._autoCancel,\n        badgeIconType: this._badgeIconType,\n        bigPicture: this._bigPicture,\n        bigText: this._bigText,\n        category: this._category,\n        channelId: this._channelId,\n        clickAction: this._clickAction,\n        color: this._color,\n        colorized: this._colorized,\n        contentInfo: this._contentInfo,\n        defaults: this._defaults,\n        group: this._group,\n        groupAlertBehaviour: this._groupAlertBehaviour,\n        groupSummary: this._groupSummary,\n        largeIcon: this._largeIcon,\n        lights: this._lights,\n        localOnly: this._localOnly,\n        number: this._number,\n        ongoing: this._ongoing,\n        onlyAlertOnce: this._onlyAlertOnce,\n        people: this._people,\n        priority: this._priority,\n        progress: this._progress,\n        remoteInputHistory: this._remoteInputHistory,\n        shortcutId: this._shortcutId,\n        showWhen: this._showWhen,\n        smallIcon: this._smallIcon,\n        sortKey: this._sortKey,\n        tag: this._tag,\n        ticker: this._ticker,\n        timeoutAfter: this._timeoutAfter,\n        usesChronometer: this._usesChronometer,\n        vibrate: this._vibrate,\n        visibility: this._visibility,\n        when: this._when\n      };\n    }\n  }]);\n\n  return AndroidNotification;\n}();\n\nexport { AndroidNotification as default };","map":{"version":3,"names":["AndroidAction","fromNativeAndroidAction","BadgeIconType","Category","GroupAlert","Priority","AndroidNotification","notification","data","_notification","_actions","actions","map","action","_autoCancel","autoCancel","_badgeIconType","badgeIconType","_bigPicture","bigPicture","_bigText","bigText","_category","category","_channelId","channelId","_clickAction","clickAction","_color","color","_colorized","colorized","_contentInfo","contentInfo","_defaults","defaults","_group","group","_groupAlertBehaviour","groupAlertBehaviour","_groupSummary","groupSummary","_largeIcon","largeIcon","_lights","lights","_localOnly","localOnly","_number","number","_ongoing","ongoing","_onlyAlertOnce","onlyAlertOnce","_people","people","_priority","priority","_progress","progress","_remoteInputHistory","remoteInputHistory","_shortcutId","shortcutId","_showWhen","showWhen","_smallIcon","smallIcon","_sortKey","sortKey","_tag","tag","_ticker","ticker","_timeoutAfter","timeoutAfter","_usesChronometer","usesChronometer","_vibrate","vibrate","_visibility","visibility","_when","when","icon","Error","push","person","Object","values","includes","picture","contentTitle","summaryText","text","argb","onMs","offMs","max","indeterminate","level","build"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/notifications/AndroidNotification.js"],"sourcesContent":["/**\n * \n * AndroidNotification representation wrapper\n */\nimport AndroidAction, { fromNativeAndroidAction } from './AndroidAction';\nimport { BadgeIconType, Category, GroupAlert, Priority } from './types';\nexport default class AndroidNotification {\n  // _publicVersion: Notification;\n  // TODO: style: Style; // Need to figure out if this can work\n  // android unsupported\n  // content: RemoteViews\n  // contentIntent: PendingIntent - need to look at what this is\n  // customBigContentView: RemoteViews\n  // customContentView: RemoteViews\n  // customHeadsUpContentView: RemoteViews\n  // deleteIntent: PendingIntent\n  // fullScreenIntent: PendingIntent\n  // sound.streamType\n  constructor(notification, data) {\n    this._notification = notification;\n\n    if (data) {\n      this._actions = data.actions ? data.actions.map(action => fromNativeAndroidAction(action)) : [];\n      this._autoCancel = data.autoCancel;\n      this._badgeIconType = data.badgeIconType;\n      this._bigPicture = data.bigPicture;\n      this._bigText = data.bigText;\n      this._category = data.category;\n      this._channelId = data.channelId;\n      this._clickAction = data.clickAction;\n      this._color = data.color;\n      this._colorized = data.colorized;\n      this._contentInfo = data.contentInfo;\n      this._defaults = data.defaults;\n      this._group = data.group;\n      this._groupAlertBehaviour = data.groupAlertBehaviour;\n      this._groupSummary = data.groupSummary;\n      this._largeIcon = data.largeIcon;\n      this._lights = data.lights;\n      this._localOnly = data.localOnly;\n      this._number = data.number;\n      this._ongoing = data.ongoing;\n      this._onlyAlertOnce = data.onlyAlertOnce;\n      this._people = data.people;\n      this._priority = data.priority;\n      this._progress = data.progress; // _publicVersion: Notification;\n\n      this._remoteInputHistory = data.remoteInputHistory;\n      this._shortcutId = data.shortcutId;\n      this._showWhen = data.showWhen;\n      this._smallIcon = data.smallIcon;\n      this._sortKey = data.sortKey;\n      this._tag = data.tag;\n      this._ticker = data.ticker;\n      this._timeoutAfter = data.timeoutAfter;\n      this._usesChronometer = data.usesChronometer;\n      this._vibrate = data.vibrate;\n      this._visibility = data.visibility;\n      this._when = data.when;\n    } // Defaults\n\n\n    this._actions = this._actions || [];\n    this._people = this._people || [];\n    this._smallIcon = this._smallIcon || {\n      icon: 'ic_launcher'\n    };\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  get autoCancel() {\n    return this._autoCancel;\n  }\n\n  get badgeIconType() {\n    return this._badgeIconType;\n  }\n\n  get bigPicture() {\n    return this._bigPicture;\n  }\n\n  get bigText() {\n    return this._bigText;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get channelId() {\n    return this._channelId;\n  }\n\n  get clickAction() {\n    return this._clickAction;\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  get colorized() {\n    return this._colorized;\n  }\n\n  get contentInfo() {\n    return this._contentInfo;\n  }\n\n  get defaults() {\n    return this._defaults;\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  get groupAlertBehaviour() {\n    return this._groupAlertBehaviour;\n  }\n\n  get groupSummary() {\n    return this._groupSummary;\n  }\n\n  get largeIcon() {\n    return this._largeIcon;\n  }\n\n  get lights() {\n    return this._lights;\n  }\n\n  get localOnly() {\n    return this._localOnly;\n  }\n\n  get number() {\n    return this._number;\n  }\n\n  get ongoing() {\n    return this._ongoing;\n  }\n\n  get onlyAlertOnce() {\n    return this._onlyAlertOnce;\n  }\n\n  get people() {\n    return this._people;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  get progress() {\n    return this._progress;\n  }\n\n  get remoteInputHistory() {\n    return this._remoteInputHistory;\n  }\n\n  get shortcutId() {\n    return this._shortcutId;\n  }\n\n  get showWhen() {\n    return this._showWhen;\n  }\n\n  get smallIcon() {\n    return this._smallIcon;\n  }\n\n  get sortKey() {\n    return this._sortKey;\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  get ticker() {\n    return this._ticker;\n  }\n\n  get timeoutAfter() {\n    return this._timeoutAfter;\n  }\n\n  get usesChronometer() {\n    return this._usesChronometer;\n  }\n\n  get vibrate() {\n    return this._vibrate;\n  }\n\n  get visibility() {\n    return this._visibility;\n  }\n\n  get when() {\n    return this._when;\n  }\n  /**\n   *\n   * @param action\n   * @returns {Notification}\n   */\n\n\n  addAction(action) {\n    if (!(action instanceof AndroidAction)) {\n      throw new Error(`AndroidNotification:addAction expects an 'AndroidAction' but got type ${typeof action}`);\n    }\n\n    this._actions.push(action);\n\n    return this._notification;\n  }\n  /**\n   *\n   * @param person\n   * @returns {Notification}\n   */\n\n\n  addPerson(person) {\n    this._people.push(person);\n\n    return this._notification;\n  }\n  /**\n   *\n   * @param autoCancel\n   * @returns {Notification}\n   */\n\n\n  setAutoCancel(autoCancel) {\n    this._autoCancel = autoCancel;\n    return this._notification;\n  }\n  /**\n   *\n   * @param badgeIconType\n   * @returns {Notification}\n   */\n\n\n  setBadgeIconType(badgeIconType) {\n    if (!Object.values(BadgeIconType).includes(badgeIconType)) {\n      throw new Error(`AndroidNotification:setBadgeIconType Invalid BadgeIconType: ${badgeIconType}`);\n    }\n\n    this._badgeIconType = badgeIconType;\n    return this._notification;\n  }\n\n  setBigPicture(picture, largeIcon, contentTitle, summaryText) {\n    this._bigPicture = {\n      contentTitle,\n      largeIcon,\n      picture,\n      summaryText\n    };\n    return this._notification;\n  }\n\n  setBigText(text, contentTitle, summaryText) {\n    this._bigText = {\n      contentTitle,\n      summaryText,\n      text\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param category\n   * @returns {Notification}\n   */\n\n\n  setCategory(category) {\n    if (!Object.values(Category).includes(category)) {\n      throw new Error(`AndroidNotification:setCategory Invalid Category: ${category}`);\n    }\n\n    this._category = category;\n    return this._notification;\n  }\n  /**\n   *\n   * @param channelId\n   * @returns {Notification}\n   */\n\n\n  setChannelId(channelId) {\n    this._channelId = channelId;\n    return this._notification;\n  }\n  /**\n   *\n   * @param clickAction\n   * @returns {Notification}\n   */\n\n\n  setClickAction(clickAction) {\n    this._clickAction = clickAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param color\n   * @returns {Notification}\n   */\n\n\n  setColor(color) {\n    this._color = color;\n    return this._notification;\n  }\n  /**\n   *\n   * @param colorized\n   * @returns {Notification}\n   */\n\n\n  setColorized(colorized) {\n    this._colorized = colorized;\n    return this._notification;\n  }\n  /**\n   *\n   * @param contentInfo\n   * @returns {Notification}\n   */\n\n\n  setContentInfo(contentInfo) {\n    this._contentInfo = contentInfo;\n    return this._notification;\n  }\n  /**\n   *\n   * @param defaults\n   * @returns {Notification}\n   */\n\n\n  setDefaults(defaults) {\n    this._defaults = defaults;\n    return this._notification;\n  }\n  /**\n   *\n   * @param group\n   * @returns {Notification}\n   */\n\n\n  setGroup(group) {\n    this._group = group;\n    return this._notification;\n  }\n  /**\n   *\n   * @param groupAlertBehaviour\n   * @returns {Notification}\n   */\n\n\n  setGroupAlertBehaviour(groupAlertBehaviour) {\n    if (!Object.values(GroupAlert).includes(groupAlertBehaviour)) {\n      throw new Error(`AndroidNotification:setGroupAlertBehaviour Invalid GroupAlert: ${groupAlertBehaviour}`);\n    }\n\n    this._groupAlertBehaviour = groupAlertBehaviour;\n    return this._notification;\n  }\n  /**\n   *\n   * @param groupSummary\n   * @returns {Notification}\n   */\n\n\n  setGroupSummary(groupSummary) {\n    this._groupSummary = groupSummary;\n    return this._notification;\n  }\n  /**\n   *\n   * @param largeIcon\n   * @returns {Notification}\n   */\n\n\n  setLargeIcon(largeIcon) {\n    this._largeIcon = largeIcon;\n    return this._notification;\n  }\n  /**\n   *\n   * @param argb\n   * @param onMs\n   * @param offMs\n   * @returns {Notification}\n   */\n\n\n  setLights(argb, onMs, offMs) {\n    this._lights = {\n      argb,\n      onMs,\n      offMs\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param localOnly\n   * @returns {Notification}\n   */\n\n\n  setLocalOnly(localOnly) {\n    this._localOnly = localOnly;\n    return this._notification;\n  }\n  /**\n   *\n   * @param number\n   * @returns {Notification}\n   */\n\n\n  setNumber(number) {\n    this._number = number;\n    return this._notification;\n  }\n  /**\n   *\n   * @param ongoing\n   * @returns {Notification}\n   */\n\n\n  setOngoing(ongoing) {\n    this._ongoing = ongoing;\n    return this._notification;\n  }\n  /**\n   *\n   * @param onlyAlertOnce\n   * @returns {Notification}\n   */\n\n\n  setOnlyAlertOnce(onlyAlertOnce) {\n    this._onlyAlertOnce = onlyAlertOnce;\n    return this._notification;\n  }\n  /**\n   *\n   * @param priority\n   * @returns {Notification}\n   */\n\n\n  setPriority(priority) {\n    if (!Object.values(Priority).includes(priority)) {\n      throw new Error(`AndroidNotification:setPriority Invalid Priority: ${priority}`);\n    }\n\n    this._priority = priority;\n    return this._notification;\n  }\n  /**\n   *\n   * @param max\n   * @param progress\n   * @param indeterminate\n   * @returns {Notification}\n   */\n\n\n  setProgress(max, progress, indeterminate) {\n    this._progress = {\n      max,\n      progress,\n      indeterminate\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param publicVersion\n   * @returns {Notification}\n   */\n\n  /* setPublicVersion(publicVersion: Notification): Notification {\n    this._publicVersion = publicVersion;\n    return this._notification;\n  } */\n\n  /**\n   *\n   * @param remoteInputHistory\n   * @returns {Notification}\n   */\n\n\n  setRemoteInputHistory(remoteInputHistory) {\n    this._remoteInputHistory = remoteInputHistory;\n    return this._notification;\n  }\n  /**\n   *\n   * @param shortcutId\n   * @returns {Notification}\n   */\n\n\n  setShortcutId(shortcutId) {\n    this._shortcutId = shortcutId;\n    return this._notification;\n  }\n  /**\n   *\n   * @param showWhen\n   * @returns {Notification}\n   */\n\n\n  setShowWhen(showWhen) {\n    this._showWhen = showWhen;\n    return this._notification;\n  }\n  /**\n   *\n   * @param icon\n   * @param level\n   * @returns {Notification}\n   */\n\n\n  setSmallIcon(icon, level) {\n    this._smallIcon = {\n      icon,\n      level\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param sortKey\n   * @returns {Notification}\n   */\n\n\n  setSortKey(sortKey) {\n    this._sortKey = sortKey;\n    return this._notification;\n  }\n  /**\n   *\n   * @param tag\n   * @returns {Notification}\n   */\n\n\n  setTag(tag) {\n    this._tag = tag;\n    return this._notification;\n  }\n  /**\n   *\n   * @param ticker\n   * @returns {Notification}\n   */\n\n\n  setTicker(ticker) {\n    this._ticker = ticker;\n    return this._notification;\n  }\n  /**\n   *\n   * @param timeoutAfter\n   * @returns {Notification}\n   */\n\n\n  setTimeoutAfter(timeoutAfter) {\n    this._timeoutAfter = timeoutAfter;\n    return this._notification;\n  }\n  /**\n   *\n   * @param usesChronometer\n   * @returns {Notification}\n   */\n\n\n  setUsesChronometer(usesChronometer) {\n    this._usesChronometer = usesChronometer;\n    return this._notification;\n  }\n  /**\n   *\n   * @param vibrate\n   * @returns {Notification}\n   */\n\n\n  setVibrate(vibrate) {\n    this._vibrate = vibrate;\n    return this._notification;\n  }\n  /**\n   *\n   * @param visibility\n   * @returns {Notification}\n   */\n\n\n  setVisibility(visibility) {\n    this._visibility = visibility;\n    return this._notification;\n  }\n  /**\n   *\n   * @param when\n   * @returns {Notification}\n   */\n\n\n  setWhen(when) {\n    this._when = when;\n    return this._notification;\n  }\n\n  build() {\n    // TODO: Validation of required fields\n    if (!this._channelId) {\n      throw new Error('AndroidNotification: Missing required `channelId` property');\n    } else if (!this._smallIcon) {\n      throw new Error('AndroidNotification: Missing required `smallIcon` property');\n    }\n\n    return {\n      actions: this._actions.map(action => action.build()),\n      autoCancel: this._autoCancel,\n      badgeIconType: this._badgeIconType,\n      bigPicture: this._bigPicture,\n      bigText: this._bigText,\n      category: this._category,\n      channelId: this._channelId,\n      clickAction: this._clickAction,\n      color: this._color,\n      colorized: this._colorized,\n      contentInfo: this._contentInfo,\n      defaults: this._defaults,\n      group: this._group,\n      groupAlertBehaviour: this._groupAlertBehaviour,\n      groupSummary: this._groupSummary,\n      largeIcon: this._largeIcon,\n      lights: this._lights,\n      localOnly: this._localOnly,\n      number: this._number,\n      ongoing: this._ongoing,\n      onlyAlertOnce: this._onlyAlertOnce,\n      people: this._people,\n      priority: this._priority,\n      progress: this._progress,\n      // publicVersion: this._publicVersion,\n      remoteInputHistory: this._remoteInputHistory,\n      shortcutId: this._shortcutId,\n      showWhen: this._showWhen,\n      smallIcon: this._smallIcon,\n      sortKey: this._sortKey,\n      // TODO: style: Style,\n      tag: this._tag,\n      ticker: this._ticker,\n      timeoutAfter: this._timeoutAfter,\n      usesChronometer: this._usesChronometer,\n      vibrate: this._vibrate,\n      visibility: this._visibility,\n      when: this._when\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}