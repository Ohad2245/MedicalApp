{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isIOS } from \"../../utils\";\nimport { getLogger } from \"../../utils/log\";\nimport { getNativeModule } from \"../../utils/native\";\n\nvar IOSNotification = function () {\n  function IOSNotification(notification, notifications, data) {\n    _classCallCheck(this, IOSNotification);\n\n    this._notification = notification;\n\n    if (data) {\n      this._alertAction = data.alertAction;\n      this._attachments = data.attachments || [];\n      this._badge = data.badge;\n      this._category = data.category;\n      this._hasAction = data.hasAction;\n      this._launchImage = data.launchImage;\n      this._threadIdentifier = data.threadIdentifier;\n    } else {\n      this._attachments = [];\n    }\n\n    if (!isIOS || !notifications || !notifications.ios) {\n      return this;\n    }\n\n    var complete = function complete(fetchResult) {\n      var notificationId = notification.notificationId;\n\n      if (notificationId && notifications) {\n        getLogger(notifications).debug(\"Completion handler called for notificationId=\" + notificationId);\n        getNativeModule(notifications).complete(notificationId, fetchResult);\n      }\n    };\n\n    if (notifications.ios.shouldAutoComplete) {\n      complete(notifications.ios.backgroundFetchResult.noData);\n    } else {\n      this._complete = complete;\n    }\n  }\n\n  _createClass(IOSNotification, [{\n    key: \"alertAction\",\n    get: function get() {\n      return this._alertAction;\n    }\n  }, {\n    key: \"attachments\",\n    get: function get() {\n      return this._attachments;\n    }\n  }, {\n    key: \"badge\",\n    get: function get() {\n      return this._badge;\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return this._category;\n    }\n  }, {\n    key: \"hasAction\",\n    get: function get() {\n      return this._hasAction;\n    }\n  }, {\n    key: \"launchImage\",\n    get: function get() {\n      return this._launchImage;\n    }\n  }, {\n    key: \"threadIdentifier\",\n    get: function get() {\n      return this._threadIdentifier;\n    }\n  }, {\n    key: \"complete\",\n    get: function get() {\n      return this._complete;\n    }\n  }, {\n    key: \"addAttachment\",\n    value: function addAttachment(identifier, url, options) {\n      this._attachments.push({\n        identifier: identifier,\n        options: options,\n        url: url\n      });\n\n      return this._notification;\n    }\n  }, {\n    key: \"setAlertAction\",\n    value: function setAlertAction(alertAction) {\n      this._alertAction = alertAction;\n      return this._notification;\n    }\n  }, {\n    key: \"setBadge\",\n    value: function setBadge(badge) {\n      this._badge = badge;\n      return this._notification;\n    }\n  }, {\n    key: \"setCategory\",\n    value: function setCategory(category) {\n      this._category = category;\n      return this._notification;\n    }\n  }, {\n    key: \"setHasAction\",\n    value: function setHasAction(hasAction) {\n      this._hasAction = hasAction;\n      return this._notification;\n    }\n  }, {\n    key: \"setLaunchImage\",\n    value: function setLaunchImage(launchImage) {\n      this._launchImage = launchImage;\n      return this._notification;\n    }\n  }, {\n    key: \"setThreadIdentifier\",\n    value: function setThreadIdentifier(threadIdentifier) {\n      this._threadIdentifier = threadIdentifier;\n      return this._notification;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        alertAction: this._alertAction,\n        attachments: this._attachments,\n        badge: this._badge,\n        category: this._category,\n        hasAction: this._hasAction,\n        launchImage: this._launchImage,\n        threadIdentifier: this._threadIdentifier\n      };\n    }\n  }]);\n\n  return IOSNotification;\n}();\n\nexport { IOSNotification as default };","map":{"version":3,"names":["isIOS","getLogger","getNativeModule","IOSNotification","notification","notifications","data","_notification","_alertAction","alertAction","_attachments","attachments","_badge","badge","_category","category","_hasAction","hasAction","_launchImage","launchImage","_threadIdentifier","threadIdentifier","ios","complete","fetchResult","notificationId","debug","shouldAutoComplete","backgroundFetchResult","noData","_complete","identifier","url","options","push"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/notifications/IOSNotification.js"],"sourcesContent":["/**\n * \n * IOSNotification representation wrapper\n */\nimport { isIOS } from '../../utils';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nexport default class IOSNotification {\n  constructor(notification, notifications, data) {\n    this._notification = notification;\n\n    if (data) {\n      this._alertAction = data.alertAction;\n      this._attachments = data.attachments || [];\n      this._badge = data.badge;\n      this._category = data.category;\n      this._hasAction = data.hasAction;\n      this._launchImage = data.launchImage;\n      this._threadIdentifier = data.threadIdentifier;\n    } else {\n      this._attachments = [];\n    }\n\n    if (!isIOS || !notifications || !notifications.ios) {\n      return this;\n    } // IOS + Native Notification Only\n\n\n    const complete = fetchResult => {\n      const {\n        notificationId\n      } = notification; // && notifications check for Flow\n\n      if (notificationId && notifications) {\n        getLogger(notifications).debug(`Completion handler called for notificationId=${notificationId}`);\n        getNativeModule(notifications).complete(notificationId, fetchResult);\n      }\n    };\n\n    if (notifications.ios.shouldAutoComplete) {\n      complete(notifications.ios.backgroundFetchResult.noData);\n    } else {\n      this._complete = complete;\n    }\n  }\n\n  get alertAction() {\n    return this._alertAction;\n  }\n\n  get attachments() {\n    return this._attachments;\n  }\n\n  get badge() {\n    return this._badge;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get hasAction() {\n    return this._hasAction;\n  }\n\n  get launchImage() {\n    return this._launchImage;\n  }\n\n  get threadIdentifier() {\n    return this._threadIdentifier;\n  }\n\n  get complete() {\n    return this._complete;\n  }\n  /**\n   *\n   * @param identifier\n   * @param url\n   * @param options\n   * @returns {Notification}\n   */\n\n\n  addAttachment(identifier, url, options) {\n    this._attachments.push({\n      identifier,\n      options,\n      url\n    });\n\n    return this._notification;\n  }\n  /**\n   *\n   * @param alertAction\n   * @returns {Notification}\n   */\n\n\n  setAlertAction(alertAction) {\n    this._alertAction = alertAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param badge\n   * @returns {Notification}\n   */\n\n\n  setBadge(badge) {\n    this._badge = badge;\n    return this._notification;\n  }\n  /**\n   *\n   * @param category\n   * @returns {Notification}\n   */\n\n\n  setCategory(category) {\n    this._category = category;\n    return this._notification;\n  }\n  /**\n   *\n   * @param hasAction\n   * @returns {Notification}\n   */\n\n\n  setHasAction(hasAction) {\n    this._hasAction = hasAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param launchImage\n   * @returns {Notification}\n   */\n\n\n  setLaunchImage(launchImage) {\n    this._launchImage = launchImage;\n    return this._notification;\n  }\n  /**\n   *\n   * @param threadIdentifier\n   * @returns {Notification}\n   */\n\n\n  setThreadIdentifier(threadIdentifier) {\n    this._threadIdentifier = threadIdentifier;\n    return this._notification;\n  }\n\n  build() {\n    // TODO: Validation of required fields\n    return {\n      alertAction: this._alertAction,\n      attachments: this._attachments,\n      badge: this._badge,\n      category: this._category,\n      hasAction: this._hasAction,\n      launchImage: this._launchImage,\n      threadIdentifier: this._threadIdentifier\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}