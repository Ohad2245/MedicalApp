{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar AndroidRemoteInput = function () {\n  function AndroidRemoteInput(resultKey) {\n    _classCallCheck(this, AndroidRemoteInput);\n\n    this._allowedDataTypes = [];\n    this._choices = [];\n    this._resultKey = resultKey;\n  }\n\n  _createClass(AndroidRemoteInput, [{\n    key: \"allowedDataTypes\",\n    get: function get() {\n      return this._allowedDataTypes;\n    }\n  }, {\n    key: \"allowFreeFormInput\",\n    get: function get() {\n      return this._allowFreeFormInput;\n    }\n  }, {\n    key: \"choices\",\n    get: function get() {\n      return this._choices;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._label;\n    }\n  }, {\n    key: \"resultKey\",\n    get: function get() {\n      return this._resultKey;\n    }\n  }, {\n    key: \"setAllowDataType\",\n    value: function setAllowDataType(mimeType, allow) {\n      this._allowedDataTypes.push({\n        allow: allow,\n        mimeType: mimeType\n      });\n\n      return this;\n    }\n  }, {\n    key: \"setAllowFreeFormInput\",\n    value: function setAllowFreeFormInput(allowFreeFormInput) {\n      this._allowFreeFormInput = allowFreeFormInput;\n      return this;\n    }\n  }, {\n    key: \"setChoices\",\n    value: function setChoices(choices) {\n      this._choices = choices;\n      return this;\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(label) {\n      this._label = label;\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._resultKey) {\n        throw new Error('AndroidRemoteInput: Missing required `resultKey` property');\n      }\n\n      return {\n        allowedDataTypes: this._allowedDataTypes,\n        allowFreeFormInput: this._allowFreeFormInput,\n        choices: this._choices,\n        label: this._label,\n        resultKey: this._resultKey\n      };\n    }\n  }]);\n\n  return AndroidRemoteInput;\n}();\n\nexport { AndroidRemoteInput as default };\nexport var fromNativeAndroidRemoteInput = function fromNativeAndroidRemoteInput(nativeRemoteInput) {\n  var remoteInput = new AndroidRemoteInput(nativeRemoteInput.resultKey);\n\n  if (nativeRemoteInput.allowedDataTypes) {\n    for (var i = 0; i < nativeRemoteInput.allowedDataTypes.length; i++) {\n      var allowDataType = nativeRemoteInput.allowedDataTypes[i];\n      remoteInput.setAllowDataType(allowDataType.mimeType, allowDataType.allow);\n    }\n  }\n\n  if (nativeRemoteInput.allowFreeFormInput) {\n    remoteInput.setAllowFreeFormInput(nativeRemoteInput.allowFreeFormInput);\n  }\n\n  if (nativeRemoteInput.choices) {\n    remoteInput.setChoices(nativeRemoteInput.choices);\n  }\n\n  if (nativeRemoteInput.label) {\n    remoteInput.setLabel(nativeRemoteInput.label);\n  }\n\n  return remoteInput;\n};","map":{"version":3,"names":["AndroidRemoteInput","resultKey","_allowedDataTypes","_choices","_resultKey","_allowFreeFormInput","_label","mimeType","allow","push","allowFreeFormInput","choices","label","Error","allowedDataTypes","fromNativeAndroidRemoteInput","nativeRemoteInput","remoteInput","i","length","allowDataType","setAllowDataType","setAllowFreeFormInput","setChoices","setLabel"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/notifications/AndroidRemoteInput.js"],"sourcesContent":["/**\n * \n * AndroidRemoteInput representation wrapper\n */\nexport default class AndroidRemoteInput {\n  constructor(resultKey) {\n    this._allowedDataTypes = [];\n    this._choices = [];\n    this._resultKey = resultKey;\n  }\n\n  get allowedDataTypes() {\n    return this._allowedDataTypes;\n  }\n\n  get allowFreeFormInput() {\n    return this._allowFreeFormInput;\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  get resultKey() {\n    return this._resultKey;\n  }\n  /**\n   *\n   * @param mimeType\n   * @param allow\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setAllowDataType(mimeType, allow) {\n    this._allowedDataTypes.push({\n      allow,\n      mimeType\n    });\n\n    return this;\n  }\n  /**\n   *\n   * @param allowFreeFormInput\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setAllowFreeFormInput(allowFreeFormInput) {\n    this._allowFreeFormInput = allowFreeFormInput;\n    return this;\n  }\n  /**\n   *\n   * @param choices\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setChoices(choices) {\n    this._choices = choices;\n    return this;\n  }\n  /**\n   *\n   * @param label\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setLabel(label) {\n    this._label = label;\n    return this;\n  }\n\n  build() {\n    if (!this._resultKey) {\n      throw new Error('AndroidRemoteInput: Missing required `resultKey` property');\n    }\n\n    return {\n      allowedDataTypes: this._allowedDataTypes,\n      allowFreeFormInput: this._allowFreeFormInput,\n      choices: this._choices,\n      label: this._label,\n      resultKey: this._resultKey\n    };\n  }\n\n}\nexport const fromNativeAndroidRemoteInput = nativeRemoteInput => {\n  const remoteInput = new AndroidRemoteInput(nativeRemoteInput.resultKey);\n\n  if (nativeRemoteInput.allowedDataTypes) {\n    for (let i = 0; i < nativeRemoteInput.allowedDataTypes.length; i++) {\n      const allowDataType = nativeRemoteInput.allowedDataTypes[i];\n      remoteInput.setAllowDataType(allowDataType.mimeType, allowDataType.allow);\n    }\n  }\n\n  if (nativeRemoteInput.allowFreeFormInput) {\n    remoteInput.setAllowFreeFormInput(nativeRemoteInput.allowFreeFormInput);\n  }\n\n  if (nativeRemoteInput.choices) {\n    remoteInput.setChoices(nativeRemoteInput.choices);\n  }\n\n  if (nativeRemoteInput.label) {\n    remoteInput.setLabel(nativeRemoteInput.label);\n  }\n\n  return remoteInput;\n};"],"mappings":";;;IAIqBA,kB;EACnB,4BAAYC,SAAZ,EAAuB;IAAA;;IACrB,KAAKC,iBAAL,GAAyB,EAAzB;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,UAAL,GAAkBH,SAAlB;EACD;;;;SAED,eAAuB;MACrB,OAAO,KAAKC,iBAAZ;IACD;;;SAED,eAAyB;MACvB,OAAO,KAAKG,mBAAZ;IACD;;;SAED,eAAc;MACZ,OAAO,KAAKF,QAAZ;IACD;;;SAED,eAAY;MACV,OAAO,KAAKG,MAAZ;IACD;;;SAED,eAAgB;MACd,OAAO,KAAKF,UAAZ;IACD;;;WASD,0BAAiBG,QAAjB,EAA2BC,KAA3B,EAAkC;MAChC,KAAKN,iBAAL,CAAuBO,IAAvB,CAA4B;QAC1BD,KAAK,EAALA,KAD0B;QAE1BD,QAAQ,EAARA;MAF0B,CAA5B;;MAKA,OAAO,IAAP;IACD;;;WAQD,+BAAsBG,kBAAtB,EAA0C;MACxC,KAAKL,mBAAL,GAA2BK,kBAA3B;MACA,OAAO,IAAP;IACD;;;WAQD,oBAAWC,OAAX,EAAoB;MAClB,KAAKR,QAAL,GAAgBQ,OAAhB;MACA,OAAO,IAAP;IACD;;;WAQD,kBAASC,KAAT,EAAgB;MACd,KAAKN,MAAL,GAAcM,KAAd;MACA,OAAO,IAAP;IACD;;;WAED,iBAAQ;MACN,IAAI,CAAC,KAAKR,UAAV,EAAsB;QACpB,MAAM,IAAIS,KAAJ,CAAU,2DAAV,CAAN;MACD;;MAED,OAAO;QACLC,gBAAgB,EAAE,KAAKZ,iBADlB;QAELQ,kBAAkB,EAAE,KAAKL,mBAFpB;QAGLM,OAAO,EAAE,KAAKR,QAHT;QAILS,KAAK,EAAE,KAAKN,MAJP;QAKLL,SAAS,EAAE,KAAKG;MALX,CAAP;IAOD;;;;;;SAxFkBJ,kB;AA2FrB,OAAO,IAAMe,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAAC,iBAAiB,EAAI;EAC/D,IAAMC,WAAW,GAAG,IAAIjB,kBAAJ,CAAuBgB,iBAAiB,CAACf,SAAzC,CAApB;;EAEA,IAAIe,iBAAiB,CAACF,gBAAtB,EAAwC;IACtC,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,iBAAiB,CAACF,gBAAlB,CAAmCK,MAAvD,EAA+DD,CAAC,EAAhE,EAAoE;MAClE,IAAME,aAAa,GAAGJ,iBAAiB,CAACF,gBAAlB,CAAmCI,CAAnC,CAAtB;MACAD,WAAW,CAACI,gBAAZ,CAA6BD,aAAa,CAACb,QAA3C,EAAqDa,aAAa,CAACZ,KAAnE;IACD;EACF;;EAED,IAAIQ,iBAAiB,CAACN,kBAAtB,EAA0C;IACxCO,WAAW,CAACK,qBAAZ,CAAkCN,iBAAiB,CAACN,kBAApD;EACD;;EAED,IAAIM,iBAAiB,CAACL,OAAtB,EAA+B;IAC7BM,WAAW,CAACM,UAAZ,CAAuBP,iBAAiB,CAACL,OAAzC;EACD;;EAED,IAAIK,iBAAiB,CAACJ,KAAtB,EAA6B;IAC3BK,WAAW,CAACO,QAAZ,CAAqBR,iBAAiB,CAACJ,KAAvC;EACD;;EAED,OAAOK,WAAP;AACD,CAvBM"},"metadata":{},"sourceType":"module"}