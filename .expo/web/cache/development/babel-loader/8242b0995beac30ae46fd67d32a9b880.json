{"ast":null,"code":"import NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport EventEmitter from 'react-native/Libraries/vendor/emitter/EventEmitter';\nvar NATIVE_EMITTERS = {};\nvar NATIVE_SUBSCRIPTIONS = {};\nexport var SharedEventEmitter = new EventEmitter();\nexport var getAppEventName = function getAppEventName(module, eventName) {\n  return module.app.name + \"-\" + eventName;\n};\n\nvar getNativeEmitter = function getNativeEmitter(moduleName, module) {\n  var name = module.app.name + \"-\" + moduleName;\n  var nativeModule = NativeModules[moduleName];\n\n  if (!NATIVE_EMITTERS[name]) {\n    NATIVE_EMITTERS[name] = new NativeEventEmitter(nativeModule);\n  }\n\n  return NATIVE_EMITTERS[name];\n};\n\nvar subscribeToNativeModuleEvents = function subscribeToNativeModuleEvents(moduleName, module, eventName) {\n  if (!NATIVE_SUBSCRIPTIONS[eventName]) {\n    var nativeEmitter = getNativeEmitter(moduleName, module);\n    nativeEmitter.addListener(eventName, function (event) {\n      if (event.appName) {\n        SharedEventEmitter.emit(event.appName + \"-\" + eventName, event);\n      } else {\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n    NATIVE_SUBSCRIPTIONS[eventName] = true;\n  }\n};\n\nexport var initialiseNativeModuleEventEmitter = function initialiseNativeModuleEventEmitter(module, config) {\n  var events = config.events,\n      moduleName = config.moduleName;\n\n  if (events && events.length) {\n    for (var i = 0, len = events.length; i < len; i++) {\n      subscribeToNativeModuleEvents(moduleName, module, events[i]);\n    }\n  }\n};","map":{"version":3,"names":["EventEmitter","NATIVE_EMITTERS","NATIVE_SUBSCRIPTIONS","SharedEventEmitter","getAppEventName","module","eventName","app","name","getNativeEmitter","moduleName","nativeModule","NativeModules","NativeEventEmitter","subscribeToNativeModuleEvents","nativeEmitter","addListener","event","appName","emit","initialiseNativeModuleEventEmitter","config","events","length","i","len"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/utils/events.js"],"sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\nimport EventEmitter from 'react-native/Libraries/vendor/emitter/EventEmitter';\nconst NATIVE_EMITTERS = {};\nconst NATIVE_SUBSCRIPTIONS = {};\nexport const SharedEventEmitter = new EventEmitter();\nexport const getAppEventName = (module, eventName) => `${module.app.name}-${eventName}`;\n\nconst getNativeEmitter = (moduleName, module) => {\n  const name = `${module.app.name}-${moduleName}`;\n  const nativeModule = NativeModules[moduleName];\n\n  if (!NATIVE_EMITTERS[name]) {\n    NATIVE_EMITTERS[name] = new NativeEventEmitter(nativeModule);\n  }\n\n  return NATIVE_EMITTERS[name];\n};\n/**\n * Subscribe to a native event for js side distribution by appName\n *    React Native events are hard set at compile - cant do dynamic event names\n *    so we use a single event send it to js and js then internally can prefix it\n *    and distribute dynamically.\n *\n * @param moduleName\n * @param module\n * @param eventName\n * @private\n */\n\n\nconst subscribeToNativeModuleEvents = (moduleName, module, eventName) => {\n  if (!NATIVE_SUBSCRIPTIONS[eventName]) {\n    const nativeEmitter = getNativeEmitter(moduleName, module);\n    nativeEmitter.addListener(eventName, event => {\n      if (event.appName) {\n        // native event has an appName property - auto prefix and internally emit\n        SharedEventEmitter.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        // standard event - no need to prefix\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n    NATIVE_SUBSCRIPTIONS[eventName] = true;\n  }\n};\n\nexport const initialiseNativeModuleEventEmitter = (module, config) => {\n  const {\n    events,\n    moduleName\n  } = config;\n\n  if (events && events.length) {\n    for (let i = 0, len = events.length; i < len; i++) {\n      subscribeToNativeModuleEvents(moduleName, module, events[i]);\n    }\n  }\n};"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,oDAAzB;AACA,IAAMC,eAAe,GAAG,EAAxB;AACA,IAAMC,oBAAoB,GAAG,EAA7B;AACA,OAAO,IAAMC,kBAAkB,GAAG,IAAIH,YAAJ,EAA3B;AACP,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,SAAT;EAAA,OAA0BD,MAAM,CAACE,GAAP,CAAWC,IAArC,SAA6CF,SAA7C;AAAA,CAAxB;;AAEP,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAaL,MAAb,EAAwB;EAC/C,IAAMG,IAAI,GAAMH,MAAM,CAACE,GAAP,CAAWC,IAAjB,SAAyBE,UAAnC;EACA,IAAMC,YAAY,GAAGC,aAAa,CAACF,UAAD,CAAlC;;EAEA,IAAI,CAACT,eAAe,CAACO,IAAD,CAApB,EAA4B;IAC1BP,eAAe,CAACO,IAAD,CAAf,GAAwB,IAAIK,kBAAJ,CAAuBF,YAAvB,CAAxB;EACD;;EAED,OAAOV,eAAe,CAACO,IAAD,CAAtB;AACD,CATD;;AAuBA,IAAMM,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACJ,UAAD,EAAaL,MAAb,EAAqBC,SAArB,EAAmC;EACvE,IAAI,CAACJ,oBAAoB,CAACI,SAAD,CAAzB,EAAsC;IACpC,IAAMS,aAAa,GAAGN,gBAAgB,CAACC,UAAD,EAAaL,MAAb,CAAtC;IACAU,aAAa,CAACC,WAAd,CAA0BV,SAA1B,EAAqC,UAAAW,KAAK,EAAI;MAC5C,IAAIA,KAAK,CAACC,OAAV,EAAmB;QAEjBf,kBAAkB,CAACgB,IAAnB,CAA2BF,KAAK,CAACC,OAAjC,SAA4CZ,SAA5C,EAAyDW,KAAzD;MACD,CAHD,MAGO;QAELd,kBAAkB,CAACgB,IAAnB,CAAwBb,SAAxB,EAAmCW,KAAnC;MACD;IACF,CARD;IASAf,oBAAoB,CAACI,SAAD,CAApB,GAAkC,IAAlC;EACD;AACF,CAdD;;AAgBA,OAAO,IAAMc,kCAAkC,GAAG,SAArCA,kCAAqC,CAACf,MAAD,EAASgB,MAAT,EAAoB;EACpE,IACEC,MADF,GAGID,MAHJ,CACEC,MADF;EAAA,IAEEZ,UAFF,GAGIW,MAHJ,CAEEX,UAFF;;EAKA,IAAIY,MAAM,IAAIA,MAAM,CAACC,MAArB,EAA6B;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,MAAM,CAACC,MAA7B,EAAqCC,CAAC,GAAGC,GAAzC,EAA8CD,CAAC,EAA/C,EAAmD;MACjDV,6BAA6B,CAACJ,UAAD,EAAaL,MAAb,EAAqBiB,MAAM,CAACE,CAAD,CAA3B,CAA7B;IACD;EACF;AACF,CAXM"},"metadata":{},"sourceType":"module"}