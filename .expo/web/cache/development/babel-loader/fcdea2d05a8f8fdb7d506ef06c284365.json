{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"background\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var CardSideEnum = {\n  FRONT: 'FRONT',\n  BACK: 'BACK'\n};\nvar CardSide = function CardSide(_ref) {\n  var children = _ref.children,\n    _ref$style = _ref.style,\n    style = _ref$style === void 0 ? [] : _ref$style,\n    _ref$background = _ref.background,\n    background = _ref$background === void 0 ? '#612F74' : _ref$background,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var SideBackground = React.useCallback(function (_ref2) {\n    var child = _ref2.children;\n    return typeof background === 'string' ? React.createElement(View, {\n      style: {\n        borderRadius: 9,\n        backgroundColor: background\n      }\n    }, child) : React.cloneElement(background, {\n      children: child\n    });\n  }, [background]);\n  return React.createElement(Animated.View, _extends({\n    style: [styles.sideWrapper].concat(_toConsumableArray(style))\n  }, props), React.createElement(SideBackground, null, React.createElement(View, {\n    style: styles.container\n  }, children)));\n};\nvar styles = StyleSheet.create({\n  sideWrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 9\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: 16\n  }\n});\nexport default CardSide;","map":{"version":3,"sources":["CardSide.tsx"],"names":["React","CardSideEnum","FRONT","BACK","CardSide","children","style","background","props","SideBackground","useCallback","child","borderRadius","backgroundColor","cloneElement","styles","sideWrapper","container","create","width","height","position","padding"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA;AAAA;AAAA;AAGA,OAAO,IAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,OADmB;EAE1BC,IAAI,EAAE;AAFoB,CAArB;AAKP,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAKH;EAAA,IAJTC,QADgB,QAChBA,QADgB;IAAA,kBAEhBC,KAAK;IAALA,KAAK,2BAAG,EAFQ;IAAA,uBAGhBC,UAAU;IAAVA,UAAU,gCAAG,SAHG;IAIbC,KAAAA;EAEH,IAAMC,cAAc,GAAG,KAAK,CAACC,WAAN,CACrB,iBAAyB;IAAA,IAAZC,KAAAA,SAAVN,QAAQ;IACT,OAAO,OAAOE,UAAP,KAAsB,QAAtB,GACL,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;MAAM,KAAK,EAAE;QAAEK,YAAY,EAAE,CAAhB;QAAmBC,eAAe,EAAEN;MAApC;IAAb,CAAA,EACGI,KADH,CADK,GAKL,KAAK,CAACG,YAAN,CAAmBP,UAAnB,EAA+B;MAAEF,QAAQ,EAAEM;IAAZ,CAA/B,CALF;EAOD,CAToB,EAUrB,CAACJ,UAAD,CAVqB,CAAvB;EAaA,OACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAU,IAAV,EAAA,QAAA,CAAA;IAAe,KAAK,GAAGQ,MAAM,CAACC,WAAR,4BAAwBV,KAAxB;EAAtB,CAAA,EAA0DE,KAA1D,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAEO,MAAM,CAACE;EAApB,CAAA,EAAgCZ,QAAhC,CADF,CADF,CADF;AAOD,CA1BD;AA4BA,IAAMU,MAAM,GAAG,UAAU,CAACG,MAAX,CAAkB;EAC/BF,WAAW,EAAE;IACXG,KAAK,EAAE,MADI;IAEXC,MAAM,EAAE,MAFG;IAGXC,QAAQ,EAAE,UAHC;IAIXR,eAAe,EAAE,SAJN;IAKXD,YAAY,EAAE;EALH,CADkB;EAQ/BK,SAAS,EAAE;IACTI,QAAQ,EAAE,UADD;IAETF,KAAK,EAAE,MAFE;IAGTC,MAAM,EAAE,MAHC;IAITE,OAAO,EAAE;EAJA;AARoB,CAAlB,CAAf;AAgBA,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport { View, Animated, StyleSheet } from 'react-native';\n\nexport const CardSideEnum = {\n  FRONT: 'FRONT',\n  BACK: 'BACK',\n};\n\nconst CardSide = ({\n  children,\n  style = [],\n  background = '#612F74',\n  ...props\n}: any) => {\n  const SideBackground = React.useCallback(\n    ({ children: child }) => {\n      return typeof background === 'string' ? (\n        <View style={{ borderRadius: 9, backgroundColor: background }}>\n          {child}\n        </View>\n      ) : (\n        React.cloneElement(background, { children: child })\n      );\n    },\n    [background]\n  );\n\n  return (\n    <Animated.View style={[styles.sideWrapper, ...style]} {...props}>\n      <SideBackground>\n        <View style={styles.container}>{children}</View>\n      </SideBackground>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sideWrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 9,\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: 16,\n  },\n});\n\nexport default CardSide;\n"]},"metadata":{},"sourceType":"module"}