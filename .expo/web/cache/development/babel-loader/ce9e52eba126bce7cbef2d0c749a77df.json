{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { NativeBaseProvider, ScrollView, Center, HStack, VStack, Heading, Input, Select, Switch, Button, Image } from 'native-base';\nimport { TimePicker } from 'react-native-wheel-picker-android';\nimport moment from 'moment';\nimport Sound from 'react-native-sound';\nimport Alarm from 'react-native-alarm-manager';\nimport { loadListModal, loadModifyModal, loadContactModal, loadOpenSourceModal } from \"./Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Test = function Test(props) {\n  var hours = [];\n  var minutes = [];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      modifyId = _useState2[0],\n      setModifyId = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      createDate = _useState4[0],\n      setCreateDate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modifyDate = _useState6[0],\n      setModifyDate = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      createTitle = _useState8[0],\n      setCreateTitle = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modifyTitle = _useState10[0],\n      setModifyTitle = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      createText = _useState12[0],\n      setCreateText = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modifyText = _useState14[0],\n      setModifyText = _useState14[1];\n\n  var _useState15 = useState('0'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      createSound = _useState16[0],\n      setCreateSound = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      modifySound = _useState18[0],\n      setModifySound = _useState18[1];\n\n  var _useState19 = useState('0'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      createIcon = _useState20[0],\n      setCreateIcon = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      modifyIcon = _useState22[0],\n      setModifyIcon = _useState22[1];\n\n  var _useState23 = useState(true),\n      _useState24 = _slicedToArray(_useState23, 2),\n      createSoundLoop = _useState24[0],\n      setCreateSoundLoop = _useState24[1];\n\n  var _useState25 = useState(null),\n      _useState26 = _slicedToArray(_useState25, 2),\n      modifySoundLoop = _useState26[0],\n      setModifySoundLoop = _useState26[1];\n\n  var _useState27 = useState(true),\n      _useState28 = _slicedToArray(_useState27, 2),\n      createVibration = _useState28[0],\n      setCreateVibration = _useState28[1];\n\n  var _useState29 = useState(null),\n      _useState30 = _slicedToArray(_useState29, 2),\n      modifyVibration = _useState30[0],\n      setModifyVibration = _useState30[1];\n\n  var _useState31 = useState(true),\n      _useState32 = _slicedToArray(_useState31, 2),\n      createNotiRemovable = _useState32[0],\n      setCreateNotiRemovable = _useState32[1];\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      modifyNotiRemovable = _useState34[0],\n      setModifyNotiRemovable = _useState34[1];\n\n  var _useState35 = useState(null),\n      _useState36 = _slicedToArray(_useState35, 2),\n      soundPlayerList = _useState36[0],\n      setSoundPlayerList = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      listModal = _useState38[0],\n      setListModal = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      modifyModal = _useState40[0],\n      setModifyModal = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      contactModal = _useState42[0],\n      setContactModal = _useState42[1];\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      openSourceModal = _useState44[0],\n      setOpenSourceModal = _useState44[1];\n\n  var _useState45 = useState([]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      alarmList = _useState46[0],\n      setAlarmList = _useState46[1];\n\n  var soundList = ['adventure', 'bliss', 'the_inspiration'];\n  var iconList = ['mail', 'user', 'like'];\n\n  for (var i = 1; i <= 12; i++) {\n    hours.push(i + '');\n  }\n\n  for (var _i = 0; _i < 60; _i++) {\n    if (_i >= 0 && _i < 10) minutes.push('0' + _i);else minutes.push(_i + '');\n  }\n\n  useEffect(function () {\n    var soundPlayers = [];\n\n    for (var _i2 = 0; _i2 < 3; _i2++) {\n      soundPlayers.push(new Sound(soundList[_i2] + '.mp3', Sound.MAIN_BUNDLE));\n    }\n\n    setSoundPlayerList(soundPlayers);\n  }, []);\n\n  var dateToTime = function dateToTime(currDate) {\n    return moment(currDate).format('HH:mm:00') + '';\n  };\n\n  var selectCreateSound = function selectCreateSound(value) {\n    soundPlayerList[createSound].stop();\n    setCreateSound(value);\n    soundPlayerList[value].setVolume(1.0).play();\n  };\n\n  var toggleCreateVibration = function toggleCreateVibration() {\n    setCreateVibration(!createVibration);\n    if (!createVibration) Vibration.vibrate();\n  };\n\n  var selectModifySound = function selectModifySound(value) {\n    soundPlayerList[modifySound].stop();\n    setModifySound(value);\n    soundPlayerList[value].setVolume(1.0).play();\n  };\n\n  var toggleModifyVibration = function toggleModifyVibration() {\n    setModifyVibration(!modifyVibration);\n    if (!modifyVibration) Vibration.vibrate();\n  };\n\n  var openModifyModal = function openModifyModal(alarm) {\n    var date = new Date();\n    var tmpAlarmTime = alarm.alarm_time.split(':');\n    date.setHours(tmpAlarmTime[0]);\n    date.setMinutes(tmpAlarmTime[1]);\n    date.setSeconds(tmpAlarmTime[2]);\n    setModifyDate(date);\n\n    for (var _i3 = 0; _i3 < soundList.length; _i3++) {\n      if (soundList[_i3] == alarm.alarm_sound) {\n        setModifySound(_i3 + '');\n        break;\n      }\n    }\n\n    for (var _i4 = 0; _i4 < iconList.length; _i4++) {\n      if (iconList[_i4] == alarm.alarm_icon) {\n        setModifyIcon(_i4 + '');\n        break;\n      }\n    }\n\n    setModifyId(alarm.alarm_id);\n    setModifyTitle(alarm.alarm_title);\n    setModifyText(alarm.alarm_text);\n    setModifySoundLoop(alarm.alarm_sound_loop);\n    setModifyVibration(alarm.alarm_vibration);\n    setModifyNotiRemovable(alarm.alarm_noti_removable);\n    setModifyModal(true);\n  };\n\n  var closeModifyModal = function closeModifyModal() {\n    soundPlayerList[modifySound].stop();\n    setModifyModal(false);\n  };\n\n  var toggleAlarm = function toggleAlarm(id) {\n    var tmpAlarm = null;\n    var tmpAlarmList = alarmList.map(function (item) {\n      if (id == item.alarm_id) {\n        tmpAlarm = _objectSpread(_objectSpread({}, item), {}, {\n          alarm_activate: !item.alarm_activate\n        });\n        return tmpAlarm;\n      } else return item;\n    });\n    setAlarmList(tmpAlarmList);\n    Alarm.modify(tmpAlarm, function () {}, function (fail) {\n      return alert(fail);\n    });\n  };\n\n  var showList = function showList() {\n    Alarm.searchAll(function (success) {\n      soundPlayerList[createSound].stop();\n      setAlarmList(success);\n      setListModal(true);\n    }, function (fail) {\n      return alert(fail);\n    });\n  };\n\n  var createAlarm = function createAlarm() {\n    var alarmInfo = {\n      alarm_time: dateToTime(createDate),\n      alarm_title: createTitle,\n      alarm_text: createText,\n      alarm_sound: soundList[createSound],\n      alarm_icon: iconList[createIcon],\n      alarm_sound_loop: createSoundLoop,\n      alarm_vibration: createVibration,\n      alarm_noti_removable: createNotiRemovable,\n      alarm_activate: true\n    };\n    Alarm.schedule(alarmInfo, function (success) {\n      return alert(success);\n    }, function (fail) {\n      return alert(fail);\n    });\n  };\n\n  var modifyAlarm = function modifyAlarm() {\n    var alarmInfo = {\n      alarm_id: modifyId,\n      alarm_time: dateToTime(modifyDate),\n      alarm_title: modifyTitle,\n      alarm_text: modifyText,\n      alarm_sound: soundList[modifySound],\n      alarm_icon: iconList[modifyIcon],\n      alarm_sound_loop: modifySoundLoop,\n      alarm_vibration: modifyVibration,\n      alarm_noti_removable: modifyNotiRemovable,\n      alarm_activate: true\n    };\n    Alarm.modify(alarmInfo, function (success1) {\n      Alarm.searchAll(function (success2) {\n        soundPlayerList[modifySound].stop();\n        setAlarmList(success2);\n        setModifyModal(false);\n        alert(success1);\n      }, function (fail) {\n        return alert(fail);\n      });\n    }, function (fail) {\n      return alert(fail);\n    });\n  };\n\n  var deleteAlarm = function deleteAlarm(id, idx) {\n    Alarm.delete(id, function () {\n      var list = alarmList.slice();\n      list.splice(idx, 1);\n      setAlarmList(list);\n    }, function (fail) {\n      return alert(fail);\n    });\n  };\n\n  var stopAlarm = function stopAlarm() {\n    Alarm.stop(function (success) {\n      return alert(success);\n    }, function (fail) {\n      return alert(fail);\n    });\n  };\n\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsxs(HStack, {\n      justifyContent: \"flex-end\",\n      children: [_jsx(Button, {\n        variant: \"ghost\",\n        onPress: function onPress() {\n          return stopAlarm();\n        },\n        children: \"Stop Alarm\"\n      }), _jsx(Button, {\n        variant: \"ghost\",\n        onPress: function onPress() {\n          return showList();\n        },\n        style: {\n          marginRight: 20\n        },\n        children: \"Alarm List\"\n      })]\n    }), _jsxs(ScrollView, {\n      children: [_jsxs(Center, {\n        children: [loadListModal(listModal, alarmList, openModifyModal, deleteAlarm, toggleAlarm, setListModal), loadModifyModal(modifyModal, modifyDate, hours, minutes, modifyTitle, modifyText, modifySound, iconList, modifyIcon, modifySoundLoop, modifyVibration, modifyNotiRemovable, closeModifyModal, setModifyDate, setModifyTitle, setModifyText, selectModifySound, setModifyIcon, setModifySoundLoop, toggleModifyVibration, setModifyNotiRemovable, modifyAlarm), loadContactModal(contactModal, setContactModal), loadOpenSourceModal(openSourceModal, setOpenSourceModal), _jsxs(VStack, {\n          space: 5,\n          children: [_jsx(Heading, {\n            size: \"md\",\n            children: \"Time\"\n          }), _jsx(TimePicker, {\n            initDate: createDate,\n            hours: hours,\n            minutes: minutes,\n            onTimeSelected: function onTimeSelected(currDate) {\n              return setCreateDate(currDate);\n            },\n            style: {\n              height: 200,\n              width: 100\n            },\n            itemTextSize: 25,\n            selectedItemTextSize: 30,\n            selectedItemTextColor: '#333333',\n            itemTextColor: '#bbbbbb',\n            hideIndicator: true\n          }), _jsx(Heading, {\n            size: \"md\",\n            children: \"Title\"\n          }), _jsx(Input, {\n            variant: \"outline\",\n            placeholder: \"Alarm Title\",\n            onChangeText: function onChangeText(value) {\n              return setCreateTitle(value);\n            },\n            style: {\n              marginBottom: 10\n            }\n          }), _jsx(Heading, {\n            size: \"md\",\n            children: \"Text\"\n          }), _jsx(Input, {\n            variant: \"outline\",\n            placeholder: \"Alarm Text\",\n            onChangeText: function onChangeText(value) {\n              return setCreateText(value);\n            },\n            style: {\n              marginBottom: 10\n            }\n          }), _jsx(Heading, {\n            size: \"md\",\n            children: \"Sound\"\n          }), _jsxs(Select, {\n            selectedValue: createSound,\n            onValueChange: function onValueChange(value) {\n              return selectCreateSound(value);\n            },\n            children: [_jsx(Select.Item, {\n              label: \"Adventure\",\n              value: \"0\"\n            }), _jsx(Select.Item, {\n              label: \"Bliss\",\n              value: \"1\"\n            }), _jsx(Select.Item, {\n              label: \"The Inspiration\",\n              value: \"2\"\n            })]\n          }), _jsxs(HStack, {\n            justifyContent: \"space-between\",\n            style: {\n              marginTop: 10\n            },\n            children: [_jsx(Heading, {\n              size: \"md\",\n              children: \"Icon\"\n            }), _jsxs(HStack, {\n              children: [_jsx(Image, {\n                source: {\n                  uri: iconList[0]\n                },\n                size: 25,\n                alt: iconList[0],\n                style: {\n                  marginRight: 10\n                }\n              }), _jsx(Image, {\n                source: {\n                  uri: iconList[1]\n                },\n                size: 25,\n                alt: iconList[1],\n                style: {\n                  marginRight: 10\n                }\n              }), _jsx(Image, {\n                source: {\n                  uri: iconList[2]\n                },\n                size: 25,\n                alt: iconList[2]\n              })]\n            })]\n          }), _jsxs(Select, {\n            selectedValue: createIcon,\n            onValueChange: function onValueChange(value) {\n              return setCreateIcon(value);\n            },\n            children: [_jsx(Select.Item, {\n              label: \"Mail\",\n              value: \"0\"\n            }), _jsx(Select.Item, {\n              label: \"User\",\n              value: \"1\"\n            }), _jsx(Select.Item, {\n              label: \"Like\",\n              value: \"2\"\n            })]\n          }), _jsxs(HStack, {\n            justifyContent: \"space-between\",\n            style: {\n              marginTop: 10\n            },\n            children: [_jsx(Heading, {\n              size: \"md\",\n              children: \"Sound Loop\"\n            }), _jsx(Switch, {\n              size: \"lg\",\n              colorScheme: \"emerald\",\n              isChecked: createSoundLoop,\n              onToggle: function onToggle() {\n                return setCreateSoundLoop(!createSoundLoop);\n              }\n            })]\n          }), _jsxs(HStack, {\n            justifyContent: \"space-between\",\n            children: [_jsx(Heading, {\n              size: \"md\",\n              children: \"Vibration\"\n            }), _jsx(Switch, {\n              size: \"lg\",\n              colorScheme: \"emerald\",\n              isChecked: createVibration,\n              onToggle: function onToggle() {\n                return toggleCreateVibration();\n              }\n            })]\n          }), _jsxs(HStack, {\n            justifyContent: \"space-between\",\n            children: [_jsx(Heading, {\n              size: \"md\",\n              children: \"Notification Removable\"\n            }), _jsx(Switch, {\n              size: \"lg\",\n              colorScheme: \"emerald\",\n              isChecked: createNotiRemovable,\n              onToggle: function onToggle() {\n                return setCreateNotiRemovable(!createNotiRemovable);\n              }\n            })]\n          }), _jsx(Button, {\n            onPress: function onPress() {\n              return createAlarm();\n            },\n            style: {\n              marginTop: 10,\n              marginBottom: 30\n            },\n            children: \"Create Alarm\"\n          })]\n        })]\n      }), _jsxs(HStack, {\n        justifyContent: \"flex-end\",\n        style: {\n          marginRight: 10,\n          marginBottom: 10\n        },\n        children: [_jsx(Button, {\n          variant: \"ghost\",\n          size: \"xs\",\n          onPress: function onPress() {\n            return setContactModal(true);\n          },\n          style: {\n            marginRight: 10\n          },\n          children: \"Contact\"\n        }), _jsx(Button, {\n          variant: \"ghost\",\n          size: \"xs\",\n          onPress: function onPress() {\n            return setOpenSourceModal(true);\n          },\n          children: \"Open Source\"\n        })]\n      })]\n    })]\n  });\n};\n\nexport default Alarm;","map":{"version":3,"names":["React","useEffect","useState","NativeBaseProvider","ScrollView","Center","HStack","VStack","Heading","Input","Select","Switch","Button","Image","TimePicker","moment","Sound","Alarm","loadListModal","loadModifyModal","loadContactModal","loadOpenSourceModal","Test","props","hours","minutes","modifyId","setModifyId","Date","createDate","setCreateDate","modifyDate","setModifyDate","createTitle","setCreateTitle","modifyTitle","setModifyTitle","createText","setCreateText","modifyText","setModifyText","createSound","setCreateSound","modifySound","setModifySound","createIcon","setCreateIcon","modifyIcon","setModifyIcon","createSoundLoop","setCreateSoundLoop","modifySoundLoop","setModifySoundLoop","createVibration","setCreateVibration","modifyVibration","setModifyVibration","createNotiRemovable","setCreateNotiRemovable","modifyNotiRemovable","setModifyNotiRemovable","soundPlayerList","setSoundPlayerList","listModal","setListModal","modifyModal","setModifyModal","contactModal","setContactModal","openSourceModal","setOpenSourceModal","alarmList","setAlarmList","soundList","iconList","i","push","soundPlayers","MAIN_BUNDLE","dateToTime","currDate","format","selectCreateSound","value","stop","setVolume","play","toggleCreateVibration","Vibration","vibrate","selectModifySound","toggleModifyVibration","openModifyModal","alarm","date","tmpAlarmTime","alarm_time","split","setHours","setMinutes","setSeconds","length","alarm_sound","alarm_icon","alarm_id","alarm_title","alarm_text","alarm_sound_loop","alarm_vibration","alarm_noti_removable","closeModifyModal","toggleAlarm","id","tmpAlarm","tmpAlarmList","map","item","alarm_activate","modify","fail","alert","showList","searchAll","success","createAlarm","alarmInfo","schedule","modifyAlarm","success1","success2","deleteAlarm","idx","delete","list","slice","splice","stopAlarm","marginRight","height","width","marginBottom","marginTop","uri"],"sources":["C:/Users/PC/Desktop/All/MedicalApp/my-app/client/components/Authentication/alarm/Alarm.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Vibration} from 'react-native';\r\nimport {\r\n  NativeBaseProvider,\r\n  ScrollView,\r\n  Center,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Input,\r\n  Select,\r\n  Switch,\r\n  Button,\r\n  Image,\r\n} from 'native-base';\r\nimport {TimePicker} from 'react-native-wheel-picker-android';\r\nimport moment from 'moment';\r\nimport Sound from 'react-native-sound';\r\nimport Alarm from 'react-native-alarm-manager';\r\nimport {\r\n  loadListModal,\r\n  loadModifyModal,\r\n  loadContactModal,\r\n  loadOpenSourceModal,\r\n} from './Modal';\r\n\r\nconst Test = props => {\r\n  const hours = [];\r\n  const minutes = [];\r\n  const [modifyId, setModifyId] = useState(null);\r\n  const [createDate, setCreateDate] = useState(new Date());\r\n  const [modifyDate, setModifyDate] = useState(null);\r\n  const [createTitle, setCreateTitle] = useState('');\r\n  const [modifyTitle, setModifyTitle] = useState(null);\r\n  const [createText, setCreateText] = useState('');\r\n  const [modifyText, setModifyText] = useState(null);\r\n  const [createSound, setCreateSound] = useState('0');\r\n  const [modifySound, setModifySound] = useState(null);\r\n  const [createIcon, setCreateIcon] = useState('0');\r\n  const [modifyIcon, setModifyIcon] = useState(null);\r\n  const [createSoundLoop, setCreateSoundLoop] = useState(true);\r\n  const [modifySoundLoop, setModifySoundLoop] = useState(null);\r\n  const [createVibration, setCreateVibration] = useState(true);\r\n  const [modifyVibration, setModifyVibration] = useState(null);\r\n  const [createNotiRemovable, setCreateNotiRemovable] = useState(true);\r\n  const [modifyNotiRemovable, setModifyNotiRemovable] = useState(null);\r\n  const [soundPlayerList, setSoundPlayerList] = useState(null);\r\n  const [listModal, setListModal] = useState(false);\r\n  const [modifyModal, setModifyModal] = useState(false);\r\n  const [contactModal, setContactModal] = useState(false);\r\n  const [openSourceModal, setOpenSourceModal] = useState(false);\r\n  const [alarmList, setAlarmList] = useState([]);\r\n\r\n  const soundList = ['adventure', 'bliss', 'the_inspiration'];\r\n  const iconList = ['mail', 'user', 'like'];\r\n\r\n  for (let i = 1; i <= 12; i++) hours.push(i + '');\r\n\r\n  for (let i = 0; i < 60; i++) {\r\n    if (i >= 0 && i < 10) minutes.push('0' + i);\r\n    else minutes.push(i + '');\r\n  }\r\n\r\n  useEffect(() => {\r\n    const soundPlayers = [];\r\n\r\n    for (let i = 0; i < 3; i++)\r\n      soundPlayers.push(new Sound(soundList[i] + '.mp3', Sound.MAIN_BUNDLE));\r\n\r\n    setSoundPlayerList(soundPlayers);\r\n  }, []);\r\n\r\n  const dateToTime = currDate => {\r\n    return moment(currDate).format('HH:mm:00') + '';\r\n  };\r\n\r\n  const selectCreateSound = value => {\r\n    soundPlayerList[createSound].stop();\r\n    setCreateSound(value);\r\n    soundPlayerList[value].setVolume(1.0).play();\r\n  };\r\n\r\n  const toggleCreateVibration = () => {\r\n    setCreateVibration(!createVibration);\r\n    if (!createVibration) Vibration.vibrate();\r\n  };\r\n\r\n  const selectModifySound = value => {\r\n    soundPlayerList[modifySound].stop();\r\n    setModifySound(value);\r\n    soundPlayerList[value].setVolume(1.0).play();\r\n  };\r\n\r\n  const toggleModifyVibration = () => {\r\n    setModifyVibration(!modifyVibration);\r\n    if (!modifyVibration) Vibration.vibrate();\r\n  };\r\n\r\n  const openModifyModal = alarm => {\r\n    const date = new Date();\r\n    const tmpAlarmTime = alarm.alarm_time.split(':');\r\n\r\n    date.setHours(tmpAlarmTime[0]);\r\n    date.setMinutes(tmpAlarmTime[1]);\r\n    date.setSeconds(tmpAlarmTime[2]);\r\n\r\n    setModifyDate(date);\r\n\r\n    for (let i = 0; i < soundList.length; i++) {\r\n      if (soundList[i] == alarm.alarm_sound) {\r\n        setModifySound(i + '');\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < iconList.length; i++) {\r\n      if (iconList[i] == alarm.alarm_icon) {\r\n        setModifyIcon(i + '');\r\n        break;\r\n      }\r\n    }\r\n\r\n    setModifyId(alarm.alarm_id);\r\n    setModifyTitle(alarm.alarm_title);\r\n    setModifyText(alarm.alarm_text);\r\n    setModifySoundLoop(alarm.alarm_sound_loop);\r\n    setModifyVibration(alarm.alarm_vibration);\r\n    setModifyNotiRemovable(alarm.alarm_noti_removable);\r\n    setModifyModal(true);\r\n  };\r\n\r\n  const closeModifyModal = () => {\r\n    soundPlayerList[modifySound].stop();\r\n    setModifyModal(false);\r\n  };\r\n\r\n  const toggleAlarm = id => {\r\n    let tmpAlarm = null;\r\n\r\n    const tmpAlarmList = alarmList.map(item => {\r\n      if (id == item.alarm_id) {\r\n        tmpAlarm = {...item, alarm_activate: !item.alarm_activate};\r\n        return tmpAlarm;\r\n      } else return item;\r\n    });\r\n\r\n    setAlarmList(tmpAlarmList);\r\n\r\n    Alarm.modify(\r\n      tmpAlarm,\r\n      () => {},\r\n      fail => alert(fail),\r\n    );\r\n  };\r\n\r\n  const showList = () => {\r\n    Alarm.searchAll(\r\n      success => {\r\n        soundPlayerList[createSound].stop();\r\n        setAlarmList(success);\r\n        setListModal(true);\r\n      },\r\n      fail => alert(fail),\r\n    );\r\n  };\r\n\r\n  const createAlarm = () => {\r\n    const alarmInfo = {\r\n      alarm_time: dateToTime(createDate),\r\n      alarm_title: createTitle,\r\n      alarm_text: createText,\r\n      alarm_sound: soundList[createSound],\r\n      alarm_icon: iconList[createIcon],\r\n      alarm_sound_loop: createSoundLoop,\r\n      alarm_vibration: createVibration,\r\n      alarm_noti_removable: createNotiRemovable,\r\n      alarm_activate: true,\r\n    };\r\n\r\n    Alarm.schedule(\r\n      alarmInfo,\r\n      success => alert(success),\r\n      fail => alert(fail),\r\n    );\r\n  };\r\n\r\n  const modifyAlarm = () => {\r\n    const alarmInfo = {\r\n      alarm_id: modifyId,\r\n      alarm_time: dateToTime(modifyDate),\r\n      alarm_title: modifyTitle,\r\n      alarm_text: modifyText,\r\n      alarm_sound: soundList[modifySound],\r\n      alarm_icon: iconList[modifyIcon],\r\n      alarm_sound_loop: modifySoundLoop,\r\n      alarm_vibration: modifyVibration,\r\n      alarm_noti_removable: modifyNotiRemovable,\r\n      alarm_activate: true,\r\n    };\r\n\r\n    Alarm.modify(\r\n      alarmInfo,\r\n      success1 => {\r\n        Alarm.searchAll(\r\n          success2 => {\r\n            soundPlayerList[modifySound].stop();\r\n            setAlarmList(success2);\r\n            setModifyModal(false);\r\n            alert(success1);\r\n          },\r\n          fail => alert(fail),\r\n        );\r\n      },\r\n      fail => alert(fail),\r\n    );\r\n  };\r\n\r\n  const deleteAlarm = (id, idx) => {\r\n    Alarm.delete(\r\n      id,\r\n      () => {\r\n        const list = alarmList.slice();\r\n        list.splice(idx, 1);\r\n        setAlarmList(list);\r\n      },\r\n      fail => alert(fail),\r\n    );\r\n  };\r\n\r\n  const stopAlarm = () => {\r\n    Alarm.stop(\r\n      success => alert(success),\r\n      fail => alert(fail),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <HStack justifyContent=\"flex-end\">\r\n        <Button variant=\"ghost\" onPress={() => stopAlarm()}>\r\n          Stop Alarm\r\n        </Button>\r\n        <Button\r\n          variant=\"ghost\"\r\n          onPress={() => showList()}\r\n          style={{marginRight: 20}}>\r\n          Alarm List\r\n        </Button>\r\n      </HStack>\r\n      <ScrollView>\r\n        <Center>\r\n          {loadListModal(\r\n            listModal,\r\n            alarmList,\r\n            openModifyModal,\r\n            deleteAlarm,\r\n            toggleAlarm,\r\n            setListModal,\r\n          )}\r\n          {loadModifyModal(\r\n            modifyModal,\r\n            modifyDate,\r\n            hours,\r\n            minutes,\r\n            modifyTitle,\r\n            modifyText,\r\n            modifySound,\r\n            iconList,\r\n            modifyIcon,\r\n            modifySoundLoop,\r\n            modifyVibration,\r\n            modifyNotiRemovable,\r\n            closeModifyModal,\r\n            setModifyDate,\r\n            setModifyTitle,\r\n            setModifyText,\r\n            selectModifySound,\r\n            setModifyIcon,\r\n            setModifySoundLoop,\r\n            toggleModifyVibration,\r\n            setModifyNotiRemovable,\r\n            modifyAlarm,\r\n          )}\r\n          {loadContactModal(contactModal, setContactModal)}\r\n          {loadOpenSourceModal(openSourceModal, setOpenSourceModal)}\r\n          <VStack space={5}>\r\n            <Heading size=\"md\">Time</Heading>\r\n            <TimePicker\r\n              initDate={createDate}\r\n              hours={hours}\r\n              minutes={minutes}\r\n              onTimeSelected={currDate => setCreateDate(currDate)}\r\n              style={{height: 200, width: 100}}\r\n              itemTextSize={25}\r\n              selectedItemTextSize={30}\r\n              selectedItemTextColor={'#333333'}\r\n              itemTextColor={'#bbbbbb'}\r\n              hideIndicator\r\n            />\r\n            <Heading size=\"md\">Title</Heading>\r\n            <Input\r\n              variant=\"outline\"\r\n              placeholder=\"Alarm Title\"\r\n              onChangeText={value => setCreateTitle(value)}\r\n              style={{marginBottom: 10}}\r\n            />\r\n            <Heading size=\"md\">Text</Heading>\r\n            <Input\r\n              variant=\"outline\"\r\n              placeholder=\"Alarm Text\"\r\n              onChangeText={value => setCreateText(value)}\r\n              style={{marginBottom: 10}}\r\n            />\r\n            <Heading size=\"md\">Sound</Heading>\r\n            <Select\r\n              selectedValue={createSound}\r\n              onValueChange={value => selectCreateSound(value)}>\r\n              <Select.Item label=\"Adventure\" value=\"0\" />\r\n              <Select.Item label=\"Bliss\" value=\"1\" />\r\n              <Select.Item label=\"The Inspiration\" value=\"2\" />\r\n            </Select>\r\n            <HStack justifyContent=\"space-between\" style={{marginTop: 10}}>\r\n              <Heading size=\"md\">Icon</Heading>\r\n              <HStack>\r\n                <Image\r\n                  source={{uri: iconList[0]}}\r\n                  size={25}\r\n                  alt={iconList[0]}\r\n                  style={{marginRight: 10}}\r\n                />\r\n                <Image\r\n                  source={{uri: iconList[1]}}\r\n                  size={25}\r\n                  alt={iconList[1]}\r\n                  style={{marginRight: 10}}\r\n                />\r\n                <Image\r\n                  source={{uri: iconList[2]}}\r\n                  size={25}\r\n                  alt={iconList[2]}\r\n                />\r\n              </HStack>\r\n            </HStack>\r\n            <Select\r\n              selectedValue={createIcon}\r\n              onValueChange={value => setCreateIcon(value)}>\r\n              <Select.Item label=\"Mail\" value=\"0\" />\r\n              <Select.Item label=\"User\" value=\"1\" />\r\n              <Select.Item label=\"Like\" value=\"2\" />\r\n            </Select>\r\n            <HStack justifyContent=\"space-between\" style={{marginTop: 10}}>\r\n              <Heading size=\"md\">Sound Loop</Heading>\r\n              <Switch\r\n                size=\"lg\"\r\n                colorScheme=\"emerald\"\r\n                isChecked={createSoundLoop}\r\n                onToggle={() => setCreateSoundLoop(!createSoundLoop)}\r\n              />\r\n            </HStack>\r\n            <HStack justifyContent=\"space-between\">\r\n              <Heading size=\"md\">Vibration</Heading>\r\n              <Switch\r\n                size=\"lg\"\r\n                colorScheme=\"emerald\"\r\n                isChecked={createVibration}\r\n                onToggle={() => toggleCreateVibration()}\r\n              />\r\n            </HStack>\r\n            <HStack justifyContent=\"space-between\">\r\n              <Heading size=\"md\">Notification Removable</Heading>\r\n              <Switch\r\n                size=\"lg\"\r\n                colorScheme=\"emerald\"\r\n                isChecked={createNotiRemovable}\r\n                onToggle={() => setCreateNotiRemovable(!createNotiRemovable)}\r\n              />\r\n            </HStack>\r\n            <Button\r\n              onPress={() => createAlarm()}\r\n              style={{marginTop: 10, marginBottom: 30}}>\r\n              Create Alarm\r\n            </Button>\r\n          </VStack>\r\n        </Center>\r\n        <HStack\r\n          justifyContent=\"flex-end\"\r\n          style={{marginRight: 10, marginBottom: 10}}>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"xs\"\r\n            onPress={() => setContactModal(true)}\r\n            style={{marginRight: 10}}>\r\n            Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"xs\"\r\n            onPress={() => setOpenSourceModal(true)}>\r\n            Open Source\r\n          </Button>\r\n        </HStack>\r\n      </ScrollView>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nexport default Alarm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}