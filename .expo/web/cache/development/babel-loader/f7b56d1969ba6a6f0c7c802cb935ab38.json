{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Items } from \"../database/Database\";\nimport { COLORS } from \"../assets/Style\";\nimport styles from \"../assets/Style\";\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport backNike2 from \"../assets/images/backNike2.png\";\nimport nike from \"../assets/images/nike2.png\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    product = _useState2[0],\n    setProduct = _useState2[1];\n\nvar _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    accessory = _useState4[0],\n    setAccessory = _useState4[1];\n\nvar _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    children = _useState6[0],\n    setChildren = _useState6[1];\n\nuseEffect(function () {\n  var unsubscribe = navigation.addListener('focus', function () {\n    getDataFromDB();\n  });\n  return unsubscribe;\n}, [navigation]);\n\nvar getDataFromDB = function getDataFromDB() {\n  var productList = [];\n  var accessoryList = [];\n  var childrenList = [];\n\n  for (var index = 0; index < Items.length; index++) {\n    if (Items[index].category == \"product\") {\n      productList.push(Items[index]);\n    } else if (Items[index].category == \"accessory\") {\n      accessoryList.push(Items[index]);\n    } else if (Items[index].category == \"children\") {\n      childrenList.push(Items[index]);\n    }\n  }\n\n  setProduct(productList);\n  setAccessory(accessoryList);\n  setChildren(childrenList);\n};\n\nvar ProductCard = function ProductCard(_ref) {\n  var data = _ref.data;\n  return _jsxs(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"ProductInfo\", {\n        productID: data.id\n      });\n    },\n    style: styles.ProductCardTouchableOpacity,\n    children: [_jsxs(View, {\n      style: styles.productContainer,\n      children: [data.isOff ? _jsx(View, {\n        style: styles.OffPrecentage,\n        children: _jsxs(Text, {\n          style: styles.offPrecentageText,\n          children: [data.offPercentage, \"%\"]\n        })\n      }) : null, _jsx(Image, {\n        source: data.productImage,\n        style: styles.productImage\n      })]\n    }), _jsx(Text, {\n      style: styles.shoeTitle,\n      children: data.productName\n    }), data.category == \"accessory\" ? data.isAvailable ? _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [_jsx(FontAwesome, {\n        name: \"circle\",\n        style: styles.greenCircle\n      }), _jsx(Text, {\n        style: styles.available,\n        children: \"Available\"\n      })]\n    }) : _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [_jsx(FontAwesome, {\n        name: \"circle\",\n        style: styles.greenCircle\n      }), _jsx(Text, {\n        style: styles.unvailable,\n        children: \"Unvailable\"\n      })]\n    }) : null, _jsxs(Text, {\n      children: [\" \", data.productPrice, \"$ \"]\n    })]\n  });\n};\n\nvar Home = function Home(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      marginTop: 30,\n      marginBottom: 30,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Football');\n      },\n      children: _jsx(Text, {\n        children: \"Footaball\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Basketball');\n      },\n      children: _jsx(Text, {\n        children: \"Basketball\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Jordan');\n      },\n      children: _jsx(Text, {\n        children: \"Jordan\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('LifeStyle');\n      },\n      children: _jsx(Text, {\n        children: \"LifyStyle\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Running');\n      },\n      children: _jsx(Text, {\n        children: \"Running\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Soccer');\n      },\n      children: _jsx(Text, {\n        children: \"Soccer\"\n      })\n    })]\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/PC/Desktop/StoreApp2/my-app/screens/Home.js"],"names":["React","useEffect","useState","Items","COLORS","styles","Entypo","MaterialCommunityIcons","FontAwesome","backNike2","nike","product","setProduct","accessory","setAccessory","children","setChildren","unsubscribe","navigation","addListener","getDataFromDB","productList","accessoryList","childrenList","index","length","category","push","ProductCard","data","navigate","productID","id","ProductCardTouchableOpacity","productContainer","isOff","OffPrecentage","offPrecentageText","offPercentage","productImage","shoeTitle","productName","isAvailable","flexDirection","alignItems","greenCircle","available","unvailable","productPrice","Home","marginTop","marginBottom","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Text,\r\n     View , \r\n     StatusBar,\r\n     ScrollView,\r\n     TouchableOpacity , Image ,ImageBackground} from 'react-native';\r\nimport { Items} from '../database/Database';\r\nimport { COLORS } from '../assets/Style';\r\nimport styles from '../assets/Style';\r\nimport Entypo from 'react-native-vector-icons/Entypo';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport backNike2 from '../assets/images/backNike2.png';\r\nimport nike from '../assets/images/nike2.png';\r\n\r\n    const [product,setProduct] = useState([]);\r\n    const [accessory , setAccessory] = useState([]);\r\n    const [children , setChildren] = useState([]);\r\n    \r\n    useEffect(() =>{\r\n        const unsubscribe = navigation.addListener('focus',()=>{\r\n            getDataFromDB()\r\n        });\r\n\r\n        return unsubscribe;\r\n    },[navigation])\r\n\r\n    // get data from DB\r\n\r\n    const getDataFromDB = () =>{\r\n        let productList = []\r\n        let accessoryList = []\r\n        let childrenList = [];\r\n        \r\n        for (let index = 0; index < Items.length; index++) {\r\n            if(Items[index].category == \"product\"){\r\n                productList.push(Items[index])\r\n            }else if(Items[index].category == \"accessory\"){\r\n                accessoryList.push(Items[index]);\r\n            }else if(Items[index].category == \"children\"){\r\n                childrenList.push(Items[index]);   \r\n            }  \r\n        }\r\n\r\n        setProduct(productList);\r\n        setAccessory(accessoryList);\r\n        setChildren(childrenList);\r\n    };\r\n\r\n    const ProductCard = ({data}) => {\r\n        return (\r\n           \r\n           <TouchableOpacity\r\n           onPress={()=> navigation.navigate(\"ProductInfo\",{productID:data.id})}\r\n           style={styles.ProductCardTouchableOpacity}>\r\n               <View \r\n               style={styles.productContainer}>\r\n                   {data.isOff ? (\r\n                       <View style={styles.OffPrecentage}>\r\n                           <Text style={styles.offPrecentageText}>\r\n                           {data.offPercentage}%\r\n                           </Text>\r\n                           </View>\r\n                   ) : null }\r\n                   <Image \r\n                   source={data.productImage} \r\n                   style={styles.productImage}/>\r\n            </View>\r\n            <Text style={styles.shoeTitle}>\r\n                {data.productName}\r\n            </Text>\r\n             {data.category == \"accessory\" ? (\r\n                 data.isAvailable ?(\r\n                 <View style={{\r\n                     flexDirection:'row',\r\n                     alignItems:'center',\r\n                 }}>\r\n                     <FontAwesome name=\"circle\" style={styles.greenCircle} />\r\n                   <Text style={styles.available}>\r\n                       Available\r\n                   </Text> \r\n                 </View>\r\n               ):(\r\n               <View style={{\r\n                     flexDirection:'row',\r\n                     alignItems:'center',\r\n                 }}>\r\n                     <FontAwesome name=\"circle\" style={styles.greenCircle}/>\r\n                   <Text style={styles.unvailable}>\r\n                       Unvailable\r\n                   </Text> \r\n                 </View>\r\n               )\r\n             ): null}\r\n             <Text> {data.productPrice}$ </Text>\r\n            \r\n           </TouchableOpacity>\r\n           \r\n       )\r\n   };\r\nconst Home = ({navigation}) =>{\r\n    return(\r\n        <View style={{\r\n            marginTop:30,\r\n            marginBottom:30,\r\n            flexDirection:'row',\r\n            justifyContent:'space-between',\r\n        }}>\r\n            <TouchableOpacity onPress={() => navigation.navigate('Football',)}>\r\n                <Text>Footaball</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => navigation.navigate('Basketball',)}>\r\n                <Text>Basketball</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => navigation.navigate('Jordan',)}>\r\n                <Text>Jordan</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => navigation.navigate('LifeStyle',)}>\r\n                <Text>LifyStyle</Text>\r\n            </TouchableOpacity >\r\n            <TouchableOpacity onPress={() => navigation.navigate('Running',)}>\r\n                <Text>Running</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => navigation.navigate('Soccer',)}>\r\n                <Text>Soccer</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n    \r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}