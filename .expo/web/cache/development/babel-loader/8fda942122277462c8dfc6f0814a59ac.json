{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Query from \"./Query\";\nimport DataSnapshot from \"./DataSnapshot\";\nimport OnDisconnect from \"./OnDisconnect\";\nimport { getLogger } from \"../../utils/log\";\nimport { getNativeModule } from \"../../utils/native\";\nimport ReferenceBase from \"../../utils/ReferenceBase\";\nimport { promiseOrCallback, isFunction, isObject, isString, tryJSONParse, tryJSONStringify, generatePushID } from \"../../utils\";\nimport SyncTree from \"../../utils/SyncTree\";\nvar listeners = 0;\nvar ReferenceEventTypes = {\n  value: 'value',\n  child_added: 'child_added',\n  child_removed: 'child_removed',\n  child_changed: 'child_changed',\n  child_moved: 'child_moved'\n};\n\nvar Reference = function (_ReferenceBase) {\n  _inherits(Reference, _ReferenceBase);\n\n  var _super = _createSuper(Reference);\n\n  function Reference(database, path, existingModifiers) {\n    var _this;\n\n    _classCallCheck(this, Reference);\n\n    _this = _super.call(this, path);\n    _this._refListeners = {};\n    _this._database = database;\n    _this._query = new Query(_assertThisInitialized(_this), existingModifiers);\n    getLogger(database).debug('Created new Reference', _this._getRefKey());\n    return _this;\n  }\n\n  _createClass(Reference, [{\n    key: \"keepSynced\",\n    value: function keepSynced(bool) {\n      return getNativeModule(this._database).keepSynced(this._getRefKey(), this.path, this._query.getModifiers(), bool);\n    }\n  }, {\n    key: \"set\",\n    value: function set(value, onComplete) {\n      return promiseOrCallback(getNativeModule(this._database).set(this.path, this._serializeAnyType(value)), onComplete);\n    }\n  }, {\n    key: \"setPriority\",\n    value: function setPriority(priority, onComplete) {\n      var _priority = this._serializeAnyType(priority);\n\n      return promiseOrCallback(getNativeModule(this._database).setPriority(this.path, _priority), onComplete);\n    }\n  }, {\n    key: \"setWithPriority\",\n    value: function setWithPriority(value, priority, onComplete) {\n      var _value = this._serializeAnyType(value);\n\n      var _priority = this._serializeAnyType(priority);\n\n      return promiseOrCallback(getNativeModule(this._database).setWithPriority(this.path, _value, _priority), onComplete);\n    }\n  }, {\n    key: \"update\",\n    value: function update(val, onComplete) {\n      var value = this._serializeObject(val);\n\n      return promiseOrCallback(getNativeModule(this._database).update(this.path, value), onComplete);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(onComplete) {\n      return promiseOrCallback(getNativeModule(this._database).remove(this.path), onComplete);\n    }\n  }, {\n    key: \"transaction\",\n    value: function transaction(transactionUpdate, onComplete) {\n      var _this2 = this;\n\n      var applyLocally = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!isFunction(transactionUpdate)) {\n        return Promise.reject(new Error('Missing transactionUpdate function argument.'));\n      }\n\n      return new Promise(function (resolve, reject) {\n        var onCompleteWrapper = function onCompleteWrapper(error, committed, snapshotData) {\n          if (isFunction(onComplete)) {\n            if (error) {\n              onComplete(error, committed, null);\n            } else {\n              onComplete(null, committed, new DataSnapshot(_this2, snapshotData));\n            }\n          }\n\n          if (error) return reject(error);\n          return resolve({\n            committed: committed,\n            snapshot: new DataSnapshot(_this2, snapshotData)\n          });\n        };\n\n        _this2._database._transactionHandler.add(_this2, transactionUpdate, onCompleteWrapper, applyLocally);\n      });\n    }\n  }, {\n    key: \"once\",\n    value: function once() {\n      var _this3 = this;\n\n      var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n      var successCallback = arguments.length > 1 ? arguments[1] : undefined;\n      var cancelOrContext = arguments.length > 2 ? arguments[2] : undefined;\n      var context = arguments.length > 3 ? arguments[3] : undefined;\n      return getNativeModule(this._database).once(this._getRefKey(), this.path, this._query.getModifiers(), eventName).then(function (_ref) {\n        var snapshot = _ref.snapshot;\n\n        var _snapshot = new DataSnapshot(_this3, snapshot);\n\n        if (isFunction(successCallback)) {\n          if (isObject(cancelOrContext)) successCallback.bind(cancelOrContext)(_snapshot);\n          if (context && isObject(context)) successCallback.bind(context)(_snapshot);\n          successCallback(_snapshot);\n        }\n\n        return _snapshot;\n      }).catch(function (error) {\n        if (isFunction(cancelOrContext)) return cancelOrContext(error);\n        throw error;\n      });\n    }\n  }, {\n    key: \"push\",\n    value: function push(value, onComplete) {\n      var name = generatePushID(this._database._serverTimeOffset);\n      var pushRef = this.child(name);\n      var thennablePushRef = this.child(name);\n      var promise;\n\n      if (value != null) {\n        promise = thennablePushRef.set(value, onComplete).then(function () {\n          return pushRef;\n        });\n      } else {\n        promise = Promise.resolve(pushRef);\n      }\n\n      thennablePushRef.then = promise.then.bind(promise);\n      thennablePushRef.catch = promise.catch.bind(promise);\n\n      if (isFunction(onComplete)) {\n        promise.catch(function () {});\n      }\n\n      return thennablePushRef;\n    }\n  }, {\n    key: \"orderByKey\",\n    value: function orderByKey() {\n      return this.orderBy('orderByKey');\n    }\n  }, {\n    key: \"orderByPriority\",\n    value: function orderByPriority() {\n      return this.orderBy('orderByPriority');\n    }\n  }, {\n    key: \"orderByValue\",\n    value: function orderByValue() {\n      return this.orderBy('orderByValue');\n    }\n  }, {\n    key: \"orderByChild\",\n    value: function orderByChild(key) {\n      return this.orderBy('orderByChild', key);\n    }\n  }, {\n    key: \"orderBy\",\n    value: function orderBy(name, key) {\n      var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n      newRef._query.orderBy(name, key);\n\n      return newRef;\n    }\n  }, {\n    key: \"limitToLast\",\n    value: function limitToLast(limit) {\n      return this.limit('limitToLast', limit);\n    }\n  }, {\n    key: \"limitToFirst\",\n    value: function limitToFirst(limit) {\n      return this.limit('limitToFirst', limit);\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(name, _limit) {\n      var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n      newRef._query.limit(name, _limit);\n\n      return newRef;\n    }\n  }, {\n    key: \"equalTo\",\n    value: function equalTo(value, key) {\n      return this.filter('equalTo', value, key);\n    }\n  }, {\n    key: \"endAt\",\n    value: function endAt(value, key) {\n      return this.filter('endAt', value, key);\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt(value, key) {\n      return this.filter('startAt', value, key);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(name, value, key) {\n      var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n      newRef._query.filter(name, value, key);\n\n      return newRef;\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      return new OnDisconnect(this);\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      return new Reference(this._database, this.path + \"/\" + path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\" + this._database.databaseUrl + this.path;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRef) {\n      return !!otherRef && otherRef.constructor === Reference && otherRef.key === this.key && this._query.queryIdentifier() === otherRef._query.queryIdentifier();\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      if (this.path === '/') return null;\n      return new Reference(this._database, this.path.substring(0, this.path.lastIndexOf('/')));\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this;\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return new Reference(this._database, '/');\n    }\n  }, {\n    key: \"_getRegistrationKey\",\n    value: function _getRegistrationKey(eventType) {\n      return \"$\" + this._database.databaseUrl + \"$/\" + this.path + \"$\" + this._query.queryIdentifier() + \"$\" + listeners + \"$\" + eventType;\n    }\n  }, {\n    key: \"_getRefKey\",\n    value: function _getRefKey() {\n      return \"$\" + this._database.databaseUrl + \"$/\" + this.path + \"$\" + this._query.queryIdentifier();\n    }\n  }, {\n    key: \"_serializeObject\",\n    value: function _serializeObject(obj) {\n      if (!isObject(obj)) return obj;\n      return tryJSONParse(tryJSONStringify(obj));\n    }\n  }, {\n    key: \"_serializeAnyType\",\n    value: function _serializeAnyType(value) {\n      if (isObject(value)) {\n        return {\n          type: 'object',\n          value: this._serializeObject(value)\n        };\n      }\n\n      return {\n        type: typeof value,\n        value: value\n      };\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventType, callback, cancelCallbackOrContext, context) {\n      if (!eventType) {\n        throw new Error('Query.on failed: Function called with 0 arguments. Expects at least 2.');\n      }\n\n      if (!isString(eventType) || !ReferenceEventTypes[eventType]) {\n        throw new Error(\"Query.on failed: First argument must be a valid string event type: \\\"\" + Object.keys(ReferenceEventTypes).join(', ') + \"\\\"\");\n      }\n\n      if (!callback) {\n        throw new Error('Query.on failed: Function called with 1 argument. Expects at least 2.');\n      }\n\n      if (!isFunction(callback)) {\n        throw new Error('Query.on failed: Second argument must be a valid function.');\n      }\n\n      if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && !isObject(context) && !isObject(cancelCallbackOrContext)) {\n        throw new Error('Query.on failed: Function called with 3 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n      }\n\n      if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && context) {\n        throw new Error('Query.on failed: Function called with 4 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n      }\n\n      var eventRegistrationKey = this._getRegistrationKey(eventType);\n\n      var registrationCancellationKey = eventRegistrationKey + \"$cancelled\";\n\n      var _context = cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) ? cancelCallbackOrContext : context;\n\n      var registrationObj = {\n        eventType: eventType,\n        ref: this,\n        path: this.path,\n        key: this._getRefKey(),\n        appName: this._database.app.name,\n        dbURL: this._database.databaseUrl,\n        eventRegistrationKey: eventRegistrationKey\n      };\n      SyncTree.addRegistration(_objectSpread(_objectSpread({}, registrationObj), {}, {\n        listener: _context ? callback.bind(_context) : callback\n      }));\n\n      if (cancelCallbackOrContext && isFunction(cancelCallbackOrContext)) {\n        SyncTree.addRegistration({\n          ref: this,\n          once: true,\n          path: this.path,\n          key: this._getRefKey(),\n          appName: this._database.app.name,\n          dbURL: this._database.databaseUrl,\n          eventType: eventType + \"$cancelled\",\n          eventRegistrationKey: registrationCancellationKey,\n          listener: _context ? cancelCallbackOrContext.bind(_context) : cancelCallbackOrContext\n        });\n      }\n\n      getNativeModule(this._database).on({\n        eventType: eventType,\n        path: this.path,\n        key: this._getRefKey(),\n        appName: this._database.app.name,\n        modifiers: this._query.getModifiers(),\n        hasCancellationCallback: isFunction(cancelCallbackOrContext),\n        registration: {\n          eventRegistrationKey: eventRegistrationKey,\n          key: registrationObj.key,\n          registrationCancellationKey: registrationCancellationKey\n        }\n      });\n      listeners += 1;\n      return callback;\n    }\n  }, {\n    key: \"off\",\n    value: function off() {\n      var eventType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var originalCallback = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (!arguments.length) {\n        return SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPath(this.path));\n      }\n\n      if (eventType && (!isString(eventType) || !ReferenceEventTypes[eventType])) {\n        throw new Error(\"Query.off failed: First argument must be a valid string event type: \\\"\" + Object.keys(ReferenceEventTypes).join(', ') + \"\\\"\");\n      }\n\n      if (originalCallback && !isFunction(originalCallback)) {\n        throw new Error('Query.off failed: Function called with 2 arguments, but second optional argument was not a function.');\n      }\n\n      if (eventType && originalCallback) {\n        var registration = SyncTree.getOneByPathEventListener(this.path, eventType, originalCallback);\n        if (!registration) return [];\n        SyncTree.removeListenersForRegistrations([registration + \"$cancelled\"]);\n        return SyncTree.removeListenerRegistrations(originalCallback, [registration]);\n      }\n\n      var registrations = SyncTree.getRegistrationsByPathEvent(this.path, eventType);\n      SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPathEvent(this.path, eventType + \"$cancelled\"));\n      return SyncTree.removeListenersForRegistrations(registrations);\n    }\n  }]);\n\n  return Reference;\n}(ReferenceBase);\n\nexport { Reference as default };","map":{"version":3,"names":["Query","DataSnapshot","OnDisconnect","getLogger","getNativeModule","ReferenceBase","promiseOrCallback","isFunction","isObject","isString","tryJSONParse","tryJSONStringify","generatePushID","SyncTree","listeners","ReferenceEventTypes","value","child_added","child_removed","child_changed","child_moved","Reference","database","path","existingModifiers","_refListeners","_database","_query","debug","_getRefKey","bool","keepSynced","getModifiers","onComplete","set","_serializeAnyType","priority","_priority","setPriority","_value","setWithPriority","val","_serializeObject","update","remove","transactionUpdate","applyLocally","Promise","reject","Error","resolve","onCompleteWrapper","error","committed","snapshotData","snapshot","_transactionHandler","add","eventName","successCallback","cancelOrContext","context","once","then","_snapshot","bind","catch","name","_serverTimeOffset","pushRef","child","thennablePushRef","promise","orderBy","key","newRef","limit","filter","databaseUrl","toString","otherRef","constructor","queryIdentifier","substring","lastIndexOf","eventType","obj","type","callback","cancelCallbackOrContext","Object","keys","join","eventRegistrationKey","_getRegistrationKey","registrationCancellationKey","_context","registrationObj","ref","appName","app","dbURL","addRegistration","listener","on","modifiers","hasCancellationCallback","registration","originalCallback","arguments","length","removeListenersForRegistrations","getRegistrationsByPath","getOneByPathEventListener","removeListenerRegistrations","registrations","getRegistrationsByPathEvent"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/database/Reference.js"],"sourcesContent":["/**\n * \n * Database Reference representation wrapper\n */\nimport Query from './Query';\nimport DataSnapshot from './DataSnapshot';\nimport OnDisconnect from './OnDisconnect';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nimport ReferenceBase from '../../utils/ReferenceBase';\nimport { promiseOrCallback, isFunction, isObject, isString, tryJSONParse, tryJSONStringify, generatePushID } from '../../utils';\nimport SyncTree from '../../utils/SyncTree';\n// track all event registrations by path\nlet listeners = 0;\n/**\n * Enum for event types\n * @readonly\n * @enum {String}\n */\n\nconst ReferenceEventTypes = {\n  value: 'value',\n  child_added: 'child_added',\n  child_removed: 'child_removed',\n  child_changed: 'child_changed',\n  child_moved: 'child_moved'\n};\n\n/**\n * @typedef {String} ReferenceLocation - Path to location in the database, relative\n * to the root reference. Consists of a path where segments are separated by a\n * forward slash (/) and ends in a ReferenceKey - except the root location, which\n * has no ReferenceKey.\n *\n * @example\n * // root reference location: '/'\n * // non-root reference: '/path/to/referenceKey'\n */\n\n/**\n * @typedef {String} ReferenceKey - Identifier for each location that is unique to that\n * location, within the scope of its parent. The last part of a ReferenceLocation.\n */\n\n/**\n * Represents a specific location in your Database that can be used for\n * reading or writing data.\n *\n * You can reference the root using firebase.database().ref() or a child location\n * by calling firebase.database().ref(\"child/path\").\n *\n * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference\n * @class Reference\n * @extends ReferenceBase\n */\nexport default class Reference extends ReferenceBase {\n  constructor(database, path, existingModifiers) {\n    super(path);\n    this._refListeners = {};\n    this._database = database;\n    this._query = new Query(this, existingModifiers);\n    getLogger(database).debug('Created new Reference', this._getRefKey());\n  }\n  /**\n   * By calling `keepSynced(true)` on a location, the data for that location will\n   * automatically be downloaded and kept in sync, even when no listeners are\n   * attached for that location. Additionally, while a location is kept synced,\n   *  it will not be evicted from the persistent disk cache.\n   *\n   * @link https://firebase.google.com/docs/reference/android/com/google/firebase/database/Query.html#keepSynced(boolean)\n   * @param bool\n   * @returns {*}\n   */\n\n\n  keepSynced(bool) {\n    return getNativeModule(this._database).keepSynced(this._getRefKey(), this.path, this._query.getModifiers(), bool);\n  }\n  /**\n   * Writes data to this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#set\n   * @param value\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  set(value, onComplete) {\n    return promiseOrCallback(getNativeModule(this._database).set(this.path, this._serializeAnyType(value)), onComplete);\n  }\n  /**\n   * Sets a priority for the data at this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#setPriority\n   * @param priority\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  setPriority(priority, onComplete) {\n    const _priority = this._serializeAnyType(priority);\n\n    return promiseOrCallback(getNativeModule(this._database).setPriority(this.path, _priority), onComplete);\n  }\n  /**\n   * Writes data the Database location. Like set() but also specifies the priority for that data.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#setWithPriority\n   * @param value\n   * @param priority\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  setWithPriority(value, priority, onComplete) {\n    const _value = this._serializeAnyType(value);\n\n    const _priority = this._serializeAnyType(priority);\n\n    return promiseOrCallback(getNativeModule(this._database).setWithPriority(this.path, _value, _priority), onComplete);\n  }\n  /**\n   * Writes multiple values to the Database at once.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#update\n   * @param val\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  update(val, onComplete) {\n    const value = this._serializeObject(val);\n\n    return promiseOrCallback(getNativeModule(this._database).update(this.path, value), onComplete);\n  }\n  /**\n   * Removes the data at this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#remove\n   * @param onComplete\n   * @return {Promise}\n   */\n\n\n  remove(onComplete) {\n    return promiseOrCallback(getNativeModule(this._database).remove(this.path), onComplete);\n  }\n  /**\n   * Atomically modifies the data at this location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#transaction\n   * @param transactionUpdate\n   * @param onComplete\n   * @param applyLocally\n   */\n\n\n  transaction(transactionUpdate, onComplete, applyLocally = false) {\n    if (!isFunction(transactionUpdate)) {\n      return Promise.reject(new Error('Missing transactionUpdate function argument.'));\n    }\n\n    return new Promise((resolve, reject) => {\n      const onCompleteWrapper = (error, committed, snapshotData) => {\n        if (isFunction(onComplete)) {\n          if (error) {\n            onComplete(error, committed, null);\n          } else {\n            onComplete(null, committed, new DataSnapshot(this, snapshotData));\n          }\n        }\n\n        if (error) return reject(error);\n        return resolve({\n          committed,\n          snapshot: new DataSnapshot(this, snapshotData)\n        });\n      }; // start the transaction natively\n\n\n      this._database._transactionHandler.add(this, transactionUpdate, onCompleteWrapper, applyLocally);\n    });\n  }\n  /**\n   *\n   * @param eventName\n   * @param successCallback\n   * @param cancelOrContext\n   * @param context\n   * @returns {Promise.<any>}\n   */\n\n\n  once(eventName = 'value', successCallback, cancelOrContext, context) {\n    return getNativeModule(this._database).once(this._getRefKey(), this.path, this._query.getModifiers(), eventName).then(({\n      snapshot\n    }) => {\n      const _snapshot = new DataSnapshot(this, snapshot);\n\n      if (isFunction(successCallback)) {\n        if (isObject(cancelOrContext)) successCallback.bind(cancelOrContext)(_snapshot);\n        if (context && isObject(context)) successCallback.bind(context)(_snapshot);\n        successCallback(_snapshot);\n      }\n\n      return _snapshot;\n    }).catch(error => {\n      if (isFunction(cancelOrContext)) return cancelOrContext(error);\n      throw error;\n    });\n  }\n  /**\n   *\n   * @param value\n   * @param onComplete\n   * @returns {*}\n   */\n\n\n  push(value, onComplete) {\n    const name = generatePushID(this._database._serverTimeOffset);\n    const pushRef = this.child(name);\n    const thennablePushRef = this.child(name);\n    let promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(() => pushRef);\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.catch.bind(promise);\n\n    if (isFunction(onComplete)) {\n      promise.catch(() => {});\n    }\n\n    return thennablePushRef;\n  }\n  /**\n   * MODIFIERS\n   */\n\n  /**\n   *\n   * @returns {Reference}\n   */\n\n\n  orderByKey() {\n    return this.orderBy('orderByKey');\n  }\n  /**\n   *\n   * @returns {Reference}\n   */\n\n\n  orderByPriority() {\n    return this.orderBy('orderByPriority');\n  }\n  /**\n   *\n   * @returns {Reference}\n   */\n\n\n  orderByValue() {\n    return this.orderBy('orderByValue');\n  }\n  /**\n   *\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  orderByChild(key) {\n    return this.orderBy('orderByChild', key);\n  }\n  /**\n   *\n   * @param name\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  orderBy(name, key) {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n    newRef._query.orderBy(name, key);\n\n    return newRef;\n  }\n  /**\n   * LIMITS\n   */\n\n  /**\n   *\n   * @param limit\n   * @returns {Reference}\n   */\n\n\n  limitToLast(limit) {\n    return this.limit('limitToLast', limit);\n  }\n  /**\n   *\n   * @param limit\n   * @returns {Reference}\n   */\n\n\n  limitToFirst(limit) {\n    return this.limit('limitToFirst', limit);\n  }\n  /**\n   *\n   * @param name\n   * @param limit\n   * @returns {Reference}\n   */\n\n\n  limit(name, limit) {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n    newRef._query.limit(name, limit);\n\n    return newRef;\n  }\n  /**\n   * FILTERS\n   */\n\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  equalTo(value, key) {\n    return this.filter('equalTo', value, key);\n  }\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  endAt(value, key) {\n    return this.filter('endAt', value, key);\n  }\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  startAt(value, key) {\n    return this.filter('startAt', value, key);\n  }\n  /**\n   *\n   * @param name\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  filter(name, value, key) {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n    newRef._query.filter(name, value, key);\n\n    return newRef;\n  }\n  /**\n   *\n   * @returns {OnDisconnect}\n   */\n\n\n  onDisconnect() {\n    return new OnDisconnect(this);\n  }\n  /**\n   * Creates a Reference to a child of the current Reference, using a relative path.\n   * No validation is performed on the path to ensure it has a valid format.\n   * @param {String} path relative to current ref's location\n   * @returns {!Reference} A new Reference to the path provided, relative to the current\n   * Reference\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#child}\n   */\n\n\n  child(path) {\n    return new Reference(this._database, `${this.path}/${path}`);\n  }\n  /**\n   * Return the ref as a path string\n   * @returns {string}\n   */\n\n\n  toString() {\n    return `${this._database.databaseUrl}${this.path}`;\n  }\n  /**\n   * Return a JSON-serializable representation of this object.\n   * @returns {string}\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * Returns whether another Reference represent the same location and are from the\n   * same instance of firebase.app.App - multiple firebase apps not currently supported.\n   * @param {Reference} otherRef - Other reference to compare to this one\n   * @return {Boolean} Whether otherReference is equal to this one\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#isEqual}\n   */\n\n\n  isEqual(otherRef) {\n    return !!otherRef && otherRef.constructor === Reference && otherRef.key === this.key && this._query.queryIdentifier() === otherRef._query.queryIdentifier();\n  }\n  /**\n   * GETTERS\n   */\n\n  /**\n   * The parent location of a Reference, or null for the root Reference.\n   * @type {Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#parent}\n   */\n\n\n  get parent() {\n    if (this.path === '/') return null;\n    return new Reference(this._database, this.path.substring(0, this.path.lastIndexOf('/')));\n  }\n  /**\n   * A reference to itself\n   * @type {!Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#ref}\n   */\n\n\n  get ref() {\n    return this;\n  }\n  /**\n   * Reference to the root of the database: '/'\n   * @type {!Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#root}\n   */\n\n\n  get root() {\n    return new Reference(this._database, '/');\n  }\n  /**\n   * INTERNALS\n   */\n\n  /**\n   * Generate a unique registration key.\n   *\n   * @return {string}\n   */\n\n\n  _getRegistrationKey(eventType) {\n    return `$${this._database.databaseUrl}$/${this.path}$${this._query.queryIdentifier()}$${listeners}$${eventType}`;\n  }\n  /**\n   * Generate a string that uniquely identifies this\n   * combination of path and query modifiers\n   *\n   * @return {string}\n   * @private\n   */\n\n\n  _getRefKey() {\n    return `$${this._database.databaseUrl}$/${this.path}$${this._query.queryIdentifier()}`;\n  }\n  /**\n   *\n   * @param obj\n   * @returns {Object}\n   * @private\n   */\n\n\n  _serializeObject(obj) {\n    if (!isObject(obj)) return obj; // json stringify then parse it calls toString on Objects / Classes\n    // that support it i.e new Date() becomes a ISO string.\n\n    return tryJSONParse(tryJSONStringify(obj));\n  }\n  /**\n   *\n   * @param value\n   * @returns {*}\n   * @private\n   */\n\n\n  _serializeAnyType(value) {\n    if (isObject(value)) {\n      return {\n        type: 'object',\n        value: this._serializeObject(value)\n      };\n    }\n\n    return {\n      type: typeof value,\n      value\n    };\n  }\n  /**\n   * Register a listener for data changes at the current ref's location.\n   * The primary method of reading data from a Database.\n   *\n   * Listeners can be unbound using {@link off}.\n   *\n   * Event Types:\n   *\n   * - value: {@link callback}.\n   * - child_added: {@link callback}\n   * - child_removed: {@link callback}\n   * - child_changed: {@link callback}\n   * - child_moved: {@link callback}\n   *\n   * @param {ReferenceEventType} eventType - Type of event to attach a callback for.\n   * @param {ReferenceEventCallback} callback - Function that will be called\n   * when the event occurs with the new data.\n   * @param {cancelCallbackOrContext=} cancelCallbackOrContext - Optional callback that is called\n   * if the event subscription fails. {@link cancelCallbackOrContext}\n   * @param {*=} context - Optional object to bind the callbacks to when calling them.\n   * @returns {ReferenceEventCallback} callback function, unmodified (unbound), for\n   * convenience if you want to pass an inline function to on() and store it later for\n   * removing using off().\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#on}\n   */\n\n\n  on(eventType, callback, cancelCallbackOrContext, context) {\n    if (!eventType) {\n      throw new Error('Query.on failed: Function called with 0 arguments. Expects at least 2.');\n    }\n\n    if (!isString(eventType) || !ReferenceEventTypes[eventType]) {\n      throw new Error(`Query.on failed: First argument must be a valid string event type: \"${Object.keys(ReferenceEventTypes).join(', ')}\"`);\n    }\n\n    if (!callback) {\n      throw new Error('Query.on failed: Function called with 1 argument. Expects at least 2.');\n    }\n\n    if (!isFunction(callback)) {\n      throw new Error('Query.on failed: Second argument must be a valid function.');\n    }\n\n    if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && !isObject(context) && !isObject(cancelCallbackOrContext)) {\n      throw new Error('Query.on failed: Function called with 3 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n    }\n\n    if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && context) {\n      throw new Error('Query.on failed: Function called with 4 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n    }\n\n    const eventRegistrationKey = this._getRegistrationKey(eventType);\n\n    const registrationCancellationKey = `${eventRegistrationKey}$cancelled`;\n\n    const _context = cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) ? cancelCallbackOrContext : context;\n\n    const registrationObj = {\n      eventType,\n      ref: this,\n      path: this.path,\n      key: this._getRefKey(),\n      appName: this._database.app.name,\n      dbURL: this._database.databaseUrl,\n      eventRegistrationKey\n    };\n    SyncTree.addRegistration({ ...registrationObj,\n      listener: _context ? callback.bind(_context) : callback\n    });\n\n    if (cancelCallbackOrContext && isFunction(cancelCallbackOrContext)) {\n      // cancellations have their own separate registration\n      // as these are one off events, and they're not guaranteed\n      // to occur either, only happens on failure to register on native\n      SyncTree.addRegistration({\n        ref: this,\n        once: true,\n        path: this.path,\n        key: this._getRefKey(),\n        appName: this._database.app.name,\n        dbURL: this._database.databaseUrl,\n        eventType: `${eventType}$cancelled`,\n        eventRegistrationKey: registrationCancellationKey,\n        listener: _context ? cancelCallbackOrContext.bind(_context) : cancelCallbackOrContext\n      });\n    } // initialise the native listener if not already listening\n\n\n    getNativeModule(this._database).on({\n      eventType,\n      path: this.path,\n      key: this._getRefKey(),\n      appName: this._database.app.name,\n      modifiers: this._query.getModifiers(),\n      hasCancellationCallback: isFunction(cancelCallbackOrContext),\n      registration: {\n        eventRegistrationKey,\n        key: registrationObj.key,\n        registrationCancellationKey\n      }\n    }); // increment number of listeners - just a short way of making\n    // every registration unique per .on() call\n\n    listeners += 1; // return original unbound successCallback for\n    // the purposes of calling .off(eventType, callback) at a later date\n\n    return callback;\n  }\n  /**\n   * Detaches a callback previously attached with on().\n   *\n   * Detach a callback previously attached with on(). Note that if on() was called\n   * multiple times with the same eventType and callback, the callback will be called\n   * multiple times for each event, and off() must be called multiple times to\n   * remove the callback. Calling off() on a parent listener will not automatically\n   * remove listeners registered on child nodes, off() must also be called on any\n   * child listeners to remove the callback.\n   *\n   *  If a callback is not specified, all callbacks for the specified eventType will be removed.\n   * Similarly, if no eventType or callback is specified, all callbacks for the Reference will be removed.\n   * @param eventType\n   * @param originalCallback\n   */\n\n\n  off(eventType = '', originalCallback) {\n    if (!arguments.length) {\n      // Firebase Docs:\n      //     if no eventType or callback is specified, all callbacks for the Reference will be removed.\n      return SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPath(this.path));\n    }\n    /*\n     * VALIDATE ARGS\n     */\n\n\n    if (eventType && (!isString(eventType) || !ReferenceEventTypes[eventType])) {\n      throw new Error(`Query.off failed: First argument must be a valid string event type: \"${Object.keys(ReferenceEventTypes).join(', ')}\"`);\n    }\n\n    if (originalCallback && !isFunction(originalCallback)) {\n      throw new Error('Query.off failed: Function called with 2 arguments, but second optional argument was not a function.');\n    } // Firebase Docs:\n    //     Note that if on() was called\n    //     multiple times with the same eventType and callback, the callback will be called\n    //     multiple times for each event, and off() must be called multiple times to\n    //     remove the callback.\n    // Remove only a single registration\n\n\n    if (eventType && originalCallback) {\n      const registration = SyncTree.getOneByPathEventListener(this.path, eventType, originalCallback);\n      if (!registration) return []; // remove the paired cancellation registration if any exist\n\n      SyncTree.removeListenersForRegistrations([`${registration}$cancelled`]); // remove only the first registration to match firebase web sdk\n      // call multiple times to remove multiple registrations\n\n      return SyncTree.removeListenerRegistrations(originalCallback, [registration]);\n    } // Firebase Docs:\n    //     If a callback is not specified, all callbacks for the specified eventType will be removed.\n\n\n    const registrations = SyncTree.getRegistrationsByPathEvent(this.path, eventType);\n    SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPathEvent(this.path, `${eventType}$cancelled`));\n    return SyncTree.removeListenersForRegistrations(registrations);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}