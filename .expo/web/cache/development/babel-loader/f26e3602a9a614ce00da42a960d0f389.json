{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Importance, Visibility } from \"./types\";\n\nvar AndroidChannel = function () {\n  function AndroidChannel(channelId, name, importance) {\n    _classCallCheck(this, AndroidChannel);\n\n    if (!Object.values(Importance).includes(importance)) {\n      throw new Error(\"AndroidChannel() Invalid Importance: \" + importance);\n    }\n\n    this._channelId = channelId;\n    this._name = name;\n    this._importance = importance;\n  }\n\n  _createClass(AndroidChannel, [{\n    key: \"bypassDnd\",\n    get: function get() {\n      return this._bypassDnd;\n    }\n  }, {\n    key: \"channelId\",\n    get: function get() {\n      return this._channelId;\n    }\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this._description;\n    }\n  }, {\n    key: \"group\",\n    get: function get() {\n      return this._group;\n    }\n  }, {\n    key: \"importance\",\n    get: function get() {\n      return this._importance;\n    }\n  }, {\n    key: \"lightColor\",\n    get: function get() {\n      return this._lightColor;\n    }\n  }, {\n    key: \"lightsEnabled\",\n    get: function get() {\n      return this._lightsEnabled;\n    }\n  }, {\n    key: \"lockScreenVisibility\",\n    get: function get() {\n      return this._lockScreenVisibility;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"showBadge\",\n    get: function get() {\n      return this._showBadge;\n    }\n  }, {\n    key: \"sound\",\n    get: function get() {\n      return this._sound;\n    }\n  }, {\n    key: \"vibrationEnabled\",\n    get: function get() {\n      return this._vibrationEnabled;\n    }\n  }, {\n    key: \"vibrationPattern\",\n    get: function get() {\n      return this._vibrationPattern;\n    }\n  }, {\n    key: \"enableLights\",\n    value: function enableLights(lightsEnabled) {\n      this._lightsEnabled = lightsEnabled;\n      return this;\n    }\n  }, {\n    key: \"enableVibration\",\n    value: function enableVibration(vibrationEnabled) {\n      this._vibrationEnabled = vibrationEnabled;\n      return this;\n    }\n  }, {\n    key: \"setBypassDnd\",\n    value: function setBypassDnd(bypassDnd) {\n      this._bypassDnd = bypassDnd;\n      return this;\n    }\n  }, {\n    key: \"setDescription\",\n    value: function setDescription(description) {\n      this._description = description;\n      return this;\n    }\n  }, {\n    key: \"setGroup\",\n    value: function setGroup(groupId) {\n      this._group = groupId;\n      return this;\n    }\n  }, {\n    key: \"setLightColor\",\n    value: function setLightColor(lightColor) {\n      this._lightColor = lightColor;\n      return this;\n    }\n  }, {\n    key: \"setLockScreenVisibility\",\n    value: function setLockScreenVisibility(lockScreenVisibility) {\n      if (!Object.values(Visibility).includes(lockScreenVisibility)) {\n        throw new Error(\"AndroidChannel:setLockScreenVisibility Invalid Visibility: \" + lockScreenVisibility);\n      }\n\n      this._lockScreenVisibility = lockScreenVisibility;\n      return this;\n    }\n  }, {\n    key: \"setShowBadge\",\n    value: function setShowBadge(showBadge) {\n      this._showBadge = showBadge;\n      return this;\n    }\n  }, {\n    key: \"setSound\",\n    value: function setSound(sound) {\n      this._sound = sound;\n      return this;\n    }\n  }, {\n    key: \"setVibrationPattern\",\n    value: function setVibrationPattern(vibrationPattern) {\n      this._vibrationPattern = vibrationPattern;\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._channelId) {\n        throw new Error('AndroidChannel: Missing required `channelId` property');\n      } else if (!this._importance) {\n        throw new Error('AndroidChannel: Missing required `importance` property');\n      } else if (!this._name) {\n        throw new Error('AndroidChannel: Missing required `name` property');\n      }\n\n      return {\n        bypassDnd: this._bypassDnd,\n        channelId: this._channelId,\n        description: this._description,\n        group: this._group,\n        importance: this._importance,\n        lightColor: this._lightColor,\n        lightsEnabled: this._lightsEnabled,\n        lockScreenVisibility: this._lockScreenVisibility,\n        name: this._name,\n        showBadge: this._showBadge,\n        sound: this._sound,\n        vibrationEnabled: this._vibrationEnabled,\n        vibrationPattern: this._vibrationPattern\n      };\n    }\n  }]);\n\n  return AndroidChannel;\n}();\n\nexport { AndroidChannel as default };","map":{"version":3,"names":["Importance","Visibility","AndroidChannel","channelId","name","importance","Object","values","includes","Error","_channelId","_name","_importance","_bypassDnd","_description","_group","_lightColor","_lightsEnabled","_lockScreenVisibility","_showBadge","_sound","_vibrationEnabled","_vibrationPattern","lightsEnabled","vibrationEnabled","bypassDnd","description","groupId","lightColor","lockScreenVisibility","showBadge","sound","vibrationPattern","group"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/notifications/AndroidChannel.js"],"sourcesContent":["/**\n * \n * AndroidChannel representation wrapper\n */\nimport { Importance, Visibility } from './types';\nexport default class AndroidChannel {\n  constructor(channelId, name, importance) {\n    if (!Object.values(Importance).includes(importance)) {\n      throw new Error(`AndroidChannel() Invalid Importance: ${importance}`);\n    }\n\n    this._channelId = channelId;\n    this._name = name;\n    this._importance = importance;\n  }\n\n  get bypassDnd() {\n    return this._bypassDnd;\n  }\n\n  get channelId() {\n    return this._channelId;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  get importance() {\n    return this._importance;\n  }\n\n  get lightColor() {\n    return this._lightColor;\n  }\n\n  get lightsEnabled() {\n    return this._lightsEnabled;\n  }\n\n  get lockScreenVisibility() {\n    return this._lockScreenVisibility;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get showBadge() {\n    return this._showBadge;\n  }\n\n  get sound() {\n    return this._sound;\n  }\n\n  get vibrationEnabled() {\n    return this._vibrationEnabled;\n  }\n\n  get vibrationPattern() {\n    return this._vibrationPattern;\n  }\n  /**\n   *\n   * @param lightsEnabled\n   * @returns {AndroidChannel}\n   */\n\n\n  enableLights(lightsEnabled) {\n    this._lightsEnabled = lightsEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationEnabled\n   * @returns {AndroidChannel}\n   */\n\n\n  enableVibration(vibrationEnabled) {\n    this._vibrationEnabled = vibrationEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param bypassDnd\n   * @returns {AndroidChannel}\n   */\n\n\n  setBypassDnd(bypassDnd) {\n    this._bypassDnd = bypassDnd;\n    return this;\n  }\n  /**\n   *\n   * @param description\n   * @returns {AndroidChannel}\n   */\n\n\n  setDescription(description) {\n    this._description = description;\n    return this;\n  }\n  /**\n   *\n   * @param group\n   * @returns {AndroidChannel}\n   */\n\n\n  setGroup(groupId) {\n    this._group = groupId;\n    return this;\n  }\n  /**\n   *\n   * @param lightColor\n   * @returns {AndroidChannel}\n   */\n\n\n  setLightColor(lightColor) {\n    this._lightColor = lightColor;\n    return this;\n  }\n  /**\n   *\n   * @param lockScreenVisibility\n   * @returns {AndroidChannel}\n   */\n\n\n  setLockScreenVisibility(lockScreenVisibility) {\n    if (!Object.values(Visibility).includes(lockScreenVisibility)) {\n      throw new Error(`AndroidChannel:setLockScreenVisibility Invalid Visibility: ${lockScreenVisibility}`);\n    }\n\n    this._lockScreenVisibility = lockScreenVisibility;\n    return this;\n  }\n  /**\n   *\n   * @param showBadge\n   * @returns {AndroidChannel}\n   */\n\n\n  setShowBadge(showBadge) {\n    this._showBadge = showBadge;\n    return this;\n  }\n  /**\n   *\n   * @param sound\n   * @returns {AndroidChannel}\n   */\n\n\n  setSound(sound) {\n    this._sound = sound;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationPattern\n   * @returns {AndroidChannel}\n   */\n\n\n  setVibrationPattern(vibrationPattern) {\n    this._vibrationPattern = vibrationPattern;\n    return this;\n  }\n\n  build() {\n    if (!this._channelId) {\n      throw new Error('AndroidChannel: Missing required `channelId` property');\n    } else if (!this._importance) {\n      throw new Error('AndroidChannel: Missing required `importance` property');\n    } else if (!this._name) {\n      throw new Error('AndroidChannel: Missing required `name` property');\n    }\n\n    return {\n      bypassDnd: this._bypassDnd,\n      channelId: this._channelId,\n      description: this._description,\n      group: this._group,\n      importance: this._importance,\n      lightColor: this._lightColor,\n      lightsEnabled: this._lightsEnabled,\n      lockScreenVisibility: this._lockScreenVisibility,\n      name: this._name,\n      showBadge: this._showBadge,\n      sound: this._sound,\n      vibrationEnabled: this._vibrationEnabled,\n      vibrationPattern: this._vibrationPattern\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}