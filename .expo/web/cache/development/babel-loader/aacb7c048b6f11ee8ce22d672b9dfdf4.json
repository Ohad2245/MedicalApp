{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport DocumentReference from \"./DocumentReference\";\nimport FieldPath from \"./FieldPath\";\nimport Path from \"./Path\";\nimport { isObject, deepGet } from \"../../utils\";\nimport { parseNativeMap } from \"./utils/serialize\";\n\nvar extractFieldPathData = function extractFieldPathData(data, segments) {\n  if (!data || !isObject(data)) {\n    return undefined;\n  }\n\n  var pathValue = data[segments[0]];\n\n  if (segments.length === 1) {\n    return pathValue;\n  }\n\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\n\nvar DocumentSnapshot = function () {\n  function DocumentSnapshot(firestore, nativeData) {\n    var _this = this;\n\n    _classCallCheck(this, DocumentSnapshot);\n\n    this.data = function () {\n      return _this._data;\n    };\n\n    this.get = function (fieldPath) {\n      if (fieldPath instanceof FieldPath) {\n        return extractFieldPathData(_this._data, fieldPath._segments);\n      }\n\n      return deepGet(_this._data, fieldPath, '.');\n    };\n\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new DocumentReference(firestore, Path.fromName(nativeData.path));\n  }\n\n  _createClass(DocumentSnapshot, [{\n    key: \"exists\",\n    get: function get() {\n      return this._data !== undefined;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._ref.id;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._metadata;\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this._ref;\n    }\n  }]);\n\n  return DocumentSnapshot;\n}();\n\nexport { DocumentSnapshot as default };","map":{"version":3,"names":["DocumentReference","FieldPath","Path","isObject","deepGet","parseNativeMap","extractFieldPathData","data","segments","undefined","pathValue","length","slice","DocumentSnapshot","firestore","nativeData","_data","get","fieldPath","_segments","_metadata","metadata","_ref","fromName","path","id"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/firestore/DocumentSnapshot.js"],"sourcesContent":["/**\n * \n * DocumentSnapshot representation wrapper\n */\nimport DocumentReference from './DocumentReference';\nimport FieldPath from './FieldPath';\nimport Path from './Path';\nimport { isObject, deepGet } from '../../utils';\nimport { parseNativeMap } from './utils/serialize';\n\nconst extractFieldPathData = (data, segments) => {\n  if (!data || !isObject(data)) {\n    return undefined;\n  }\n\n  const pathValue = data[segments[0]];\n\n  if (segments.length === 1) {\n    return pathValue;\n  }\n\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\n/**\n * @class DocumentSnapshot\n */\n\n\nexport default class DocumentSnapshot {\n  constructor(firestore, nativeData) {\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new DocumentReference(firestore, Path.fromName(nativeData.path));\n  }\n\n  get exists() {\n    return this._data !== undefined;\n  }\n\n  get id() {\n    return this._ref.id;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  data = () => this._data;\n  get = fieldPath => {\n    if (fieldPath instanceof FieldPath) {\n      return extractFieldPathData(this._data, fieldPath._segments);\n    }\n\n    return deepGet(this._data, fieldPath, '.');\n  };\n}"],"mappings":";;AAIA,OAAOA,iBAAP;AACA,OAAOC,SAAP;AACA,OAAOC,IAAP;AACA,SAASC,QAAT,EAAmBC,OAAnB;AACA,SAASC,cAAT;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,QAAP,EAAoB;EAC/C,IAAI,CAACD,IAAD,IAAS,CAACJ,QAAQ,CAACI,IAAD,CAAtB,EAA8B;IAC5B,OAAOE,SAAP;EACD;;EAED,IAAMC,SAAS,GAAGH,IAAI,CAACC,QAAQ,CAAC,CAAD,CAAT,CAAtB;;EAEA,IAAIA,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;IACzB,OAAOD,SAAP;EACD;;EAED,OAAOJ,oBAAoB,CAACI,SAAD,EAAYF,QAAQ,CAACI,KAAT,CAAe,CAAf,CAAZ,CAA3B;AACD,CAZD;;IAkBqBC,gB;EACnB,0BAAYC,SAAZ,EAAuBC,UAAvB,EAAmC;IAAA;;IAAA;;IAAA,KAsBnCR,IAtBmC,GAsB5B;MAAA,OAAM,KAAI,CAACS,KAAX;IAAA,CAtB4B;;IAAA,KAuBnCC,GAvBmC,GAuB7B,UAAAC,SAAS,EAAI;MACjB,IAAIA,SAAS,YAAYjB,SAAzB,EAAoC;QAClC,OAAOK,oBAAoB,CAAC,KAAI,CAACU,KAAN,EAAaE,SAAS,CAACC,SAAvB,CAA3B;MACD;;MAED,OAAOf,OAAO,CAAC,KAAI,CAACY,KAAN,EAAaE,SAAb,EAAwB,GAAxB,CAAd;IACD,CA7BkC;;IACjC,KAAKF,KAAL,GAAaX,cAAc,CAACS,SAAD,EAAYC,UAAU,CAACR,IAAvB,CAA3B;IACA,KAAKa,SAAL,GAAiBL,UAAU,CAACM,QAA5B;IACA,KAAKC,IAAL,GAAY,IAAItB,iBAAJ,CAAsBc,SAAtB,EAAiCZ,IAAI,CAACqB,QAAL,CAAcR,UAAU,CAACS,IAAzB,CAAjC,CAAZ;EACD;;;;SAED,eAAa;MACX,OAAO,KAAKR,KAAL,KAAeP,SAAtB;IACD;;;SAED,eAAS;MACP,OAAO,KAAKa,IAAL,CAAUG,EAAjB;IACD;;;SAED,eAAe;MACb,OAAO,KAAKL,SAAZ;IACD;;;SAED,eAAU;MACR,OAAO,KAAKE,IAAZ;IACD;;;;;;SArBkBT,gB"},"metadata":{},"sourceType":"module"}