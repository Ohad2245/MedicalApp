{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../../../core/theming\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n    _ref$labelProps = _ref.labelProps,\n    placeholderStyle = _ref$labelProps.placeholderStyle,\n    baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n    topPosition = _ref$labelProps.topPosition,\n    hasActiveOutline = _ref$labelProps.hasActiveOutline,\n    label = _ref$labelProps.label,\n    backgroundColor = _ref$labelProps.backgroundColor,\n    roundness = _ref$labelProps.roundness,\n    labelStyle = _ref.labelStyle,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    themeOverrides = _ref.theme;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  var _useInternalTheme = useInternalTheme(themeOverrides),\n    isV3 = _useInternalTheme.isV3;\n  var labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  var labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  var labelTextTransform = [].concat(_toConsumableArray(labelStyle.transform), [labelTextScaleY]);\n  var labelTextWidth = isV3 ? {\n    width: parentState.labelLayout.width - placeholderStyle.paddingHorizontal\n  } : {\n    maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n  };\n  return label ? [React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity: opacity,\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX]\n    }]\n  }), React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, isV3 && styles.md3OutlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: labelTextTransform\n    }, labelTextWidth],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\nexport default LabelBackground;\nvar styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  },\n  md3OutlinedLabel: {\n    left: 8\n  }\n});","map":{"version":3,"sources":["LabelBackground.tsx"],"names":["React","useInternalTheme","AnimatedText","LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","theme","themeOverrides","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","isV3","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","transform","labelTextWidth","width","labelLayout","paddingHorizontal","maxWidth","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","md3OutlinedLabel","top","create","position","left","color"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAG9B,SAASC,gBAAgB;AACzB,OAAOC,YAAY;AAGnB,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAG,IAAA,EAcI;EAdH,IACvBC,WAAW,GAaU,IAAA,CAbrBA,WAAW;IAAA,kBAaU,IAAA,CAZrBC,UAAU;IACRC,gBAAgB,mBAAhBA,gBAAgB;IAChBC,mBAAmB,mBAAnBA,mBAAmB;IACnBC,WAAW,mBAAXA,WAAW;IACXC,gBAAgB,mBAAhBA,gBAAgB;IAChBC,KAAK,mBAALA,KAAK;IACLC,eAAe,mBAAfA,eAAe;IACfC,SAAAA,mBAAAA,SAAAA;IAEFC,UAAU,GAGW,IAAA,CAHrBA,UAAU;IACVC,qBAAqB,GAEA,IAAA,CAFrBA,qBAAqB;IACdE,cAAAA,GACc,IAAA,CADrBD,KAAK;EAEL,IAAME,QAAQ,GAAGR,gBAAgB,IAAIL,WAAW,CAACc,KAAK;EACtD,IAAMC,OAAO,GAAGf,WAAW,CAACgB,OAAO,CAACC,WAAW,CAAC;IAC9CC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAACN,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;EACnC,CAAC,CAAC;EAEF,wBAAiBhB,gBAAgB,CAACe,cAAc,CAAC;IAAzCQ,IAAAA,qBAAAA,IAAAA;EAER,IAAMC,iBAAiB,GAAG;IACxBC,UAAU,EAAEtB,WAAW,CAACgB,OAAO,CAACC,WAAW,CAAC;MAC1CC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,CAAChB,mBAAmB,EAAE,CAAC;IACvC,CAAC;EACH,CAAC;EAED,IAAMoB,eAAe,GAAG;IACtBC,MAAM,EAAExB,WAAW,CAACgB,OAAO,CAACC,WAAW,CAAC;MACtCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;IACtB,CAAC;EACH,CAAC;EAED,IAAMM,kBAAkB,gCAAOhB,UAAU,CAACiB,SAAS,IAAEH,eAAe,EAAC;EAErE,IAAMI,cAAc,GAAGP,IAAI,GACvB;IACEQ,KAAK,EACH5B,WAAW,CAAC6B,WAAW,CAACD,KAAK,GAAG1B,gBAAgB,CAAC4B;EACrD,CAAC,GACD;IACEC,QAAQ,EACN/B,WAAW,CAAC6B,WAAW,CAACD,KAAK,GAC7B,CAAC,GAAG1B,gBAAgB,CAAC4B;EACzB,CAAC;EAEL,OAAOxB,KAAK,GACR,CACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;IACZ,GAAG,EAAC,sBAAsB;IAC1B,aAAa,EAAC,MAAM;IACpB,KAAK,EAAE,CACL0B,UAAU,CAACC,YAAY,EACvBC,MAAM,CAACC,IAAI,EACX;MACE5B,eAAe,EAAfA,eAAe;MACf6B,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC9B,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;MACrCO,OAAO,EAAPA,OAAO;MACPwB,MAAM,EAAEF,IAAI,CAACC,GAAG,CAAC9B,SAAS,EAAE,CAAC,CAAC;MAC9BkB,SAAS,EAAE,CAACL,iBAAiB;IAC/B,CAAC;EACD,CAAA,CACF,EACF,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA;IACX,GAAG,EAAC,sBAAsB;IAC1B,KAAK,EAAE,CACLnB,gBAAgB,EAChBO,UAAU,EACVyB,MAAM,CAACM,aAAa,EACpBpB,IAAI,IAAIc,MAAM,CAACO,gBAAgB,EAC/B;MACEC,GAAG,EAAEtC,WAAW,GAAG,CAAC;MACpBG,eAAe,EAAfA,eAAe;MACfQ,OAAO,EAAPA,OAAO;MACPW,SAAS,EAAED;IACb,CAAC,EACDE,cAAc,CACd;IACF,aAAa,EAAE,CAAE;IACjB,qBAAqB,EAAEjB;EAAsB,CAAA,EAE5CJ,KAAK,CACO,CAChB,GACD,IAAI;AACV,CAAC;AAED,eAAeP,eAAe;AAE9B,IAAMmC,MAAM,GAAGF,UAAU,CAACW,MAAM,CAAC;EAC/BR,IAAI,EAAE;IACJS,QAAQ,EAAE,UAAU;IACpBF,GAAG,EAAE,CAAC;IACNG,IAAI,EAAE,EAAE;IACRjB,KAAK,EAAE;EACT,CAAC;EAEDY,aAAa,EAAE;IACbI,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,EAAE;IACRf,iBAAiB,EAAE,CAAC;IACpBgB,KAAK,EAAE;EACT,CAAC;EACDL,gBAAgB,EAAE;IAChBI,IAAI,EAAE;EACR;AACF,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../../core/theming';\nimport AnimatedText from '../../Typography/AnimatedText';\nconst LabelBackground = _ref => {\n  let {\n    parentState,\n    labelProps: {\n      placeholderStyle,\n      baseLabelTranslateX,\n      topPosition,\n      hasActiveOutline,\n      label,\n      backgroundColor,\n      roundness\n    },\n    labelStyle,\n    maxFontSizeMultiplier,\n    theme: themeOverrides\n  } = _ref;\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  const {\n    isV3\n  } = useInternalTheme(themeOverrides);\n  const labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  const labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n  const labelTextWidth = isV3 ? {\n    width: parentState.labelLayout.width - placeholderStyle.paddingHorizontal\n  } : {\n    maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n  };\n  return label ? [/*#__PURE__*/React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity,\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX]\n    }]\n  }), /*#__PURE__*/React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, isV3 && styles.md3OutlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor,\n      opacity,\n      transform: labelTextTransform\n    }, labelTextWidth],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\nexport default LabelBackground;\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  },\n  md3OutlinedLabel: {\n    left: 8\n  }\n});\n//# sourceMappingURL=LabelBackground.js.map"]},"metadata":{},"sourceType":"module"}