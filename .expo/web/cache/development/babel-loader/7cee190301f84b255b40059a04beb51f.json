{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar lineTypes = PropTypes.oneOf(['solid', 'dotted', 'dashed', 'none']);\nvar Line = function (_PureComponent) {\n  _inherits(Line, _PureComponent);\n  var _super = _createSuper(Line);\n  function Line() {\n    var _this;\n    _classCallCheck(this, Line);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      maxLineWidth: 1\n    };\n    return _this;\n  }\n  _createClass(Line, [{\n    key: \"borderProps\",\n    value: function borderProps() {\n      var _this$props = this.props,\n        disabled = _this$props.disabled,\n        restricted = _this$props.restricted,\n        lineWidth = _this$props.lineWidth,\n        activeLineWidth = _this$props.activeLineWidth,\n        disabledLineWidth = _this$props.disabledLineWidth,\n        baseColor = _this$props.baseColor,\n        tintColor = _this$props.tintColor,\n        errorColor = _this$props.errorColor,\n        focusAnimation = _this$props.focusAnimation;\n      if (disabled) {\n        return {\n          borderColor: baseColor,\n          borderWidth: disabledLineWidth\n        };\n      }\n      if (restricted) {\n        return {\n          borderColor: errorColor,\n          borderWidth: activeLineWidth\n        };\n      }\n      return {\n        borderColor: focusAnimation.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [errorColor, baseColor, tintColor]\n        }),\n        borderWidth: focusAnimation.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [activeLineWidth, lineWidth, activeLineWidth]\n        })\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var maxLineWidth = this.state.maxLineWidth;\n      var _this$props2 = this.props,\n        disabled = _this$props2.disabled,\n        lineType = _this$props2.lineType,\n        disabledLineType = _this$props2.disabledLineType;\n      var borderStyle = disabled ? disabledLineType : lineType;\n      if ('none' === borderStyle) {\n        return null;\n      }\n      var _Array$from = Array.from(new Array(3), function () {\n          return -1.5 * maxLineWidth;\n        }),\n        _Array$from2 = _slicedToArray(_Array$from, 3),\n        top = _Array$from2[0],\n        right = _Array$from2[1],\n        left = _Array$from2[2];\n      var lineStyle = _objectSpread(_objectSpread({}, this.borderProps()), {}, {\n        borderStyle: borderStyle,\n        top: top,\n        right: right,\n        left: left\n      });\n      return _jsx(View, {\n        style: styles.container,\n        pointerEvents: \"none\",\n        children: _jsx(Animated.View, {\n          style: [styles.line, lineStyle]\n        })\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var lineWidth = props.lineWidth,\n        activeLineWidth = props.activeLineWidth,\n        disabledLineWidth = props.disabledLineWidth;\n      var maxLineWidth = Math.max(lineWidth, activeLineWidth, disabledLineWidth, 1);\n      if (maxLineWidth !== state.maxLineWidth) {\n        return {\n          maxLineWidth: maxLineWidth\n        };\n      }\n      return null;\n    }\n  }]);\n  return Line;\n}(PureComponent);\nLine.defaultProps = {\n  lineType: 'solid',\n  disabledLineType: 'dotted',\n  disabled: false,\n  restricted: false\n};\nLine.propTypes = {\n  lineType: lineTypes,\n  disabledLineType: lineTypes,\n  disabled: PropTypes.bool,\n  restricted: PropTypes.bool,\n  tintColor: PropTypes.string,\n  baseColor: PropTypes.string,\n  errorColor: PropTypes.string,\n  lineWidth: PropTypes.number,\n  activeLineWidth: PropTypes.number,\n  disabledLineWidth: PropTypes.number,\n  focusAnimation: PropTypes.instanceOf(Animated.Value)\n};\nexport { Line as default };","map":{"version":3,"names":["PropTypes","React","PureComponent","styles","lineTypes","oneOf","Line","state","maxLineWidth","props","disabled","restricted","lineWidth","activeLineWidth","disabledLineWidth","baseColor","tintColor","errorColor","focusAnimation","borderColor","borderWidth","interpolate","inputRange","outputRange","lineType","disabledLineType","borderStyle","Array","from","top","right","left","lineStyle","borderProps","container","line","Math","max","defaultProps","propTypes","bool","string","number","instanceOf","Animated","Value"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/node_modules/react-native-material-textfield/src/components/line/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { View, Animated } from 'react-native';\n\nimport styles from './styles';\n\nconst lineTypes = PropTypes\n  .oneOf(['solid', 'dotted', 'dashed', 'none']);\n\nexport default class Line extends PureComponent {\n  static defaultProps = {\n    lineType: 'solid',\n    disabledLineType: 'dotted',\n\n    disabled: false,\n    restricted: false,\n  };\n\n  static propTypes = {\n    lineType: lineTypes,\n    disabledLineType: lineTypes,\n\n    disabled: PropTypes.bool,\n    restricted: PropTypes.bool,\n\n    tintColor: PropTypes.string,\n    baseColor: PropTypes.string,\n    errorColor: PropTypes.string,\n\n    lineWidth: PropTypes.number,\n    activeLineWidth: PropTypes.number,\n    disabledLineWidth: PropTypes.number,\n\n    focusAnimation: PropTypes.instanceOf(Animated.Value),\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    let { lineWidth, activeLineWidth, disabledLineWidth } = props;\n\n    let maxLineWidth = Math.max(\n      lineWidth,\n      activeLineWidth,\n      disabledLineWidth,\n      1,\n    );\n\n    if (maxLineWidth !== state.maxLineWidth) {\n      return { maxLineWidth };\n    }\n\n    return null;\n  }\n\n  state = { maxLineWidth: 1 };\n\n  borderProps() {\n    let {\n      disabled,\n      restricted,\n      lineWidth,\n      activeLineWidth,\n      disabledLineWidth,\n      baseColor,\n      tintColor,\n      errorColor,\n      focusAnimation,\n    } = this.props;\n\n    if (disabled) {\n      return {\n        borderColor: baseColor,\n        borderWidth: disabledLineWidth,\n      };\n    }\n\n    if (restricted) {\n      return {\n        borderColor: errorColor,\n        borderWidth: activeLineWidth,\n      };\n    }\n\n    return {\n      borderColor: focusAnimation.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor],\n      }),\n\n      borderWidth: focusAnimation.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [activeLineWidth, lineWidth, activeLineWidth],\n      }),\n    };\n  }\n\n  render() {\n    let { maxLineWidth } = this.state;\n    let { disabled, lineType, disabledLineType } = this.props;\n\n    let borderStyle = disabled?\n      disabledLineType:\n      lineType;\n\n    if ('none' === borderStyle) {\n      return null;\n    }\n\n    let [top, right, left] = Array\n      .from(new Array(3), () => -1.5 * maxLineWidth);\n\n    let lineStyle = {\n      ...this.borderProps(),\n\n      borderStyle,\n      top,\n      right,\n      left,\n    };\n\n    return (\n      <View style={styles.container} pointerEvents='none'>\n        <Animated.View style={[styles.line, lineStyle]} />\n      </View>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}