{"ast":null,"code":"var reIsUint = /^\\d+$/;\nvar MAX_SAFE_INTEGER = 9007199254740991;\nfunction isIndex(value, length) {\n  value = typeof value == 'number' || reIsUint.test(value) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\nmodule.exports = isIndex;","map":{"version":3,"names":["reIsUint","MAX_SAFE_INTEGER","isIndex","value","length","test","module","exports"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/node_modules/react-native-credit-card-input-plus/node_modules/lodash/internal/isIndex.js"],"sourcesContent":["/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n"],"mappings":"AACA,IAAIA,QAAQ,GAAG,OAAO;AAMtB,IAAIC,gBAAgB,GAAG,gBAAgB;AAUvC,SAASC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9BD,KAAK,GAAI,OAAOA,KAAK,IAAI,QAAQ,IAAIH,QAAQ,CAACK,IAAI,CAACF,KAAK,CAAC,GAAI,CAACA,KAAK,GAAG,CAAC,CAAC;EACxEC,MAAM,GAAGA,MAAM,IAAI,IAAI,GAAGH,gBAAgB,GAAGG,MAAM;EACnD,OAAOD,KAAK,GAAG,CAAC,CAAC,IAAIA,KAAK,GAAG,CAAC,IAAI,CAAC,IAAIA,KAAK,GAAGC,MAAM;AACvD;AAEAE,MAAM,CAACC,OAAO,GAAGL,OAAO"},"metadata":{},"sourceType":"script"}