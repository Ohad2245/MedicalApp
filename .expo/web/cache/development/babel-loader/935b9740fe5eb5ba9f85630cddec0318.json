{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { statics } from \"./\";\nimport AdRequest from \"./AdRequest\";\nimport { SharedEventEmitter } from \"../../utils/events\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { nativeToJSError } from \"../../utils\";\nvar subscriptions = [];\n\nvar Interstitial = function () {\n  function Interstitial(admob, adUnit) {\n    var _this = this;\n\n    _classCallCheck(this, Interstitial);\n\n    this._onInterstitialEvent = function (event) {\n      var eventType = \"interstitial:\" + _this.adUnit + \":\" + event.type;\n\n      var emitData = _extends({}, event);\n\n      switch (event.type) {\n        case 'onAdLoaded':\n          _this.loaded = true;\n          break;\n\n        case 'onAdFailedToLoad':\n          emitData = nativeToJSError(event.payload.code, event.payload.message);\n          emitData.type = event.type;\n          break;\n\n        default:\n      }\n\n      SharedEventEmitter.emit(eventType, emitData);\n      SharedEventEmitter.emit(\"interstitial:\" + _this.adUnit + \":*\", emitData);\n    };\n\n    if (Platform.OS === 'ios') {\n      getNativeModule(admob).clearInterstitial(adUnit);\n    }\n\n    for (var i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(\"interstitial_\" + adUnit);\n    SharedEventEmitter.addListener(\"interstitial_\" + adUnit, this._onInterstitialEvent);\n  }\n\n  _createClass(Interstitial, [{\n    key: \"loadAd\",\n    value: function loadAd(request) {\n      var adRequest = request;\n\n      if (!adRequest || !Object.keys(adRequest)) {\n        adRequest = new AdRequest().addTestDevice().build();\n      }\n\n      return getNativeModule(this._admob).interstitialLoadAd(this.adUnit, adRequest);\n    }\n  }, {\n    key: \"isLoaded\",\n    value: function isLoaded() {\n      return this.loaded;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.loaded) {\n        getNativeModule(this._admob).interstitialShowAd(this.adUnit);\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventType, listenerCb) {\n      if (!statics.EventTypes[eventType]) {\n        console.warn(\"Invalid event type provided, must be one of: \" + Object.keys(statics.EventTypes).join(', '));\n        return null;\n      }\n\n      var sub = SharedEventEmitter.addListener(\"interstitial:\" + this.adUnit + \":\" + eventType, listenerCb);\n      subscriptions.push(sub);\n      return sub;\n    }\n  }]);\n\n  return Interstitial;\n}();\n\nexport { Interstitial as default };","map":{"version":3,"names":["statics","AdRequest","SharedEventEmitter","getNativeModule","nativeToJSError","subscriptions","Interstitial","admob","adUnit","_onInterstitialEvent","event","eventType","type","emitData","loaded","payload","code","message","emit","Platform","OS","clearInterstitial","i","len","length","remove","_admob","removeAllListeners","addListener","request","adRequest","Object","keys","addTestDevice","build","interstitialLoadAd","interstitialShowAd","listenerCb","EventTypes","console","warn","join","sub","push"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/admob/Interstitial.js"],"sourcesContent":["import { Platform } from 'react-native';\nimport { statics } from './';\nimport AdRequest from './AdRequest';\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getNativeModule } from '../../utils/native';\nimport { nativeToJSError } from '../../utils';\nlet subscriptions = [];\nexport default class Interstitial {\n  constructor(admob, adUnit) {\n    // Interstitials on iOS require a new instance each time\n    if (Platform.OS === 'ios') {\n      getNativeModule(admob).clearInterstitial(adUnit);\n    }\n\n    for (let i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(`interstitial_${adUnit}`);\n    SharedEventEmitter.addListener(`interstitial_${adUnit}`, this._onInterstitialEvent);\n  }\n  /**\n   * Handle a JS emit event\n   * @param event\n   * @private\n   */\n\n\n  _onInterstitialEvent = event => {\n    const eventType = `interstitial:${this.adUnit}:${event.type}`;\n    let emitData = Object.assign({}, event);\n\n    switch (event.type) {\n      case 'onAdLoaded':\n        this.loaded = true;\n        break;\n\n      case 'onAdFailedToLoad':\n        emitData = nativeToJSError(event.payload.code, event.payload.message);\n        emitData.type = event.type;\n        break;\n\n      default:\n    }\n\n    SharedEventEmitter.emit(eventType, emitData);\n    SharedEventEmitter.emit(`interstitial:${this.adUnit}:*`, emitData);\n  };\n  /**\n   * Load an ad with an instance of AdRequest\n   * @param request\n   * @returns {*}\n   */\n\n  loadAd(request) {\n    let adRequest = request;\n\n    if (!adRequest || !Object.keys(adRequest)) {\n      adRequest = new AdRequest().addTestDevice().build();\n    }\n\n    return getNativeModule(this._admob).interstitialLoadAd(this.adUnit, adRequest);\n  }\n  /**\n   * Return a local instance of isLoaded\n   * @returns {boolean}\n   */\n\n\n  isLoaded() {\n    return this.loaded;\n  }\n  /**\n   * Show the advert - will only show if loaded\n   * @returns {*}\n   */\n\n\n  show() {\n    if (this.loaded) {\n      getNativeModule(this._admob).interstitialShowAd(this.adUnit);\n    }\n  }\n  /**\n   * Listen to an Ad event\n   * @param eventType\n   * @param listenerCb\n   * @returns {null}\n   */\n\n\n  on(eventType, listenerCb) {\n    if (!statics.EventTypes[eventType]) {\n      console.warn(`Invalid event type provided, must be one of: ${Object.keys(statics.EventTypes).join(', ')}`);\n      return null;\n    }\n\n    const sub = SharedEventEmitter.addListener(`interstitial:${this.adUnit}:${eventType}`, listenerCb);\n    subscriptions.push(sub);\n    return sub;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}