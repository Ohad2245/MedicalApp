{"ast":null,"code":"'use strict';\n\nvar parseDate = require(\"./parse-date\");\nvar expirationMonth = require(\"./expiration-month\");\nvar expirationYear = require(\"./expiration-year\");\nvar isString = require('lodash/lang/isString');\nfunction verification(isValid, isPotentiallyValid, month, year) {\n  return {\n    isValid: isValid,\n    isPotentiallyValid: isPotentiallyValid,\n    month: month,\n    year: year\n  };\n}\nfunction expirationDate(value) {\n  var date, monthValid, yearValid, isValidForThisYear;\n  if (isString(value)) {\n    value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\n    date = parseDate(value);\n  } else if (value !== null && typeof value === 'object') {\n    date = {\n      month: String(value.month),\n      year: String(value.year)\n    };\n  } else {\n    return verification(false, false, null, null);\n  }\n  monthValid = expirationMonth(date.month);\n  yearValid = expirationYear(date.year);\n  if (monthValid.isValid) {\n    if (yearValid.isCurrentYear) {\n      isValidForThisYear = monthValid.isValidForThisYear;\n      return verification(isValidForThisYear, isValidForThisYear, date.month, date.year);\n    }\n    if (yearValid.isValid) {\n      return verification(true, true, date.month, date.year);\n    }\n  }\n  if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\n    return verification(false, true, null, null);\n  }\n  return verification(false, false, null, null);\n}\nmodule.exports = expirationDate;","map":{"version":3,"names":["parseDate","require","expirationMonth","expirationYear","isString","verification","isValid","isPotentiallyValid","month","year","expirationDate","value","date","monthValid","yearValid","isValidForThisYear","replace","String","isCurrentYear","module","exports"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/node_modules/react-native-credit-card-input-plus/node_modules/card-validator/src/expiration-date.js"],"sourcesContent":["'use strict';\n\nvar parseDate = require('./parse-date');\nvar expirationMonth = require('./expiration-month');\nvar expirationYear = require('./expiration-year');\nvar isString = require('lodash/lang/isString');\n\nfunction verification(isValid, isPotentiallyValid, month, year) {\n  return {\n    isValid: isValid,\n    isPotentiallyValid: isPotentiallyValid,\n    month: month,\n    year: year\n  };\n}\n\nfunction expirationDate(value) {\n  var date, monthValid, yearValid, isValidForThisYear;\n\n  if (isString(value)) {\n    value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\n    date = parseDate(value);\n  } else if (value !== null && typeof value === 'object') {\n    date = {\n      month: String(value.month),\n      year: String(value.year)\n    };\n  } else {\n    return verification(false, false, null, null);\n  }\n\n  monthValid = expirationMonth(date.month);\n  yearValid = expirationYear(date.year);\n\n  if (monthValid.isValid) {\n    if (yearValid.isCurrentYear) {\n      isValidForThisYear = monthValid.isValidForThisYear;\n      return verification(isValidForThisYear, isValidForThisYear, date.month, date.year);\n    }\n\n    if (yearValid.isValid) {\n      return verification(true, true, date.month, date.year);\n    }\n  }\n\n  if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\n    return verification(false, true, null, null);\n  }\n\n  return verification(false, false, null, null);\n}\n\nmodule.exports = expirationDate;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,gBAAgB;AACvC,IAAIC,eAAe,GAAGD,OAAO,sBAAsB;AACnD,IAAIE,cAAc,GAAGF,OAAO,qBAAqB;AACjD,IAAIG,QAAQ,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAE9C,SAASI,YAAY,CAACC,OAAO,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC9D,OAAO;IACLH,OAAO,EAAEA,OAAO;IAChBC,kBAAkB,EAAEA,kBAAkB;IACtCC,KAAK,EAAEA,KAAK;IACZC,IAAI,EAAEA;EACR,CAAC;AACH;AAEA,SAASC,cAAc,CAACC,KAAK,EAAE;EAC7B,IAAIC,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEC,kBAAkB;EAEnD,IAAIX,QAAQ,CAACO,KAAK,CAAC,EAAE;IACnBA,KAAK,GAAGA,KAAK,CAACK,OAAO,CAAC,wBAAwB,EAAE,OAAO,CAAC;IACxDJ,IAAI,GAAGZ,SAAS,CAACW,KAAK,CAAC;EACzB,CAAC,MAAM,IAAIA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACtDC,IAAI,GAAG;MACLJ,KAAK,EAAES,MAAM,CAACN,KAAK,CAACH,KAAK,CAAC;MAC1BC,IAAI,EAAEQ,MAAM,CAACN,KAAK,CAACF,IAAI;IACzB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;EAC/C;EAEAQ,UAAU,GAAGX,eAAe,CAACU,IAAI,CAACJ,KAAK,CAAC;EACxCM,SAAS,GAAGX,cAAc,CAACS,IAAI,CAACH,IAAI,CAAC;EAErC,IAAII,UAAU,CAACP,OAAO,EAAE;IACtB,IAAIQ,SAAS,CAACI,aAAa,EAAE;MAC3BH,kBAAkB,GAAGF,UAAU,CAACE,kBAAkB;MAClD,OAAOV,YAAY,CAACU,kBAAkB,EAAEA,kBAAkB,EAAEH,IAAI,CAACJ,KAAK,EAAEI,IAAI,CAACH,IAAI,CAAC;IACpF;IAEA,IAAIK,SAAS,CAACR,OAAO,EAAE;MACrB,OAAOD,YAAY,CAAC,IAAI,EAAE,IAAI,EAAEO,IAAI,CAACJ,KAAK,EAAEI,IAAI,CAACH,IAAI,CAAC;IACxD;EACF;EAEA,IAAII,UAAU,CAACN,kBAAkB,IAAIO,SAAS,CAACP,kBAAkB,EAAE;IACjE,OAAOF,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC9C;EAEA,OAAOA,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;AAC/C;AAEAc,MAAM,CAACC,OAAO,GAAGV,cAAc"},"metadata":{},"sourceType":"script"}