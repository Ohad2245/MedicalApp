{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { isAndroid, isIOS } from \"../../utils\";\n\nvar AuthSettings = function () {\n  function AuthSettings(auth) {\n    _classCallCheck(this, AuthSettings);\n\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n\n  _createClass(AuthSettings, [{\n    key: \"appVerificationDisabledForTesting\",\n    get: function get() {\n      return this._appVerificationDisabledForTesting;\n    },\n    set: function set(disabled) {\n      if (isIOS) {\n        this._appVerificationDisabledForTesting = disabled;\n        getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n      }\n    }\n  }, {\n    key: \"setAutoRetrievedSmsCodeForPhoneNumber\",\n    value: function setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n      if (isAndroid) {\n        return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n      }\n\n      return Promise.resolve(null);\n    }\n  }]);\n\n  return AuthSettings;\n}();\n\nexport { AuthSettings as default };","map":{"version":3,"names":["getNativeModule","isAndroid","isIOS","AuthSettings","auth","_auth","_appVerificationDisabledForTesting","disabled","setAppVerificationDisabledForTesting","phoneNumber","smsCode","setAutoRetrievedSmsCodeForPhoneNumber","Promise","resolve"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/auth/AuthSettings.js"],"sourcesContent":["import { getNativeModule } from '../../utils/native';\nimport { isAndroid, isIOS } from '../../utils';\n\n/**\n * Interface representing an Auth instance's settings, currently used\n * for enabling/disabling app verification for phone Auth testing. *\n */\nexport default class AuthSettings {\n  constructor(auth) {\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @return {boolean}\n   */\n\n\n  get appVerificationDisabledForTesting() {\n    return this._appVerificationDisabledForTesting;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @param disabled\n   */\n\n\n  set appVerificationDisabledForTesting(disabled) {\n    if (isIOS) {\n      this._appVerificationDisabledForTesting = disabled;\n      getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n    }\n  }\n  /**\n   * The phone number and SMS code here must have been configured in the\n   * Firebase Console (Authentication > Sign In Method > Phone).\n   *\n   * Calling this method a second time will overwrite the previously passed parameters.\n   * Only one number can be configured at a given time.\n   *\n   * @platform Android\n   * @param phoneNumber\n   * @param smsCode\n   * @return {*}\n   */\n\n\n  setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n    if (isAndroid) {\n      return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n    }\n\n    return Promise.resolve(null);\n  }\n\n}"],"mappings":";;AAAA,SAASA,eAAT;AACA,SAASC,SAAT,EAAoBC,KAApB;;IAMqBC,Y;EACnB,sBAAYC,IAAZ,EAAkB;IAAA;;IAChB,KAAKC,KAAL,GAAaD,IAAb;IACA,KAAKE,kCAAL,GAA0C,KAA1C;EACD;;;;SASD,eAAwC;MACtC,OAAO,KAAKA,kCAAZ;IACD,C;SASD,aAAsCC,QAAtC,EAAgD;MAC9C,IAAIL,KAAJ,EAAW;QACT,KAAKI,kCAAL,GAA0CC,QAA1C;QACAP,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BG,oCAA5B,CAAiED,QAAjE;MACD;IACF;;;WAeD,+CAAsCE,WAAtC,EAAmDC,OAAnD,EAA4D;MAC1D,IAAIT,SAAJ,EAAe;QACb,OAAOD,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BM,qCAA5B,CAAkEF,WAAlE,EAA+EC,OAA/E,CAAP;MACD;;MAED,OAAOE,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;IACD;;;;;;SAlDkBV,Y"},"metadata":{},"sourceType":"module"}