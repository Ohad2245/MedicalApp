{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Pay = function Pay() {\n  var _useState = useState(new Animated.Value(1)),\n    _useState2 = _slicedToArray(_useState, 2),\n    scale = _useState2[0],\n    setScale = _useState2[1];\n  var animateCard = function animateCard() {\n    LayoutAnimation.configureNext({\n      duration: 200,\n      update: {\n        type: LayoutAnimation.Types.easeInOut,\n        property: LayoutAnimation.Properties.scaleXY\n      }\n    });\n    setScale(scale === 1 ? 1.05 : 1);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: animateCard,\n    children: _jsx(Animated.View, {\n      style: {\n        transform: [{\n          scale: scale\n        }]\n      },\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsx(Text, {\n          style: styles.cardNumber,\n          children: \"1234 5678 9012 3456\"\n        }), _jsx(Text, {\n          style: styles.cardHolder,\n          children: \"John Doe\"\n        }), _jsx(Text, {\n          style: styles.expiryDate,\n          children: \"12/22\"\n        })]\n      })\n    })\n  });\n};\nvar styles = {\n  card: {\n    width: 300,\n    height: 200,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.26,\n    shadowRadius: 6,\n    elevation: 5,\n    padding: 20\n  },\n  cardNumber: {\n    fontSize: 20\n  },\n  cardHolder: {\n    fontSize: 16\n  },\n  expiryDate: {\n    fontSize: 16\n  }\n};\nexport default CreditCard;","map":{"version":3,"names":["React","useState","Pay","Animated","Value","scale","setScale","animateCard","LayoutAnimation","configureNext","duration","update","type","Types","easeInOut","property","Properties","scaleXY","transform","styles","card","cardNumber","cardHolder","expiryDate","width","height","backgroundColor","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","fontSize","CreditCard"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/screens/PaymentScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableWithoutFeedback, LayoutAnimation, Animated } from 'react-native';\r\n\r\nconst Pay = () => {\r\n  const [scale, setScale] = useState(new Animated.Value(1));\r\n\r\n  const animateCard = () => {\r\n    // Animate the scale of the card\r\n    LayoutAnimation.configureNext({\r\n      duration: 200,\r\n      update: {\r\n        type: LayoutAnimation.Types.easeInOut,\r\n        property: LayoutAnimation.Properties.scaleXY,\r\n      },\r\n    });\r\n    setScale(scale === 1 ? 1.05 : 1);\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={animateCard}>\r\n      <Animated.View style={{ transform: [{ scale }] }}>\r\n        <View style={styles.card}>\r\n          <Text style={styles.cardNumber}>1234 5678 9012 3456</Text>\r\n          <Text style={styles.cardHolder}>John Doe</Text>\r\n          <Text style={styles.expiryDate}>12/22</Text>\r\n        </View>\r\n      </Animated.View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  card: {\r\n    width: 300,\r\n    height: 200,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    shadowColor: 'black',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.26,\r\n    shadowRadius: 6,\r\n    elevation: 5,\r\n    padding: 20,\r\n  },\r\n  cardNumber: {\r\n    fontSize: 20,\r\n  },\r\n  cardHolder: {\r\n    fontSize: 16,\r\n  },\r\n  expiryDate: {\r\n    fontSize: 16,\r\n  },\r\n};\r\n\r\nexport default CreditCard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxC,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,gBAA0BD,QAAQ,CAAC,IAAIE,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAAA;IAAlDC,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;IAExBC,eAAe,CAACC,aAAa,CAAC;MAC5BC,QAAQ,EAAE,GAAG;MACbC,MAAM,EAAE;QACNC,IAAI,EAAEJ,eAAe,CAACK,KAAK,CAACC,SAAS;QACrCC,QAAQ,EAAEP,eAAe,CAACQ,UAAU,CAACC;MACvC;IACF,CAAC,CAAC;IACFX,QAAQ,CAACD,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;EAClC,CAAC;EAED,OACE,KAAC,wBAAwB;IAAC,OAAO,EAAEE,WAAY;IAAA,UAC7C,KAAC,QAAQ,CAAC,IAAI;MAAC,KAAK,EAAE;QAAEW,SAAS,EAAE,CAAC;UAAEb,KAAK,EAALA;QAAM,CAAC;MAAE,CAAE;MAAA,UAC/C,MAAC,IAAI;QAAC,KAAK,EAAEc,MAAM,CAACC,IAAK;QAAA,WACvB,KAAC,IAAI;UAAC,KAAK,EAAED,MAAM,CAACE,UAAW;UAAA,UAAC;QAAmB,EAAO,EAC1D,KAAC,IAAI;UAAC,KAAK,EAAEF,MAAM,CAACG,UAAW;UAAA,UAAC;QAAQ,EAAO,EAC/C,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,UAAW;UAAA,UAAC;QAAK,EAAO;MAAA;IACvC;EACO,EACS;AAE/B,CAAC;AAED,IAAMJ,MAAM,GAAG;EACbC,IAAI,EAAE;IACJI,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,OAAO;IACpBC,YAAY,EAAE;MAAEL,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCK,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZC,OAAO,EAAE;EACX,CAAC;EACDZ,UAAU,EAAE;IACVa,QAAQ,EAAE;EACZ,CAAC;EACDZ,UAAU,EAAE;IACVY,QAAQ,EAAE;EACZ,CAAC;EACDX,UAAU,EAAE;IACVW,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,eAAeC,UAAU"},"metadata":{},"sourceType":"module"}