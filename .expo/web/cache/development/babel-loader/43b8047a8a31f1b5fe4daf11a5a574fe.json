{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { SharedEventEmitter } from \"../../utils/events\";\nimport { getLogger } from \"../../utils/log\";\nimport { getNativeModule } from \"../../utils/native\";\nimport ModuleBase from \"../../utils/ModuleBase\";\nimport Interstitial from \"./Interstitial\";\nimport RewardedVideo from \"./RewardedVideo\";\nimport AdRequest from \"./AdRequest\";\nimport VideoOptions from \"./VideoOptions\";\nimport Banner from \"./Banner\";\nimport NativeExpress from \"./NativeExpress\";\nimport EventTypes, { NativeExpressEventTypes, RewardedVideoEventTypes } from \"./EventTypes\";\nvar NATIVE_EVENTS = ['interstitial_event', 'rewarded_video_event'];\nexport var MODULE_NAME = 'RNFirebaseAdMob';\nexport var NAMESPACE = 'admob';\n\nvar AdMob = function (_ModuleBase) {\n  _inherits(AdMob, _ModuleBase);\n\n  var _super = _createSuper(AdMob);\n\n  function AdMob(app) {\n    var _this;\n\n    _classCallCheck(this, AdMob);\n\n    _this = _super.call(this, app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    _this._initialized = false;\n    _this._appId = null;\n    SharedEventEmitter.addListener('interstitial_event', _this._onInterstitialEvent.bind(_assertThisInitialized(_this)));\n    SharedEventEmitter.addListener('rewarded_video_event', _this._onRewardedVideoEvent.bind(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AdMob, [{\n    key: \"_onInterstitialEvent\",\n    value: function _onInterstitialEvent(event) {\n      var adUnit = event.adUnit;\n      var jsEventType = \"interstitial_\" + adUnit;\n\n      if (SharedEventEmitter.listeners(jsEventType).length === 0) {}\n\n      SharedEventEmitter.emit(jsEventType, event);\n    }\n  }, {\n    key: \"_onRewardedVideoEvent\",\n    value: function _onRewardedVideoEvent(event) {\n      var adUnit = event.adUnit;\n      var jsEventType = \"rewarded_video_\" + adUnit;\n\n      if (SharedEventEmitter.listeners(jsEventType).length === 0) {}\n\n      SharedEventEmitter.emit(jsEventType, event);\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(appId) {\n      if (this._initialized) {\n        getLogger(this).warn('AdMob has already been initialized!');\n      } else {\n        this._initialized = true;\n        this._appId = appId;\n        getNativeModule(this).initialize(appId);\n      }\n    }\n  }, {\n    key: \"openDebugMenu\",\n    value: function openDebugMenu() {\n      if (!this._initialized) {\n        getLogger(this).warn('AdMob needs to be initialized before opening the dev menu!');\n      } else {\n        getLogger(this).info('Opening debug menu');\n        getNativeModule(this).openDebugMenu(this._appId);\n      }\n    }\n  }, {\n    key: \"interstitial\",\n    value: function interstitial(adUnit) {\n      return new Interstitial(this, adUnit);\n    }\n  }, {\n    key: \"rewarded\",\n    value: function rewarded(adUnit) {\n      return new RewardedVideo(this, adUnit);\n    }\n  }]);\n\n  return AdMob;\n}(ModuleBase);\n\nexport { AdMob as default };\nexport var statics = {\n  Banner: Banner,\n  NativeExpress: NativeExpress,\n  AdRequest: AdRequest,\n  VideoOptions: VideoOptions,\n  EventTypes: EventTypes,\n  RewardedVideoEventTypes: RewardedVideoEventTypes,\n  NativeExpressEventTypes: NativeExpressEventTypes\n};","map":{"version":3,"names":["SharedEventEmitter","getLogger","getNativeModule","ModuleBase","Interstitial","RewardedVideo","AdRequest","VideoOptions","Banner","NativeExpress","EventTypes","NativeExpressEventTypes","RewardedVideoEventTypes","NATIVE_EVENTS","MODULE_NAME","NAMESPACE","AdMob","app","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","_initialized","_appId","addListener","_onInterstitialEvent","bind","_onRewardedVideoEvent","event","adUnit","jsEventType","listeners","length","emit","appId","warn","initialize","info","openDebugMenu","statics"],"sources":["C:/Users/PC/Desktop/All/StoreApp2/my-app/node_modules/react-native-firebase/dist/modules/admob/index.js"],"sourcesContent":["/**\n * \n * AdMob representation wrapper\n */\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nimport ModuleBase from '../../utils/ModuleBase';\nimport Interstitial from './Interstitial';\nimport RewardedVideo from './RewardedVideo';\nimport AdRequest from './AdRequest';\nimport VideoOptions from './VideoOptions';\nimport Banner from './Banner';\nimport NativeExpress from './NativeExpress';\nimport EventTypes, { NativeExpressEventTypes, RewardedVideoEventTypes } from './EventTypes';\nconst NATIVE_EVENTS = ['interstitial_event', 'rewarded_video_event'];\nexport const MODULE_NAME = 'RNFirebaseAdMob';\nexport const NAMESPACE = 'admob';\nexport default class AdMob extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    this._initialized = false;\n    this._appId = null;\n    SharedEventEmitter.addListener('interstitial_event', this._onInterstitialEvent.bind(this));\n    SharedEventEmitter.addListener('rewarded_video_event', this._onRewardedVideoEvent.bind(this));\n  }\n\n  _onInterstitialEvent(event) {\n    const {\n      adUnit\n    } = event;\n    const jsEventType = `interstitial_${adUnit}`;\n\n    if (SharedEventEmitter.listeners(jsEventType).length === 0) {// TODO\n    }\n\n    SharedEventEmitter.emit(jsEventType, event);\n  }\n\n  _onRewardedVideoEvent(event) {\n    const {\n      adUnit\n    } = event;\n    const jsEventType = `rewarded_video_${adUnit}`;\n\n    if (SharedEventEmitter.listeners(jsEventType).length === 0) {// TODO\n    }\n\n    SharedEventEmitter.emit(jsEventType, event);\n  }\n\n  initialize(appId) {\n    if (this._initialized) {\n      getLogger(this).warn('AdMob has already been initialized!');\n    } else {\n      this._initialized = true;\n      this._appId = appId;\n      getNativeModule(this).initialize(appId);\n    }\n  }\n\n  openDebugMenu() {\n    if (!this._initialized) {\n      getLogger(this).warn('AdMob needs to be initialized before opening the dev menu!');\n    } else {\n      getLogger(this).info('Opening debug menu');\n      getNativeModule(this).openDebugMenu(this._appId);\n    }\n  }\n\n  interstitial(adUnit) {\n    return new Interstitial(this, adUnit);\n  }\n\n  rewarded(adUnit) {\n    return new RewardedVideo(this, adUnit);\n  }\n\n}\nexport const statics = {\n  Banner,\n  NativeExpress,\n  AdRequest,\n  VideoOptions,\n  EventTypes,\n  RewardedVideoEventTypes,\n  NativeExpressEventTypes\n};"],"mappings":";;;;;;;;;;;AAIA,SAASA,kBAAT;AACA,SAASC,SAAT;AACA,SAASC,eAAT;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP,IAAqBC,uBAArB,EAA8CC,uBAA9C;AACA,IAAMC,aAAa,GAAG,CAAC,oBAAD,EAAuB,sBAAvB,CAAtB;AACA,OAAO,IAAMC,WAAW,GAAG,iBAApB;AACP,OAAO,IAAMC,SAAS,GAAG,OAAlB;;IACcC,K;;;;;EACnB,eAAYC,GAAZ,EAAiB;IAAA;;IAAA;;IACf,0BAAMA,GAAN,EAAW;MACTC,MAAM,EAAEL,aADC;MAETM,UAAU,EAAEL,WAFH;MAGTM,kBAAkB,EAAE,KAHX;MAITC,mBAAmB,EAAE,KAJZ;MAKTC,SAAS,EAAEP;IALF,CAAX;IAOA,MAAKQ,YAAL,GAAoB,KAApB;IACA,MAAKC,MAAL,GAAc,IAAd;IACAxB,kBAAkB,CAACyB,WAAnB,CAA+B,oBAA/B,EAAqD,MAAKC,oBAAL,CAA0BC,IAA1B,+BAArD;IACA3B,kBAAkB,CAACyB,WAAnB,CAA+B,sBAA/B,EAAuD,MAAKG,qBAAL,CAA2BD,IAA3B,+BAAvD;IAXe;EAYhB;;;;WAED,8BAAqBE,KAArB,EAA4B;MAC1B,IACEC,MADF,GAEID,KAFJ,CACEC,MADF;MAGA,IAAMC,WAAW,qBAAmBD,MAApC;;MAEA,IAAI9B,kBAAkB,CAACgC,SAAnB,CAA6BD,WAA7B,EAA0CE,MAA1C,KAAqD,CAAzD,EAA4D,CAC3D;;MAEDjC,kBAAkB,CAACkC,IAAnB,CAAwBH,WAAxB,EAAqCF,KAArC;IACD;;;WAED,+BAAsBA,KAAtB,EAA6B;MAC3B,IACEC,MADF,GAEID,KAFJ,CACEC,MADF;MAGA,IAAMC,WAAW,uBAAqBD,MAAtC;;MAEA,IAAI9B,kBAAkB,CAACgC,SAAnB,CAA6BD,WAA7B,EAA0CE,MAA1C,KAAqD,CAAzD,EAA4D,CAC3D;;MAEDjC,kBAAkB,CAACkC,IAAnB,CAAwBH,WAAxB,EAAqCF,KAArC;IACD;;;WAED,oBAAWM,KAAX,EAAkB;MAChB,IAAI,KAAKZ,YAAT,EAAuB;QACrBtB,SAAS,CAAC,IAAD,CAAT,CAAgBmC,IAAhB,CAAqB,qCAArB;MACD,CAFD,MAEO;QACL,KAAKb,YAAL,GAAoB,IAApB;QACA,KAAKC,MAAL,GAAcW,KAAd;QACAjC,eAAe,CAAC,IAAD,CAAf,CAAsBmC,UAAtB,CAAiCF,KAAjC;MACD;IACF;;;WAED,yBAAgB;MACd,IAAI,CAAC,KAAKZ,YAAV,EAAwB;QACtBtB,SAAS,CAAC,IAAD,CAAT,CAAgBmC,IAAhB,CAAqB,4DAArB;MACD,CAFD,MAEO;QACLnC,SAAS,CAAC,IAAD,CAAT,CAAgBqC,IAAhB,CAAqB,oBAArB;QACApC,eAAe,CAAC,IAAD,CAAf,CAAsBqC,aAAtB,CAAoC,KAAKf,MAAzC;MACD;IACF;;;WAED,sBAAaM,MAAb,EAAqB;MACnB,OAAO,IAAI1B,YAAJ,CAAiB,IAAjB,EAAuB0B,MAAvB,CAAP;IACD;;;WAED,kBAASA,MAAT,EAAiB;MACf,OAAO,IAAIzB,aAAJ,CAAkB,IAAlB,EAAwByB,MAAxB,CAAP;IACD;;;;EAhEgC3B,U;;SAAda,K;AAmErB,OAAO,IAAMwB,OAAO,GAAG;EACrBhC,MAAM,EAANA,MADqB;EAErBC,aAAa,EAAbA,aAFqB;EAGrBH,SAAS,EAATA,SAHqB;EAIrBC,YAAY,EAAZA,YAJqB;EAKrBG,UAAU,EAAVA,UALqB;EAMrBE,uBAAuB,EAAvBA,uBANqB;EAOrBD,uBAAuB,EAAvBA;AAPqB,CAAhB"},"metadata":{},"sourceType":"module"}