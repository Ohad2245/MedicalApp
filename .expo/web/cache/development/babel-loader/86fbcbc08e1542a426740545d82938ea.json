{"ast":null,"code":"import confetti from 'canvas-confetti';\nexport var runFireworks = function runFireworks() {\n  var duration = 5 * 1000;\n  var animationEnd = Date.now() + duration;\n  var defaults = {\n    startVelocity: 30,\n    spread: 360,\n    ticks: 60,\n    zIndex: 0\n  };\n  function randomInRange(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n  var interval = setInterval(function () {\n    var timeLeft = animationEnd - Date.now();\n    if (timeLeft <= 0) {\n      return clearInterval(interval);\n    }\n    var particleCount = 50 * (timeLeft / duration);\n    confetti(Object.assign({}, defaults, {\n      particleCount: particleCount,\n      origin: {\n        x: randomInRange(0.1, 0.3),\n        y: Math.random() - 0.2\n      }\n    }));\n    confetti(Object.assign({}, defaults, {\n      particleCount: particleCount,\n      origin: {\n        x: randomInRange(0.7, 0.9),\n        y: Math.random() - 0.2\n      }\n    }));\n  }, 250);\n};","map":{"version":3,"names":["confetti","runFireworks","duration","animationEnd","Date","now","defaults","startVelocity","spread","ticks","zIndex","randomInRange","min","max","Math","random","interval","setInterval","timeLeft","clearInterval","particleCount","Object","assign","origin","x","y"],"sources":["C:/Users/PC/Desktop/MedicalApp/my-app/client/lib/utils.js"],"sourcesContent":["import confetti from 'canvas-confetti';\r\n\r\nexport const runFireworks = () => {\r\n  let duration = 5 * 1000;\r\n  let animationEnd = Date.now() + duration;\r\n  let defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\r\n\r\n  function randomInRange(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n\r\n  let interval = setInterval(function() {\r\n    let timeLeft = animationEnd - Date.now();\r\n\r\n    if (timeLeft <= 0) {\r\n      return clearInterval(interval);\r\n    }\r\n\r\n    let particleCount = 50 * (timeLeft / duration);\r\n    // since particles fall down, start a bit higher than random\r\n    confetti(Object.assign({}, defaults, { particleCount, origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 } }));\r\n    confetti(Object.assign({}, defaults, { particleCount, origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 } }));\r\n  }, 250);\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,iBAAiB;AAEtC,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;EAChC,IAAIC,QAAQ,GAAG,CAAC,GAAG,IAAI;EACvB,IAAIC,YAAY,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAGH,QAAQ;EACxC,IAAII,QAAQ,GAAG;IAAEC,aAAa,EAAE,EAAE;IAAEC,MAAM,EAAE,GAAG;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAE,CAAC;EAEvE,SAASC,aAAa,CAACC,GAAG,EAAEC,GAAG,EAAE;IAC/B,OAAOC,IAAI,CAACC,MAAM,EAAE,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;EAC1C;EAEA,IAAII,QAAQ,GAAGC,WAAW,CAAC,YAAW;IACpC,IAAIC,QAAQ,GAAGf,YAAY,GAAGC,IAAI,CAACC,GAAG,EAAE;IAExC,IAAIa,QAAQ,IAAI,CAAC,EAAE;MACjB,OAAOC,aAAa,CAACH,QAAQ,CAAC;IAChC;IAEA,IAAII,aAAa,GAAG,EAAE,IAAIF,QAAQ,GAAGhB,QAAQ,CAAC;IAE9CF,QAAQ,CAACqB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhB,QAAQ,EAAE;MAAEc,aAAa,EAAbA,aAAa;MAAEG,MAAM,EAAE;QAAEC,CAAC,EAAEb,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC;QAAEc,CAAC,EAAEX,IAAI,CAACC,MAAM,EAAE,GAAG;MAAI;IAAE,CAAC,CAAC,CAAC;IACxHf,QAAQ,CAACqB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhB,QAAQ,EAAE;MAAEc,aAAa,EAAbA,aAAa;MAAEG,MAAM,EAAE;QAAEC,CAAC,EAAEb,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC;QAAEc,CAAC,EAAEX,IAAI,CAACC,MAAM,EAAE,GAAG;MAAI;IAAE,CAAC,CAAC,CAAC;EAC1H,CAAC,EAAE,GAAG,CAAC;AACT,CAAC"},"metadata":{},"sourceType":"module"}